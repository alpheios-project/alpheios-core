/* eslint-env jest */
import GreekInput from '@/lib/utility/greek-input.js'

describe('greek-input.test.js', () => {

  console.error = function () {}
  console.log = function () {}
  console.warn = function () {}

  beforeEach(() => {
    jest.spyOn(console, 'error')
    jest.spyOn(console, 'log')
    jest.spyOn(console, 'warn')
  })
  afterEach(() => {
    jest.resetModules()
  })
  afterAll(() => {
    jest.clearAllMocks()
  })

  function test_char(input,expected)  {
    let result = GreekInput.change(input)
    expect(result).toEqual(expected)
  }

  it('1 Greek-Input - test', () => {
    let input = 'boule/u|hs'
    let result = GreekInput.change(input)
    expect(result).toEqual('βουλεύῃς')
  })

  it('2 Greek-Input - test all', () => {
    test_char('(/|A','ᾍ')
    test_char('(/A','Ἅ')
    test_char('(\\|A','ᾋ')
    test_char('(\\A','Ἃ')
    test_char('(=|A','ᾏ')
    test_char('(=A','Ἇ')
    test_char('(|A','ᾉ')
    test_char('(A','Ἁ')
    test_char(')/|A','ᾌ')
    test_char(')/A','Ἄ')
    test_char(')\\|A','ᾊ')
    test_char(')\\A','Ἂ')
    test_char(')=|A','ᾎ')
    test_char(')=A','Ἆ')
    test_char(')|A','ᾈ')
    test_char(')A','Ἀ')
    test_char('/A','Ά')
    test_char('\\A','Ὰ')
    test_char('|A','ᾼ')
    test_char('_A','Ᾱ')
    test_char('^A','Ᾰ')
    test_char('A','Α')
    test_char('(/|a','ᾅ')
    test_char('(/a','ἅ')
    test_char('(\\|a','ᾃ')
    test_char('(\\a','ἃ')
    test_char('(=|a','ᾇ')
    test_char('(=a','ἇ')
    test_char('(|a','ᾁ')
    test_char('(a','ἁ')
    test_char(')/|a','ᾄ')
    test_char(')/a','ἄ')
    test_char(')\\|a','ᾂ')
    test_char(')\\a','ἂ')
    test_char(')=|a','ᾆ')
    test_char(')=a','ἆ')
    test_char(')|a','ᾀ')
    test_char(')a','ἀ')
    test_char('/|a','ᾴ')
    test_char('/a','ά')
    test_char('\\|a','ᾲ')
    test_char('\\a','ὰ')
    test_char('=|a','ᾷ')
    test_char('=a','ᾶ')
    test_char('|a','ᾳ')
    test_char('_a','ᾱ')
    test_char('^a','ᾰ')
    test_char('a','α')
    test_char('B','Β')
    test_char('b','β')
    test_char('C','Ξ')
    test_char('c','ξ')
    test_char('D','Δ')
    test_char('d','δ')
    test_char('(/E','Ἕ')
    test_char('(\\E','Ἓ')
    test_char('(E','Ἑ')
    test_char(')/E','Ἔ')
    test_char(')\\E','Ἒ')
    test_char(')E','Ἐ')
    test_char('/E','Έ')
    test_char('\\E','Ὲ')
    test_char('E','Ε')
    test_char('(/e','ἕ')
    test_char('(\\e','ἓ')
    test_char('(e','ἑ')
    test_char(')/e','ἔ')
    test_char(')\\e','ἒ')
    test_char(')e','ἐ')
    test_char('/e','έ')
    test_char('\\e','ὲ')
    test_char('e','ε')
    test_char('F','Φ')
    test_char('f','φ')
    test_char('G','Γ')
    test_char('g','γ')
    test_char('(/|H','ᾝ')
    test_char('(/H','Ἥ')
    test_char('(\\|H','ᾛ')
    test_char('(\\H','Ἣ')
    test_char('(=|H','ᾟ')
    test_char('(=H','Ἧ')
    test_char('(|H','ᾙ')
    test_char('(H','Ἡ')
    test_char(')/|H','ᾜ')
    test_char(')/H','Ἤ')
    test_char(')\\|H','ᾚ')
    test_char(')\\H','Ἢ')
    test_char(')=|H','ᾞ')
    test_char(')=H','Ἦ')
    test_char(')|H','ᾘ')
    test_char(')H','Ἠ')
    test_char('/H','Ή')
    test_char('\\H','Ὴ')
    test_char('|H','ῌ')
    test_char('H','Η')
    test_char('(/|h','ᾕ')
    test_char('(/h','ἥ')
    test_char('(\\|h','ᾓ')
    test_char('(\\h','ἣ')
    test_char('(=|h','ᾗ')
    test_char('(=h','ἧ')
    test_char('(|h','ᾑ')
    test_char('(h','ἡ')
    test_char(')/|h','ᾔ')
    test_char(')/h','ἤ')
    test_char(')\\|h','ᾒ')
    test_char(')\\h','ἢ')
    test_char(')=|h','ᾖ')
    test_char(')=h','ἦ')
    test_char(')|h','ᾐ')
    test_char(')h','ἠ')
    test_char('/|h','ῄ')
    test_char('/h','ή')
    test_char('\\|h','ῂ')
    test_char('\\h','ὴ')
    test_char('=|h','ῇ')
    test_char('=h','ῆ')
    test_char('|h','ῃ')
    test_char('h','η')
    test_char('(/I','Ἵ')
    test_char('(\\I','Ἳ')
    test_char('(=I','Ἷ')
    test_char('(I','Ἱ')
    test_char(')/I','Ἴ')
    test_char(')\\I','Ἲ')
    test_char(')=I','Ἶ')
    test_char(')I','Ἰ')
    test_char('+I','Ϊ')
    test_char('/I','Ί')
    test_char('\\I','Ὶ')
    test_char('_I','Ῑ')
    test_char('^I','Ῐ')
    test_char('I','Ι')
    test_char('(/i','ἵ')
    test_char('(\\i','ἳ')
    test_char('(=i','ἷ')
    test_char('(i','ἱ')
    test_char(')/i','ἴ')
    test_char(')\\i','ἲ')
    test_char(')=i','ἶ')
    test_char(')i','ἰ')
    test_char('+/i','ΐ')
    test_char('+\\i','ῒ')
    test_char('+=i','ῗ')
    test_char('+i','ϊ')
    test_char('/i','ί')
    test_char('\\i','ὶ')
    test_char('=i','ῖ')
    test_char('_i','ῑ')
    test_char('^i','ῐ')
    test_char('i','ι')
    test_char('K','Κ')
    test_char('k','κ')
    test_char('L','Λ')
    test_char('l','λ')
    test_char('M','Μ')
    test_char('m','μ')
    test_char('N','Ν')
    test_char('n','ν')
    test_char('(/O','Ὅ')
    test_char('(\\O','Ὃ')
    test_char('(O','Ὁ')
    test_char(')/O','Ὄ')
    test_char(')\\O','Ὂ')
    test_char(')O','Ὀ')
    test_char('/O','Ό')
    test_char('\\O','Ὸ')
    test_char('O','Ο')
    test_char('(/o','ὅ')
    test_char('(\\o','ὃ')
    test_char('(o','ὁ')
    test_char(')/o','ὄ')
    test_char(')\\o','ὂ')
    test_char(')o','ὀ')
    test_char('/o','ό')
    test_char('\\o','ὸ')
    test_char('o','ο')
    test_char('P','Π')
    test_char('p','π')
    test_char('Q','Θ')
    test_char('q','θ')
    test_char('(R','Ῥ')
    test_char('R','Ρ')
    test_char('(r','ῥ')
    test_char(')r','ῤ')
    test_char('r','ρ')
    test_char('S','Σ')
    test_char('T','Τ')
    test_char('t','τ')
    test_char('(/U','Ὕ')
    test_char('(\\U','Ὓ')
    test_char('(=U','Ὗ')
    test_char('(U','Ὑ')
    test_char('+U','Ϋ')
    test_char('/U','Ύ')
    test_char('\\U','Ὺ')
    test_char('_U','Ῡ')
    test_char('^U','Ῠ')
    test_char('U','Υ')
    test_char('(/u','ὕ')
    test_char('(\\u','ὓ')
    test_char('(=u','ὗ')
    test_char('(u','ὑ')
    test_char(')/u','ὔ')
    test_char(')\\u','ὒ')
    test_char(')=u','ὖ')
    test_char(')u','ὐ')
    test_char('+/u','ΰ')
    test_char('+\\u','ῢ')
    test_char('+=u','ῧ')
    test_char('+u','ϋ')
    test_char('/u','ύ')
    test_char('\\u','ὺ')
    test_char('=u','ῦ')
    test_char('_u','ῡ')
    test_char('^u','ῠ')
    test_char('u','υ')
    test_char('V','Ϝ')
    test_char('v','ϝ')
    test_char('(/|W','ᾭ')
    test_char('(/W','Ὥ')
    test_char('(\\|W','ᾫ')
    test_char('(\\W','Ὣ')
    test_char('(=|W','ᾯ')
    test_char('(=W','Ὧ')
    test_char('(|W','ᾩ')
    test_char('(W','Ὡ')
    test_char(')/|W','ᾬ')
    test_char(')/W','Ὤ')
    test_char(')\\|W','ᾪ')
    test_char(')\\W','Ὢ')
    test_char(')=|W','ᾮ')
    test_char(')=W','Ὦ')
    test_char(')|W','ᾨ')
    test_char(')W','Ὠ')
    test_char('/W','Ώ')
    test_char('\\W','Ὼ')
    test_char('|W','ῼ')
    test_char('W','Ω')
    test_char('(/|w','ᾥ')
    test_char('(/w','ὥ')
    test_char('(\\|w','ᾣ')
    test_char('(\\w','ὣ')
    test_char('(=|w','ᾧ')
    test_char('(=w','ὧ')
    test_char('(|w','ᾡ')
    test_char('(w','ὡ')
    test_char(')/|w','ᾤ')
    test_char(')/w','ὤ')
    test_char(')\\|w','ᾢ')
    test_char(')\\w','ὢ')
    test_char(')=|w','ᾦ')
    test_char(')=w','ὦ')
    test_char(')|w','ᾠ')
    test_char(')w','ὠ')
    test_char('/|w','ῴ')
    test_char('/w','ώ')
    test_char('\\|w','ῲ')
    test_char('\\w','ὼ')
    test_char('=|w','ῷ')
    test_char('=w','ῶ')
    test_char('|w','ῳ')
    test_char('w','ω')
    test_char('X','Χ')
    test_char('x','χ')
    test_char('Y','Ψ')
    test_char('y','ψ')
    test_char('Z','Ζ')
    test_char('z','ζ')
    test_char('s','ς')
    test_char('sa','σα')
  })
})
