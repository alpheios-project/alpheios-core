!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var n in r)("object"==typeof exports?exports:e)[n]=r[n]}}(window,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t,r){var n=r(3),a=r(2);e.exports=function(e,t,r){var u=t&&r||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var s=(e=e||{}).random||(e.rng||n)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t)for(var i=0;i<16;++i)t[u+i]=s[i];return t||a(s)}},function(e,t,r){"use strict";r.r(t);var n={};r.d(n,"LANG_UNIT_WORD",function(){return a}),r.d(n,"LANG_UNIT_CHAR",function(){return u}),r.d(n,"LANG_DIR_LTR",function(){return s}),r.d(n,"LANG_DIR_RTL",function(){return i}),r.d(n,"LANG_UNDEFINED",function(){return o}),r.d(n,"LANG_LATIN",function(){return l}),r.d(n,"LANG_GREEK",function(){return c}),r.d(n,"LANG_ARABIC",function(){return d}),r.d(n,"LANG_PERSIAN",function(){return f}),r.d(n,"STR_LANG_CODE_UNDEFINED",function(){return g}),r.d(n,"STR_LANG_CODE_LAT",function(){return p}),r.d(n,"STR_LANG_CODE_LA",function(){return h}),r.d(n,"STR_LANG_CODE_GRC",function(){return m}),r.d(n,"STR_LANG_CODE_ARA",function(){return E}),r.d(n,"STR_LANG_CODE_AR",function(){return I}),r.d(n,"STR_LANG_CODE_FAS",function(){return y}),r.d(n,"STR_LANG_CODE_PER",function(){return A}),r.d(n,"STR_LANG_CODE_FA_IR",function(){return v}),r.d(n,"STR_LANG_CODE_FA",function(){return _}),r.d(n,"POFS_ADJECTIVE",function(){return S}),r.d(n,"POFS_ADVERB",function(){return w}),r.d(n,"POFS_ADVERBIAL",function(){return C}),r.d(n,"POFS_ARTICLE",function(){return D}),r.d(n,"POFS_CONJUNCTION",function(){return T}),r.d(n,"POFS_EXCLAMATION",function(){return b}),r.d(n,"POFS_INTERJECTION",function(){return O}),r.d(n,"POFS_NOUN",function(){return L}),r.d(n,"POFS_NOUN_PROPER",function(){return N}),r.d(n,"POFS_NUMERAL",function(){return V}),r.d(n,"POFS_PARTICLE",function(){return F}),r.d(n,"POFS_PREFIX",function(){return R}),r.d(n,"POFS_PREPOSITION",function(){return P}),r.d(n,"POFS_PRONOUN",function(){return M}),r.d(n,"POFS_SUFFIX",function(){return x}),r.d(n,"POFS_SUPINE",function(){return U}),r.d(n,"POFS_VERB",function(){return j}),r.d(n,"POFS_VERB_PARTICIPLE",function(){return B}),r.d(n,"GEND_MASCULINE",function(){return G}),r.d(n,"GEND_FEMININE",function(){return k}),r.d(n,"GEND_NEUTER",function(){return W}),r.d(n,"GEND_COMMON",function(){return K}),r.d(n,"GEND_ANIMATE",function(){return $}),r.d(n,"GEND_INANIMATE",function(){return q}),r.d(n,"GEND_PERSONAL_MASCULINE",function(){return z}),r.d(n,"GEND_ANIMATE_MASCULINE",function(){return H}),r.d(n,"GEND_INANIMATE_MASCULINE",function(){return J}),r.d(n,"COMP_POSITIVE",function(){return X}),r.d(n,"COMP_COMPARITIVE",function(){return Q}),r.d(n,"COMP_SUPERLATIVE",function(){return Y}),r.d(n,"CASE_ABESSIVE",function(){return Z}),r.d(n,"CASE_ABLATIVE",function(){return ee}),r.d(n,"CASE_ABSOLUTIVE",function(){return te}),r.d(n,"CASE_ACCUSATIVE",function(){return re}),r.d(n,"CASE_ADDIRECTIVE",function(){return ne}),r.d(n,"CASE_ADELATIVE",function(){return ae}),r.d(n,"CASE_ADESSIVE",function(){return ue}),r.d(n,"CASE_ADVERBIAL",function(){return se}),r.d(n,"CASE_ALLATIVE",function(){return ie}),r.d(n,"CASE_ANTESSIVE",function(){return oe}),r.d(n,"CASE_APUDESSIVE",function(){return le}),r.d(n,"CASE_AVERSIVE",function(){return ce}),r.d(n,"CASE_BENEFACTIVE",function(){return de}),r.d(n,"CASE_CARITIVE",function(){return fe}),r.d(n,"CASE_CAUSAL",function(){return ge}),r.d(n,"CASE_CAUSAL_FINAL",function(){return pe}),r.d(n,"CASE_COMITATIVE",function(){return he}),r.d(n,"CASE_DATIVE",function(){return me}),r.d(n,"CASE_DELATIVE",function(){return Ee}),r.d(n,"CASE_DIRECT",function(){return Ie}),r.d(n,"CASE_DISTRIBUTIVE",function(){return ye}),r.d(n,"CASE_DISTRIBUTIVE_TEMPORAL",function(){return Ae}),r.d(n,"CASE_ELATIVE",function(){return ve}),r.d(n,"CASE_ERGATIVE",function(){return _e}),r.d(n,"CASE_ESSIVE",function(){return Se}),r.d(n,"CASE_ESSIVE_FORMAL",function(){return we}),r.d(n,"CASE_ESSIVE_MODAL",function(){return Ce}),r.d(n,"CASE_EQUATIVE",function(){return De}),r.d(n,"CASE_EVITATIVE",function(){return Te}),r.d(n,"CASE_EXESSIVE",function(){return be}),r.d(n,"CASE_FINAL",function(){return Oe}),r.d(n,"CASE_FORMAL",function(){return Le}),r.d(n,"CASE_GENITIVE",function(){return Ne}),r.d(n,"CASE_ILLATIVE",function(){return Ve}),r.d(n,"CASE_INELATIVE",function(){return Fe}),r.d(n,"CASE_INESSIVE",function(){return Re}),r.d(n,"CASE_INSTRUCTIVE",function(){return Pe}),r.d(n,"CASE_INSTRUMENTAL",function(){return Me}),r.d(n,"CASE_INSTRUMENTAL_COMITATIVE",function(){return xe}),r.d(n,"CASE_INTRANSITIVE",function(){return Ue}),r.d(n,"CASE_LATIVE",function(){return je}),r.d(n,"CASE_LOCATIVE",function(){return Be}),r.d(n,"CASE_MODAL",function(){return Ge}),r.d(n,"CASE_MULTIPLICATIVE",function(){return ke}),r.d(n,"CASE_NOMINATIVE",function(){return We}),r.d(n,"CASE_PARTITIVE",function(){return Ke}),r.d(n,"CASE_PEGATIVE",function(){return $e}),r.d(n,"CASE_PERLATIVE",function(){return qe}),r.d(n,"CASE_POSSESSIVE",function(){return ze}),r.d(n,"CASE_POSTELATIVE",function(){return He}),r.d(n,"CASE_POSTDIRECTIVE",function(){return Je}),r.d(n,"CASE_POSTESSIVE",function(){return Xe}),r.d(n,"CASE_POSTPOSITIONAL",function(){return Qe}),r.d(n,"CASE_PREPOSITIONAL",function(){return Ye}),r.d(n,"CASE_PRIVATIVE",function(){return Ze}),r.d(n,"CASE_PROLATIVE",function(){return et}),r.d(n,"CASE_PROSECUTIVE",function(){return tt}),r.d(n,"CASE_PROXIMATIVE",function(){return rt}),r.d(n,"CASE_SEPARATIVE",function(){return nt}),r.d(n,"CASE_SOCIATIVE",function(){return at}),r.d(n,"CASE_SUBDIRECTIVE",function(){return ut}),r.d(n,"CASE_SUBESSIVE",function(){return st}),r.d(n,"CASE_SUBELATIVE",function(){return it}),r.d(n,"CASE_SUBLATIVE",function(){return ot}),r.d(n,"CASE_SUPERDIRECTIVE",function(){return lt}),r.d(n,"CASE_SUPERESSIVE",function(){return ct}),r.d(n,"CASE_SUPERLATIVE",function(){return dt}),r.d(n,"CASE_SUPPRESSIVE",function(){return ft}),r.d(n,"CASE_TEMPORAL",function(){return gt}),r.d(n,"CASE_TERMINATIVE",function(){return pt}),r.d(n,"CASE_TRANSLATIVE",function(){return ht}),r.d(n,"CASE_VIALIS",function(){return mt}),r.d(n,"CASE_VOCATIVE",function(){return Et}),r.d(n,"MOOD_ADMIRATIVE",function(){return It}),r.d(n,"MOOD_COHORTATIVE",function(){return yt}),r.d(n,"MOOD_CONDITIONAL",function(){return At}),r.d(n,"MOOD_DECLARATIVE",function(){return vt}),r.d(n,"MOOD_DUBITATIVE",function(){return _t}),r.d(n,"MOOD_ENERGETIC",function(){return St}),r.d(n,"MOOD_EVENTIVE",function(){return wt}),r.d(n,"MOOD_GENERIC",function(){return Ct}),r.d(n,"MOOD_GERUNDIVE",function(){return Dt}),r.d(n,"MOOD_HYPOTHETICAL",function(){return Tt}),r.d(n,"MOOD_IMPERATIVE",function(){return bt}),r.d(n,"MOOD_INDICATIVE",function(){return Ot}),r.d(n,"MOOD_INFERENTIAL",function(){return Lt}),r.d(n,"MOOD_INFINITIVE",function(){return Nt}),r.d(n,"MOOD_INTERROGATIVE",function(){return Vt}),r.d(n,"MOOD_JUSSIVE",function(){return Ft}),r.d(n,"MOOD_NEGATIVE",function(){return Rt}),r.d(n,"MOOD_OPTATIVE",function(){return Pt}),r.d(n,"MOOD_PARTICIPLE",function(){return Mt}),r.d(n,"MOOD_PRESUMPTIVE",function(){return xt}),r.d(n,"MOOD_RENARRATIVE",function(){return Ut}),r.d(n,"MOOD_SUBJUNCTIVE",function(){return jt}),r.d(n,"MOOD_SUPINE",function(){return Bt}),r.d(n,"NUM_SINGULAR",function(){return Gt}),r.d(n,"NUM_PLURAL",function(){return kt}),r.d(n,"NUM_DUAL",function(){return Wt}),r.d(n,"NUM_TRIAL",function(){return Kt}),r.d(n,"NUM_PAUCAL",function(){return $t}),r.d(n,"NUM_SINGULATIVE",function(){return qt}),r.d(n,"NUM_COLLECTIVE",function(){return zt}),r.d(n,"NUM_DISTRIBUTIVE_PLURAL",function(){return Ht}),r.d(n,"NRL_CARDINAL",function(){return Jt}),r.d(n,"NRL_ORDINAL",function(){return Xt}),r.d(n,"NRL_DISTRIBUTIVE",function(){return Qt}),r.d(n,"NURL_NUMERAL_ADVERB",function(){return Yt}),r.d(n,"ORD_1ST",function(){return Zt}),r.d(n,"ORD_2ND",function(){return er}),r.d(n,"ORD_3RD",function(){return tr}),r.d(n,"ORD_4TH",function(){return rr}),r.d(n,"ORD_5TH",function(){return nr}),r.d(n,"ORD_6TH",function(){return ar}),r.d(n,"ORD_7TH",function(){return ur}),r.d(n,"ORD_8TH",function(){return sr}),r.d(n,"ORD_9TH",function(){return ir}),r.d(n,"TENSE_AORIST",function(){return or}),r.d(n,"TENSE_FUTURE",function(){return lr}),r.d(n,"TENSE_FUTURE_PERFECT",function(){return cr}),r.d(n,"TENSE_IMPERFECT",function(){return dr}),r.d(n,"TENSE_PAST_ABSOLUTE",function(){return fr}),r.d(n,"TENSE_PERFECT",function(){return gr}),r.d(n,"TENSE_PLUPERFECT",function(){return pr}),r.d(n,"TENSE_PRESENT",function(){return hr}),r.d(n,"VKIND_TO_BE",function(){return mr}),r.d(n,"VKIND_COMPOUNDS_OF_TO_BE",function(){return Er}),r.d(n,"VKIND_TAKING_ABLATIVE",function(){return Ir}),r.d(n,"VKIND_TAKING_DATIVE",function(){return yr}),r.d(n,"VKIND_TAKING_GENITIVE",function(){return Ar}),r.d(n,"VKIND_TRANSITIVE",function(){return vr}),r.d(n,"VKIND_INTRANSITIVE",function(){return _r}),r.d(n,"VKIND_IMPERSONAL",function(){return Sr}),r.d(n,"VKIND_DEPONENT",function(){return wr}),r.d(n,"VKIND_SEMIDEPONENT",function(){return Cr}),r.d(n,"VKIND_PERFECT_DEFINITE",function(){return Dr}),r.d(n,"VOICE_ACTIVE",function(){return Tr}),r.d(n,"VOICE_PASSIVE",function(){return br}),r.d(n,"VOICE_MEDIOPASSIVE",function(){return Or}),r.d(n,"VOICE_IMPERSONAL_PASSIVE",function(){return Lr}),r.d(n,"VOICE_MIDDLE",function(){return Nr}),r.d(n,"VOICE_ANTIPASSIVE",function(){return Vr}),r.d(n,"VOICE_REFLEXIVE",function(){return Fr}),r.d(n,"VOICE_RECIPROCAL",function(){return Rr}),r.d(n,"VOICE_CAUSATIVE",function(){return Pr}),r.d(n,"VOICE_ADJUTATIVE",function(){return Mr}),r.d(n,"VOICE_APPLICATIVE",function(){return xr}),r.d(n,"VOICE_CIRCUMSTANTIAL",function(){return Ur}),r.d(n,"VOICE_DEPONENT",function(){return jr}),r.d(n,"TYPE_IRREGULAR",function(){return Br}),r.d(n,"TYPE_REGULAR",function(){return Gr}),r.d(n,"CLASS_PERSONAL",function(){return kr}),r.d(n,"CLASS_REFLEXIVE",function(){return Wr}),r.d(n,"CLASS_POSSESSIVE",function(){return Kr}),r.d(n,"CLASS_DEMONSTRATIVE",function(){return $r}),r.d(n,"CLASS_RELATIVE",function(){return qr}),r.d(n,"CLASS_INTERROGATIVE",function(){return zr}),r.d(n,"CLASS_GENERAL_RELATIVE",function(){return Hr}),r.d(n,"CLASS_INDEFINITE",function(){return Jr}),r.d(n,"CLASS_INTENSIVE",function(){return Xr}),r.d(n,"CLASS_RECIPROCAL",function(){return Qr});const a=Symbol("word"),u=Symbol("char"),s=Symbol("ltr"),i=Symbol("rtl"),o=Symbol("undefined"),l=Symbol("latin"),c=Symbol("greek"),d=Symbol("arabic"),f=Symbol("persian"),g="undefined",p="lat",h="la",m="grc",E="ara",I="ar",y="fas",A="per",v="fa-IR",_="fa",S="adjective",w="adverb",C="adverbial",D="article",T="conjunction",b="exclamation",O="interjection",L="noun",N="proper noun",V="numeral",F="particle",R="prefix",P="preposition",M="pronoun",x="suffix",U="supine",j="verb",B="verb participle",G="masculine",k="feminine",W="neuter",K="common",$="animate",q="inanimate",z="personal masculine",H="animate masculine",J="inanimate masculine",X="positive",Q="comparative",Y="superlative",Z="abessive",ee="ablative",te="absolutive",re="accusative",ne="addirective",ae="adelative",ue="adessive",se="adverbial",ie="allative",oe="antessive",le="apudessive",ce="aversive",de="benefactive",fe="caritive",ge="causal",pe="causal-final",he="comitative",me="dative",Ee="delative",Ie="direct",ye="distributive",Ae="distributive-temporal",ve="elative",_e="ergative",Se="essive",we="essive-formal",Ce="essive-modal",De="equative",Te="evitative",be="exessive",Oe="final",Le="formal",Ne="genitive",Ve="illative",Fe="inelative",Re="inessive",Pe="instructive",Me="instrumental",xe="instrumental-comitative",Ue="intransitive",je="lative",Be="locative",Ge="modal",ke="multiplicative",We="nominative",Ke="partitive",$e="pegative",qe="perlative",ze="possessive",He="postelative",Je="postdirective",Xe="postessive",Qe="postpositional",Ye="prepositional",Ze="privative",et="prolative",tt="prosecutive",rt="proximative",nt="separative",at="sociative",ut="subdirective",st="subessive",it="subelative",ot="sublative",lt="superdirective",ct="superessive",dt="superlative",ft="suppressive",gt="temporal",pt="terminative",ht="translative",mt="vialis",Et="vocative",It="admirative",yt="cohortative",At="conditional",vt="declarative",_t="dubitative",St="energetic",wt="eventive",Ct="generic",Dt="gerundive",Tt="hypothetical",bt="imperative",Ot="indicative",Lt="inferential",Nt="infinitive",Vt="interrogative",Ft="jussive",Rt="negative",Pt="optative",Mt="participle",xt="presumptive",Ut="renarrative",jt="subjunctive",Bt="supine",Gt="singular",kt="plural",Wt="dual",Kt="trial",$t="paucal",qt="singulative",zt="collective",Ht="distributive plural",Jt="cardinal",Xt="ordinal",Qt="distributive",Yt="numeral adverb",Zt="1st",er="2nd",tr="3rd",rr="4th",nr="5th",ar="6th",ur="7th",sr="8th",ir="9th",or="aorist",lr="future",cr="future perfect",dr="imperfect",fr="past absolute",gr="perfect",pr="pluperfect",hr="present",mr="to be",Er="compounds of to be",Ir="taking ablative",yr="taking dative",Ar="taking genitive",vr="transitive",_r="intransitive",Sr="impersonal",wr="deponent",Cr="semideponent",Dr="perfect definite",Tr="active",br="passive",Or="mediopassive",Lr="impersonal passive",Nr="middle",Vr="antipassive",Fr="reflexive",Rr="reciprocal",Pr="causative",Mr="adjutative",xr="applicative",Ur="circumstantial",jr="deponent",Br="irregular",Gr="regular",kr="personal",Wr="reflexive",Kr="possessive",$r="demonstrative",qr="relative",zr="interrogative",Hr="general relative",Jr="indefinite",Xr="intensive",Qr="reciprocal";class Yr{constructor(e,t,r,n){this.text=e,this.language=t,this.format=r,this.lemmaText=n}static readObject(e){return new Yr(e.text,e.language,e.format,e.lemmaText)}}var Zr=Yr;class en{constructor(e,t){this.lemmaWord=e,this.languageID=t,this.shortDefs=[],this.fullDefs=[]}static readObject(e){let t=new en(e.lemmaWord,e.languageID);for(let r of e.shortDefs)t.shortDefs.push(Zr.readObject(r));for(let r of e.fullDefs)t.fullDefs.push(Zr.readObject(r));return t}isEmpty(){return 0===this.shortDefs.length&&0===this.fullDefs.length}appendShortDefs(e){return e&&(Array.isArray(e)||(e=[e]),this.shortDefs=this.shortDefs.concat(e)),this.shortDefs}clearShortDefs(){this.shortDefs=[]}appendFullDefs(e){return e&&(Array.isArray(e)||(e=[e]),this.fullDefs=this.fullDefs.concat(e)),this.fullDefs}clearFullDefs(){this.fullDefs=[]}}var tn=class{constructor(e=[],t=!1){this.hash={};for(let t of e)this.map(t,t);return this.returnUnknown=t,this}map(e,t){if(!e)throw new Error("Imported value should not be empty.");if(!t)throw new Error("Library value should not be empty.");return this.hash[e]=t,this}has(e){return this.hash.hasOwnProperty(e)}get(e){if(this.has(e))return this.hash[e];if(this.returnUnknown)return e;throw new Error('A value "'+e+'" is not found in the importer.')}};class rn{constructor(e,t,r){if(!t||!Array.isArray(t))throw new Error("Values should be an array (or an empty array) of values.");if(!r)throw new Error("FeatureType constructor requires a language");this.type=e,this.languageID=void 0,this.languageCode=void 0,({languageID:this.languageID,languageCode:this.languageCode}=Sn.getLanguageAttrs(r)),this._orderIndex=[],this._orderLookup={};for(const[e,r]of t.entries())if(this._orderIndex.push(r),Array.isArray(r))for(let t of r)this[t]=new Cn(this.type,t,this.languageID),this._orderLookup[t]=e;else this[r]=new Cn(this.type,r,this.languageID),this._orderLookup[r]=e}get language(){return console.warn('Please use a "languageID" instead of a "language"'),this.languageCode}hasUnrestrictedValue(){return 1===this.orderedValues.length&&this.orderedValues[0]===rn.UNRESTRICTED_VALUE}get(e,t=1){if(e)return new Cn(this.type,[[e,t]],this.languageID);throw new Error("A non-empty value should be provided.")}getValues(e){return new Cn(this.type,e,this.languageID)}getFromImporter(e,t){let r;try{r=this.importer[e].get(t)}catch(e){r=this.get(t)}return r}addImporter(e){if(!e)throw new Error("Importer should have a non-empty name.");return this.importer=this.importer||{},this.importer[e]=this.importer[e]||new tn,this.importer[e]}get orderedFeatures(){return this.orderedValues.map(e=>new Cn(this.type,e,this.languageID))}get orderedValues(){return this._orderIndex}get orderLookup(){return this._orderLookup}set order(e){if(!e||Array.isArray(e)&&0===e.length)throw new Error("A non-empty list of values should be provided.");Array.isArray(e)||(e=[e]);for(let t of e)if(Array.isArray(t))for(let e of t){if(!this.hasOwnProperty(e.value))throw new Error('Trying to order an element with "'+e.value+'" value that is not stored in a "'+this.type+'" type.');if(e.type!==this.type)throw new Error('Trying to order an element with type "'+e.type+'" that is different from "'+this.type+'".');if(!Sn.compareLanguages(e.languageID,this.languageID))throw new Error(`Trying to order an element with language "${e.languageID.toString()}" that is different from "${this.languageID.toString()}"`)}else{if(!this.hasOwnProperty(t.value))throw new Error('Trying to order an element with "'+t.value+'" value that is not stored in a "'+this.type+'" type.');if(t.type!==this.type)throw new Error('Trying to order an element with type "'+t.type+'" that is different from "'+this.type+'".');if(!Sn.compareLanguages(t.languageID,this.languageID))throw new Error(`Trying to order an element with language "${t.languageID.toString()}" that is different from "${this.languageID.toString()}"`)}this._orderLookup={},this._orderIndex=[];for(const[t,r]of e.entries())if(Array.isArray(r)){let e=[];for(const n of r)this._orderLookup[n.value]=t,e.push(n.value);this._orderIndex[t]=e}else this._orderLookup[r.value]=t,this._orderIndex[t]=r.value}}rn.UNRESTRICTED_VALUE=Symbol("unrestricted");var nn=rn;var an=class{constructor(e,t,r={}){for(let r of t)this[r]=e[r];Object.assign(this,r)}hasFeatureValue(e,t){return!!this.hasOwnProperty(e)&&this[e].values.includes(t)}toString(){let e=[];for(let t of Object.getOwnPropertyNames(this).sort()){let r=this[t]instanceof Cn?this[t].values.sort().join(","):this[t];e.push(r)}return e.join(" ")}};var un=class{constructor(e,t=[],r=null){this.groupingKey=e,this.inflections=t}append(e){this.inflections.push(e)}};class sn{constructor(){this.context_backward=sn.contextBackward}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return s}static get baseUnit(){return a}get contextForward(){return console.warn('Please use static "contextForward" instead'),this.constructor.contextForward}get contextBackward(){return console.warn('Please use static "contextBackward" instead'),this.constructor.contextBackward}get direction(){return console.warn('Please use static "direction" instead'),this.constructor.direction}get baseUnit(){return console.warn('Please use static "baseUnit" instead'),this.constructor.baseUnit}get features(){return console.warn('Please use individual "getFeatureType" or static "features" instead'),this.constructor.features}static get featureNames(){return this.featureValues.keys()}static typeFeature(e){if(this.typeFeatures.has(e))return this.typeFeatures.get(e);throw new Error(`Type feature "${e}" is not defined within "${this}"`)}static get typeFeatures(){console.warn("This getter must be defined in a descendant class")}static get features(){let e={};for(const t of this.featureNames)e[t]=this.getFeature(t);return e}static get languageID(){return o}static get languageCode(){return g}static get languageCodes(){return[]}static get codes(){return console.warn('Use static "languageCodes" instead'),this.languageCodes}get codes(){return console.warn('Please use a static version of "codes" instead'),this.constructor.languageCodes}toCode(){return console.warn('Please use a static "languageCode" instead'),this.constructor.languageCode}static toCode(){return console.warn('Please use a static "languageCode" instead'),this.languageCode}static get featureValues(){return new Map([[Cn.types.part,[w,C,S,D,T,b,O,L,V,F,R,P,M,x,U,j,B]],[Cn.types.gender,[G,k,W]],[Cn.types.type,[Gr,Br]],[Cn.types.person,[Zt,er,tr]],[Cn.types.age,[]],[Cn.types.area,[]],[Cn.types.source,[]],[Cn.types.frequency,[]],[Cn.types.geo,[]],[Cn.types.pronunciation,[]],[Cn.types.kind,[]],[Cn.types.comparison,[]],[Cn.types.morph,[]],[Cn.types.stemtype,[]],[Cn.types.derivtype,[]]])}static get sourceLanguage(){return console.warn("Please use languageID directly"),this.languageID}get sourceLanguage(){return console.warn("Please use languageID directly"),this.constructor.languageID}static getFeatureType(e){console.warn("Please use getFeature instead");let t=this.featureValues;if(t.has(e))return new nn(e,t.get(e),this.languageID);throw new Error(`Feature "${e}" is not defined`)}static getFeature(e){let t=this.featureValues;if(t.has(e)){let r=t.get(e);return new Cn(e,r,this.languageID,1,r)}throw new Error(`Feature "${e}" is not defined`)}_initializeFeatures(){let e={};for(const t of this.constructor.featureValues.keys())e[t]=this.constructor.getFeature(t);return e}grammarFeatures(){return console.warn('Please use a static version of "grammarFeatures" instead'),this.constructor.grammarFeatures()}static grammarFeatures(){return[]}static canInflect(e){return!1}static supportsLanguage(e){return this.languageCodes.includes[e]}static normalizeWord(e){return e}static alternateWordEncodings(e,t=null,r=null,n=null){return[]}alternateWordEncodings(e,t,r,n){return console.warn('Please use static "alternateWordEncodings" instead'),this.constructor.alternateWordEncodings(e,t,r,n)}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}getPunctuation(){return console.warn('Please use a static version of "getPunctuation"'),this.constructor.getPunctuation()}toString(){return String(this.constructor.languageCode)}isEqual(e){return Sn.compareLanguages(this.languageID,e.languageID)}static hasCode(e){if(this.isLanguageCode(e))return this.languageCodes.includes(e);throw new Error(`Format of a "${e}" is incorrect`)}static isLanguageID(e){return"symbol"==typeof e}static isLanguageCode(e){return!sn.isLanguageID(e)}canInflect(e){return console.warn('Please use a static version of "canInflect" instead'),this.constructor.canInflect(e)}static groupInflectionsForDisplay(e){let t=new Map,r=this.aggregateInflectionsForDisplay(e);for(let e of r){let r=new an(e,[Cn.types.part,Cn.types.declension,Cn.types.dialect,Cn.types.comparison],{prefix:e.prefix,suffix:e.suffix,stem:e.stem}),n=r.toString();t.has(n)?t.get(n).append(e):t.set(n,new un(r,[e]))}for(let e of t){let t=new Map;for(let r of e[1].inflections){let e,n=!1;r[Cn.types.grmCase]?(e=Cn.types.number,n=!0):e=r[Cn.types.tense]?Cn.types.tense:r[Cn.types.part]===j?Cn.types.part:r[Cn.types.part]===w?Cn.types.part:"misc";let a=new an(r,[e],{isCaseInflectionSet:n}),u=a.toString();t.has(u)?t.get(u).append(r):t.set(u,new un(a,[r]))}for(let e of t){let t=new Map,r=new Map;for(let n of e[1].inflections){let e=n[Cn.types.grmCase]?Math.max(n[Cn.types.grmCase].items.map(e=>e.sortOrder)):1,a=new an(n,[Cn.types.tense,Cn.types.voice]),u=a.toString();t.has(u)?t.get(u).append(n):(t.set(u,new un(a,[n],e)),r.set(u,e))}e[1].inflections=[];let n=Array.from(t.keys()).sort((e,t)=>{let n=r.get(e),a=r.get(t);return n>a?-1:a>n?1:0});for(let r of n)e[1].inflections.push(t.get(r))}for(let e of t){let t=e[1];for(let e of t.inflections){let t=new Map;for(let r of e.inflections){let e=new an(r,[Cn.types.grmCase,Cn.types.comparison,Cn.types.gender,Cn.types.number,Cn.types.person,Cn.types.tense,Cn.types.mood,Cn.types.voice]),n=e.toString();t.has(n)?t.get(n).append(r):t.set(n,new un(e,[r]))}e.inflections=Array.from(t.values())}}e[1].inflections=Array.from(t.values())}return Array.from(t.values())}static aggregateInflectionsForDisplay(e){return e}groupInflectionsForDisplay(e){return console.warn('Please use a static version of "groupInflectionsForDisplay" instead'),this.constructor.groupInflectionsForDisplay(e)}}var on=sn;let ln=new Map,cn=!1;class dn extends on{static get languageID(){return l}static get languageCode(){return p}static get languageCodes(){return[h,p]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return s}static get baseUnit(){return a}static get featureValues(){return new Map([...on.featureValues,[Cn.types.grmClass,[kr,Wr,Kr,$r,qr,zr]],[Cn.types.number,[Gt,kt]],[Cn.types.grmCase,[We,Ne,me,re,ee,Be,Et]],[Cn.types.declension,[Zt,er,tr,rr,nr]],[Cn.types.tense,[hr,dr,lr,gr,pr,cr]],[Cn.types.voice,[Tr,br]],[Cn.types.mood,[Ot,jt,bt,Mt,Bt,Dt,Mt,Nt]],[Cn.types.conjugation,[Zt,er,tr,rr]]])}static get typeFeatures(){return cn||this.initTypeFeatures(),ln}static initTypeFeatures(){for(const e of this.featureNames)ln.set(e,this.getFeature(e));cn=!0}static grammarFeatures(){return[Cn.types.part,Cn.types.grmCase,Cn.types.mood,Cn.types.declension,Cn.types.tense]}static canInflect(e){return!0}static normalizeWord(e){return e&&(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/[\u00c0\u00c1\u00c2\u00c3\u00c4\u0100\u0102]/g,"A")).replace(/[\u00c8\u00c9\u00ca\u00cb\u0112\u0114]/g,"E")).replace(/[\u00cc\u00cd\u00ce\u00cf\u012a\u012c]/g,"I")).replace(/[\u00d2\u00d3\u00d4\u00df\u00d6\u014c\u014e]/g,"O")).replace(/[\u00d9\u00da\u00db\u00dc\u016a\u016c]/g,"U")).replace(/[\u00c6\u01e2]/g,"AE")).replace(/[\u0152]/g,"OE")).replace(/[\u00e0\u00e1\u00e2\u00e3\u00e4\u0101\u0103]/g,"a")).replace(/[\u00e8\u00e9\u00ea\u00eb\u0113\u0115]/g,"e")).replace(/[\u00ec\u00ed\u00ee\u00ef\u012b\u012d\u0129]/g,"i")).replace(/[\u00f2\u00f3\u00f4\u00f5\u00f6\u014d\u014f]/g,"o")).replace(/[\u00f9\u00fa\u00fb\u00fc\u016b\u016d]/g,"u")).replace(/[\u00e6\u01e3]/g,"ae")).replace(/[\u0153]/g,"oe")),e}static alternateWordEncodings(e,t=null,r=null,n=null){return[]}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}static getInflectionConstraints(e){let t={fullFormBased:!1,suffixBased:!1,pronounClassRequired:!1};return e.hasOwnProperty(Cn.types.part)?e[Cn.types.part].value===M?t.fullFormBased=!0:t.suffixBased=!0:console.warn("Unable to set grammar: part of speech data is missing or is incorrect",e[Cn.types.part]),t}}let fn=new Map,gn=!1;class pn extends on{static get languageID(){return c}static get languageCode(){return m}static get languageCodes(){return[m]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return s}static get baseUnit(){return a}static get featureValues(){return new Map([...on.featureValues,[Cn.types.grmClass,[$r,Hr,Jr,Xr,zr,kr,Kr,Qr,Wr,qr]],[Cn.types.number,[Gt,kt,Wt]],[Cn.types.grmCase,[We,Ne,me,re,Et]],[Cn.types.declension,[Zt,er,tr]],[Cn.types.tense,[hr,dr,lr,gr,pr,cr,or]],[Cn.types.voice,[br,Tr,Or,Nr]],[Cn.types.mood,[Ot,jt,Pt,bt]],[Cn.types.dialect,["attic","epic","doric"]]])}static get typeFeatures(){return gn||this.initTypeFeatures(),fn}static initTypeFeatures(){for(const e of this.featureNames)fn.set(e,this.getFeature(e));gn=!0}static canInflect(e){return!0}static grammarFeatures(){return[Cn.types.part,Cn.types.grmCase,Cn.types.mood,Cn.types.declension,Cn.types.tense,Cn.types.voice]}static normalizeWord(e){return e?e.normalize("NFC"):e}static alternateWordEncodings(e,t=null,r=null,n=null){let a=pn.normalizeWord(e).toLocaleLowerCase(),u=a.replace(/[\u{1FB0}\u{1FB1}]/gu,"α").replace(/[\u{1FB8}\u{1FB9}]/gu,"Α").replace(/[\u{1FD0}\u{1FD1}]/gu,"ι").replace(/[\u{1FD8}\u{1FD9}]/gu,"Ι").replace(/[\u{1FE0}\u{1FE1}]/gu,"υ").replace(/[\u{1FE8}\u{1FE9}]/gu,"Υ").replace(/[\u{00AF}\u{0304}\u{0306}]/gu,""),s=a.replace(/\u{0390}/gu,"ί").replace(/\u{03AA}/gu,"Ι").replace(/\u{03AB}/gu,"Υ").replace(/\u{03B0}/gu,"ύ").replace(/\u{03CA}/gu,"ι").replace(/\u{03CB}/gu,"υ").replace(/\u{1FD2}/gu,"ὶ").replace(/\u{1FD3}/gu,"ί").replace(/\u{1FD7}/gu,"ῖ").replace(/\u{1FE2}/gu,"ὺ").replace(/\u{1FE3}/gu,"ύ").replace(/\u{1FE7}/gu,"ῦ").replace(/\u{1FC1}/gu,"῀").replace(/\u{1FED}/gu,"`").replace(/\u{1FEE}/gu,"´").replace(/[\u{00A8}\u{0308}]/gu,"");return"strippedDiaeresis"===n?[s]:[u]}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}static getInflectionConstraints(e){let t={fullFormBased:!1,suffixBased:!1,pronounClassRequired:!1};return e.hasOwnProperty(Cn.types.part)?e[Cn.types.part].value===M?t.fullFormBased=!0:t.suffixBased=!0:console.warn("Unable to set grammar: part of speech data is missing or is incorrect",e[Cn.types.part]),t.pronounClassRequired=Sn.compareLanguages(pn.languageID,e.languageID)&&e.hasOwnProperty(Cn.types.part)&&e[Cn.types.part].value===M,t}static getPronounClasses(e,t,r=!0){let n=new Set,a=e.filter(e=>{let n=!1;return e.value&&(n=r?pn.normalizeWord(e.value)===pn.normalizeWord(t):e.value===t),n});for(const e of a)if(e.features.hasOwnProperty(Cn.types.grmClass))for(const t of e.features[Cn.types.grmClass].values)n.add(t);if(n.size>0)return new Cn(Cn.types.grmClass,Array.from(n),pn.languageID)}}let hn=new Map,mn=!1;class En extends on{static get languageID(){return d}static get languageCode(){return E}static get languageCodes(){return[E,I]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return i}static get baseUnit(){return a}static get typeFeatures(){return mn||this.initTypeFeatures(),hn}static initTypeFeatures(){for(const e of this.featureNames)hn.set(e,this.getFeature(e));mn=!0}static canInflect(e){return!1}static alternateWordEncodings(e,t=null,r=null,n=null){let a=e.replace(/[\u{064B}\u{064C}\u{064D}\u{0640}]/gu,""),u=a.replace(/[\u{0622}\u{0623}\u{0625}]/gu,"ا"),s=u.replace(/[\u{064E}\u{064F}\u{0650}\u{0670}\u{0671}]/gu,""),i=s.replace(/\u{0651}/gu,""),o=i.replace(/\u{0652}/gu,""),l=o.replace(/\u{0627}/gu,""),c=new Map([["tanwin",a],["hamza",u],["harakat",s],["shadda",i],["sukun",o],["alef",l]]);return null!==n&&c.has(n)?[c.get(n)]:Array.from(c.values())}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}static aggregateInflectionsForDisplay(e){let t=[],r={[L]:[],[S]:[],[N]:[]};for(let n of e)n[Cn.types.morph]&&n[Cn.types.morph].value.match(/ADJ[uaiNK]/)?r[S].push(n):n[Cn.types.morph]&&n[Cn.types.morph].value.match(/NOUN[uaiNK]/)?r[L].push(n):n[Cn.types.morph]&&n[Cn.types.morph].value.match(/NOUN_PROP[uaiNK]/)?r[N].push(n):(n.example=null,t.push(n));for(let e of Object.keys(r)){1!==t.filter(t=>t[Cn.types.part].value===e).length&&t.push(...r[e])}return t}}let In=new Map,yn=!1;class An extends on{static get languageID(){return f}static get languageCode(){return A}static get languageCodes(){return[A,y,_,v]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return i}static get baseUnit(){return a}static get typeFeatures(){return yn||this.initTypeFeatures(),In}static initTypeFeatures(){for(const e of this.featureNames)In.set(e,this.getFeature(e));yn=!0}static canInflect(e){return!1}static alternateWordEncodings(e,t=null,r=null,n=null){return[]}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}}const vn=new Map([[h,dn],[p,dn],[m,pn],[E,En],[I,En],[A,An]]);class _n{static supportsLanguage(e){return e="symbol"==typeof e?_n.getLanguageCodeFromId(e):e,vn.has(e)}static getLanguageModel(e){let t=_n.getLanguageCodeFromId(e);return vn.has(t)?vn.get(t):on}static getLanguageForCode(e=null){let t=vn.get(e);return t?new t:new on}static getLanguageIdFromCode(e){for(const t of vn.values())if(t.hasCode(e))return t.languageID;return o}static getLanguageCodeFromId(e){for(const t of vn.values())if(t.languageID===e)return t.languageCode;return g}static getLanguageAttrs(e){return"symbol"==typeof e?{languageID:e,languageCode:_n.getLanguageCodeFromId(e)}:{languageID:_n.getLanguageIdFromCode(e),languageCode:e}}static compareLanguages(e,t){return(e="symbol"==typeof e?_n.getLanguageCodeFromId(e):e)===(t="symbol"==typeof t?_n.getLanguageCodeFromId(t):t)}}var Sn=_n;const wn={en:{feminine:{full:"feminine",abbr:"f."},masculine:{full:"masculine",abbr:"m."},neuter:{full:"neuter",abbr:"n."},nominative:{full:"nominative",abbr:"nom."},accusative:{full:"accusative",abbr:"acc."},genitive:{full:"genitive",abbr:"gen."},vocative:{full:"vocative",abbr:"voc."},ablative:{full:"ablative",abbr:"abl."},locative:{full:"locative",abbr:"loc."},dative:{full:"dative",abbr:"dat."},positive:{full:"positive",abbr:"pos."},comparative:{full:"comparative",abbr:"com."},superlative:{full:"superlative",abbr:"sup."},singular:{full:"singular",abbr:"s."},plural:{full:"plural",abbr:"p."},dual:{full:"dual",abbr:"dl."},present:{full:"present",abbr:"pr."},imperfect:{full:"imperfect",abbr:"imp."},perfect:{full:"perfect",abbr:"perf."},plusquamperfect:{full:"plusquamperfect",abbr:"pqpf."},"future perfect":{full:"future perfect",abbr:"fex."},future:{full:"future",abbr:"fut."},aorist:{full:"aorist",abbr:"aor."},indicative:{full:"indicative",abbr:"ind."},subjunctive:{full:"subjunctive",abbr:"sub."},infinitive:{full:"infinitive",abbr:"inf."},imperative:{full:"imperative",abbr:"imp."},supine:{full:"supine",abbr:"sup."},participle:{full:"participle",abbr:"par."},optative:{full:"optative",abbr:"opt."},active:{full:"active",abbr:"act."},passive:{full:"passive",abbr:"pass."},middle:{full:"middle",abbr:"mid."},mediopassive:{full:"mediopassive",abbr:"mp."},deponens:{full:"deponens",abbr:"dep."}}};class Cn{constructor(e,t,r,n=1,a=[]){if(!Cn.isAllowedType(e))throw new Error('Features of "'+e+'" type are not supported.');if(!t)throw new Error("Feature should have a non-empty value(s).");if(!r)throw new Error("No language ID is provided");this.type=e,this.languageID=r,this.sortOrder=n,this.allowedValues=a,this._data=Cn.dataValuesFromInput(t),this.sort()}static dataValuesFromInput(e){let t;return(t=Array.isArray(e)?Array.isArray(e[0])?e:e.map((t,r)=>[t,e.length-r]):[[e,this.defaultSortOrder]]).map(e=>({value:e[0],sortOrder:Number.parseInt(e[1])}))}static newFromFtr(e){}static get types(){return{word:"word",fullForm:"full form",hdwd:"headword",part:"part of speech",number:"number",case:"case",grmCase:"case",declension:"declension",gender:"gender",type:"type",class:"class",grmClass:"class",conjugation:"conjugation",comparison:"comparison",tense:"tense",voice:"voice",mood:"mood",person:"person",frequency:"frequency",meaning:"meaning",source:"source",footnote:"footnote",dialect:"dialect",note:"note",pronunciation:"pronunciation",age:"age",area:"area",geo:"geo",kind:"kind",derivtype:"derivtype",stemtype:"stemtype",morph:"morph",var:"var"}}static isAllowedType(e){return Object.values(this.types).includes(`${e}`)}static get defaultSortOrder(){return 1}static get joinSeparator(){return" "}static get defaultImporterName(){return"default"}get allowsUnrestrictedValues(){return 0===this.allowedValues.length}sort(){this._data.sort((e,t)=>e.sortOrder!==t.sortOrder?t.sortOrder-e.sortOrder:e.value.localeCompare(t.value))}compareTo(e){return e._data[0].sortOrder-this._data[0].sortOrder}get items(){return this._data}get value(){return this.values.join(this.constructor.joinSeparator)}get values(){return this._data.map(e=>e.value)}getValue(e){return this._data.find(t=>t.value===e)}get valQty(){return this._data.length}get isEmpty(){return 0===this.valQty}get isSingle(){return 1===this.valQty}get isMultiple(){return this.valQty>1}toString(){return this.value}hasValue(e){return this.values.includes(e)}hasValues(e){let t=!0;for(let r of e)t=t&&this.hasValue(r);return t}hasSomeValues(e){let t=!1;for(let r of e)t=t||this.hasValue(r);return t}get valuesUnrestricted(){return 0===this.allowedValues.length}isEqual(e){return this.type===e.type&&Sn.compareLanguages(this.languageID,e.languageID)&&this.value===e.value}addValue(e,t=this.constructor.defaultSortOrder){return this.hasValue(e)?console.warn(`Value "${e}" already exists. If you want to change it, use "getValue" to access it directly.`):(this._data.push({value:e,sortOrder:t}),this.sort()),this}addValues(e){let t=this.constructor.dataValuesFromInput(e),r=t.map(e=>e.value);return this.hasSomeValues(r)?console.warn(`One or several values from "${r}" already exist. If you want to change it, use "getValue" to access a value directly.`):(this._data=this._data.concat(t),this.sort()),this}removeValue(e){console.warn("This feature is not implemented yet")}createFeature(e,t=this.constructor.defaultSortOrder){return new Cn(this.type,[[e,t]],this.languageID,this.sortOrder,this.allowedValues)}createFeatures(e){return new Cn(this.type,e,this.languageID,this.sortOrder,this.allowedValues)}getCopy(){let e=this._data.map(e=>[e.value,e.sortOrder]);return new Cn(this.type,e,this.languageID,this.sortOrder,this.allowedValues.slice())}toLocaleStringAbbr(e="en"){return this.values.map(t=>wn[e][t]?wn[e][t].abbr:t).join(this.constructor.joinSeparator)}addImporter(e=new tn,t=this.constructor.defaultImporterName){return this.importers||(this.importers=new Map),this.importers.set(t,e),e}getImporter(e=this.constructor.defaultImporterName){if(!this.importers||!this.importers.has(e))throw new Error(`Importer "${e}" does not exist`);return this.importers.get(e)}addFromImporter(e,t=this.constructor.defaultImporterName){if(!this.importers||!this.importers.has(t))throw new Error(`Importer "${t}" does not exist`);const r=this.importers.get(t);return e=this.constructor.dataValuesFromInput(e),this._data.push(...e.map(e=>({value:r.get(e.value),sortOrder:e.sortOrder}))),this.sort(),this}createFromImporter(e,t=this.constructor.defaultImporterName){if(!this.importers||!this.importers.has(t))throw new Error(`Importer "${t}" does not exist`);const r=this.importers.get(t);Array.isArray(e)||(e=[e]);let n=e.map(e=>r.get(e));return n=n.reduce((e,t)=>e.concat(t),[]),new Cn(this.type,n,this.languageID,this.sortOrder,this.allowedValues)}}class Dn{constructor(e,t,r,n=1){if(!Dn.types.isAllowed(t))throw new Error('Features of "'+t+'" type are not supported.');if(!e)throw new Error("Feature should have a non-empty value.");if(!t)throw new Error("Feature should have a non-empty type.");if(!r)throw new Error("Feature constructor requires a language");this.value=e,this.type=t,this.languageID=void 0,this.languageCode=void 0,({languageID:this.languageID,languageCode:this.languageCode}=Sn.getLanguageAttrs(r)),this.sortOrder=n}get language(){return console.warn('Please use a "languageID" instead of a "language"'),this.languageCode}isEqual(e){if(Array.isArray(e.value)){if(!Array.isArray(this.value)||this.value.length!==e.value.length)return!1;let t=this.type===e.type&&Sn.compareLanguages(this.languageID,e.languageID);return t=t&&this.value.every(function(t,r){return t===e.value[r]})}return Sn.compareLanguages(this.languageID,e.languageID)&&this.type===e.type&&this.value===e.value}isSubsetof(e){Array.isArray(e)||(e=[e]);let t=e[0].languageID,r=e[0].type,n=e.map(e=>e.value);return!(!Sn.compareLanguages(this.languageID,t)||this.type!==r||!n.includes(this.value))}hasValue(e){return Array.isArray(this.value)?this.value.includes(e):this.value===e}toString(){return Array.isArray(this.value)?this.value.join(","):this.value}toLocaleStringAbbr(e="en"){return Array.isArray(this.value)?this.value.map(t=>this.toLocaleStringAbbr(t,e)):wn[e][this.value].abbr}static toFeature(e){if(Array.isArray(e)){if(!(e[0]instanceof Cn)){const t=e[0].type,r=e[0].languageID,n=e.map(e=>e.value);return new Cn(t,n,r)}}else if(!(e instanceof Cn))return new Cn(e.type,e.value,e.languageID);return e}}Dn.types={word:"word",part:"part of speech",number:"number",case:"case",grmCase:"case",declension:"declension",gender:"gender",type:"type",class:"class",grmClass:"class",conjugation:"conjugation",comparison:"comparison",tense:"tense",voice:"voice",mood:"mood",person:"person",frequency:"frequency",meaning:"meaning",source:"source",footnote:"footnote",dialect:"dialect",note:"note",pronunciation:"pronunciation",age:"age",area:"area",geo:"geo",kind:"kind",derivtype:"derivtype",stemtype:"stemtype",morph:"morph",var:"var",isAllowed(e){let t=`${e}`;return Object.values(this).includes(t)}};var Tn=Dn;var bn=class{constructor(e=[]){this._features=[],this._types={},this.add(e)}add(e){if(!e||!Array.isArray(e))throw new Error("Features must be defined and must come in an array.");for(let t of e)this._features.push(t),this._types[t.type]=t}get items(){return this._features}forEach(e){this._features.forEach(e)}ofType(e){if(this.hasType(e))return this._types[e]}hasType(e){return this._types.hasOwnProperty(e)}};class On{constructor(e,t,r=[]){if(!e)throw new Error("Lemma should not be empty.");this.lemmaWord=e.word,this.languageCode=t,this.glosses=r}static readTranslationFromJSONList(e,t,r){if(!r||!Array.isArray(r))throw new Error("Recieved not proper translation list",r);let n=r.find(function(t){return t.in===e.word});return new On(e,t,n.translations)}static loadTranslations(e,t,r){e.addTranslation(this.readTranslationFromJSONList(e,t,r))}}var Ln=On,Nn=r(0),Vn=r.n(Nn);class Fn{constructor(e,t,r=[],n={}){if(!e)throw new Error("Word should not be empty.");if(!t)throw new Error("Language should not be empty.");this.languageID=void 0,this.languageCode=void 0,({languageID:this.languageID,languageCode:this.languageCode}=Sn.getLanguageAttrs(t)),this.word=e,this.principalParts=r,this.features={},this.ID=Vn()()}get language(){return console.warn('Please use "languageID" instead of "language"'),this.languageCode}static readObject(e){return new Fn(e.word,e.language,e.principalParts,e.pronunciation)}set feature(e){if(console.warn('Please use "addFeature" instead'),!e)throw new Error("feature data cannot be empty.");Array.isArray(e)||(e=[e]);let t=e[0].type;this.features[t]=[];for(let r of e){if(!(r instanceof Cn))throw new Error("feature data must be a Feature object.");if(!Sn.compareLanguages(r.languageID,this.languageID))throw new Error('Language "'+r.languageID.toString()+'" of a feature does not match a language "'+this.languageID.toString()+'" of a Lemma object.');this.features[t].push(r)}}addFeature(e){if(!e)throw new Error("feature data cannot be empty.");if(!(e instanceof Cn))throw new Error("feature data must be a Feature object.");if(!Sn.compareLanguages(e.languageID,this.languageID))throw new Error('Language "'+e.languageID.toString()+'" of a feature does not match a language "'+this.languageID.toString()+'" of a Lemma object.');this.features[e.type]=e}addFeatures(e){if(!Array.isArray(e))throw new Error("Features must be in an array");for(let t of e)this.addFeature(t)}addTranslation(e){if(!e)throw new Error("translation data cannot be empty.");if(!(e instanceof Ln))throw new Error("translation data must be a Translation object.");this.translation=e}}var Rn=Fn;class Pn{constructor(e=null,t,r=null,n=null,a=null){if(!e&&!r)throw new Error("At least stem or suffix must be defined");if(!t)throw new Error("Language should not be empty.");if(!Sn.supportsLanguage(t))throw new Error(`language ${t} not supported.`);this.stem=e,this.languageID=void 0,this.languageCode=void 0,({languageID:this.languageID,languageCode:this.languageCode}=Sn.getLanguageAttrs(t)),this.model=Sn.getLanguageModel(this.languageID),this.constraints={fullFormBased:!1,suffixBased:!1,obligatoryMatches:[],optionalMatches:[]},this.suffix=r,this.prefix=n,this.example=a}get form(){let e,t,r,n,a;return a=this.stem?this.stem:"",n=this.stem?" - ":"",this.model.direction===i?(t=this.prefix?n+this.prefix:"",e=(r=this.suffix?this.suffix+n:"")+a+t):e=(t=this.prefix?this.prefix+n:"")+a+(r=this.suffix?n+this.suffix:""),e}get language(){return console.warn('Please use a "languageID" instead of a "language"'),this.languageCode}setConstraints(){if(this.model.hasOwnProperty("getInflectionConstraints")){let e=this.model.getInflectionConstraints(this);this.constraints=Object.assign(this.constraints,e)}}compareWithWord(e,t=!0){const r=Sn.getLanguageModel(this.languageID),n=this.constraints.suffixBased?this.suffix:this.form;return t?r.normalizeWord(n)===r.normalizeWord(e):n===e}static readObject(e){let t=new Pn(e.stem,e.languageCode,e.suffix,e.prefix,e.example);return t.languageID=Sn.getLanguageIdFromCode(t.languageCode),t}set feature(e){if(console.warn('Please use "addFeature" instead.'),!e)throw new Error("Inflection feature data cannot be empty.");Array.isArray(e)||(e=[e]);let t=e[0].type;this[t]=[];for(let r of e){if(!(r instanceof Cn))throw new Error("Inflection feature data must be a Feature object.");if(!Sn.compareLanguages(r.languageID,this.languageID))throw new Error(`Language "${r.languageID.toString()}" of a feature does not match\n          a language "${this.languageID.toString()}" of an Inflection object.`);this[t].push(r)}}addFeature(e){if(!e)throw new Error("feature data cannot be empty.");if(!(e instanceof Cn))throw new Error("feature data must be a Feature object.");if(!Sn.compareLanguages(e.languageID,this.languageID))throw new Error('Language "'+e.languageID.toString()+'" of a feature does not match a language "'+this.languageID.toString()+'" of a Lemma object.');this[e.type]=e}addFeatures(e){if(!Array.isArray(e))throw new Error("Features must be in an array");for(let t of e)this.addFeature(t)}hasFeatureValue(e,t){return!!this.hasOwnProperty(e)&&this[e].values.includes(t)}}var Mn=Pn;class xn{constructor(e,t,r=null){if(!e)throw new Error("Lemma should not be empty.");if(!(e instanceof Rn))throw new Error("Lemma should be of Lemma object type.");if(!t)throw new Error("Inflections data should not be empty.");if(!Array.isArray(t))throw new Error("Inflection data should be provided in an array.");for(let e of t)if(!(e instanceof Mn))throw new Error("All inflection data should be of Inflection object type.");this.lemma=e,this.inflections=t,this.meaning=r||new en(this.lemma.word,this.lemma.languageID)}isPopulated(){return Object.entries(this.lemma.features).length>0||!this.meaning.isEmpty()||this.inflections.length>0}getGroupedInflections(){return Sn.getLanguageModel(this.lemma.languageID).groupInflectionsForDisplay(this.inflections)}static readObject(e){let t=Rn.readObject(e.lemma),r=[];for(let t of e.inflections)r.push(Mn.readObject(t));let n=new xn(t,r);return n.meaning=en.readObject(e.meaning),n}static getSortByTwoLemmaFeatures(e,t){return(r,n)=>{if(!r.lemma.features[e]||!n.lemma.features[e])return r.lemma.features[e]&&!n.lemma.features[e]?-1:!r.lemma.features[e]&&n.lemma.features[e]?1:0;{let a=r.lemma.features[e].compareTo(n.lemma.features[e]);if(0!==a)return a;if(r.lemma.features[t]&&n.lemma.features[t])return r.lemma.features[t].compareTo(n.lemma.features[t]);if(r.lemma.features[t]&&!n.lemma.features[t])return-1;if(!r.lemma.features[t]&&n.lemma.features[t])return 1}}}}var Un=xn;class jn{constructor(e,t){if(!e)throw new Error("Lexemes data should not be empty.");if(!Array.isArray(e))throw new Error("Lexeme data should be provided in an array.");for(let t of e)if(!(t instanceof Un))throw new Error("All lexeme data should be of Lexeme object type.");this.lexemes=e,this.targetWord=t}static readObject(e){let t=[];if(e.lexemes)for(let r of e.lexemes)t.push(Un.readObject(r));let r=new jn(t);return e.targetWord&&(r.targetWord=e.targetWord),r}get language(){return console.warn("Please use languageID instead"),Sn.getLanguageCodeFromId(this.languageID)}get languageID(){if(this.lexemes&&this.lexemes[0]&&this.lexemes[0].lemma&&this.lexemes[0].lemma.languageID)return this.lexemes[0].lemma.languageID;throw new Error("Homonym has not been initialized properly. Unable to obtain language ID information.")}get inflections(){let e=[];for(const t of this.lexemes)e=e.concat(t.inflections);return e}}var Bn=jn;var Gn=class{constructor(e="",t="",r=new Map([["default",t]])){this.uri=e,this.rights=r,this.rights.has("default")||this.rights.set("default",t)}toString(){return this.rights.get("default")}toLocaleString(e){return this.rights.get(e)||this.rights.get("default")}static getProxy(e=null,t={}){return new Proxy(t,{get:function(t,r){return"provider"===r?e:t[r]}})}};r.d(t,"Constants",function(){return n}),r.d(t,"Definition",function(){return Zr}),r.d(t,"DefinitionSet",function(){return en}),r.d(t,"Feature",function(){return Cn}),r.d(t,"GrmFeature",function(){return Tn}),r.d(t,"FeatureType",function(){return nn}),r.d(t,"FeatureList",function(){return bn}),r.d(t,"FeatureImporter",function(){return tn}),r.d(t,"Inflection",function(){return Mn}),r.d(t,"LanguageModelFactory",function(){return Sn}),r.d(t,"Homonym",function(){return Bn}),r.d(t,"Lexeme",function(){return Un}),r.d(t,"Lemma",function(){return Rn}),r.d(t,"LatinLanguageModel",function(){return dn}),r.d(t,"GreekLanguageModel",function(){return pn}),r.d(t,"ArabicLanguageModel",function(){return En}),r.d(t,"PersianLanguageModel",function(){return An}),r.d(t,"ResourceProvider",function(){return Gn}),r.d(t,"Translation",function(){return Ln})},function(e,t){for(var r=[],n=0;n<256;++n)r[n]=(n+256).toString(16).substr(1);e.exports=function(e,t){var n=t||0,a=r;return a[e[n++]]+a[e[n++]]+a[e[n++]]+a[e[n++]]+"-"+a[e[n++]]+a[e[n++]]+"-"+a[e[n++]]+a[e[n++]]+"-"+a[e[n++]]+a[e[n++]]+"-"+a[e[n++]]+a[e[n++]]+a[e[n++]]+a[e[n++]]+a[e[n++]]+a[e[n++]]}},function(e,t){var r="undefined"!=typeof crypto&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&msCrypto.getRandomValues.bind(msCrypto);if(r){var n=new Uint8Array(16);e.exports=function(){return r(n),n}}else{var a=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),a[t]=e>>>((3&t)<<3)&255;return a}}}])});