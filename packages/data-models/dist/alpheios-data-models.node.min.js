!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var r=t();for(var a in r)("object"==typeof exports?exports:e)[a]=r[a]}}(global,function(){return function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=4)}([function(e,t,r){var a=r(1),n=r(3);e.exports=function(e,t,r){var u=t&&r||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var s=(e=e||{}).random||(e.rng||a)();if(s[6]=15&s[6]|64,s[8]=63&s[8]|128,t)for(var i=0;i<16;++i)t[u+i]=s[i];return t||n(s)}},function(e,t,r){var a=r(2);e.exports=function(){return a.randomBytes(16)}},function(e,t){e.exports=require("crypto")},function(e,t){for(var r=[],a=0;a<256;++a)r[a]=(a+256).toString(16).substr(1);e.exports=function(e,t){var a=t||0,n=r;return[n[e[a++]],n[e[a++]],n[e[a++]],n[e[a++]],"-",n[e[a++]],n[e[a++]],"-",n[e[a++]],n[e[a++]],"-",n[e[a++]],n[e[a++]],"-",n[e[a++]],n[e[a++]],n[e[a++]],n[e[a++]],n[e[a++]],n[e[a++]]].join("")}},function(e,t,r){"use strict";r.r(t);var a={};r.r(a),r.d(a,"LANG_UNIT_WORD",function(){return n}),r.d(a,"LANG_UNIT_CHAR",function(){return u}),r.d(a,"LANG_DIR_LTR",function(){return s}),r.d(a,"LANG_DIR_RTL",function(){return i}),r.d(a,"LANG_UNDEFINED",function(){return o}),r.d(a,"LANG_LATIN",function(){return l}),r.d(a,"LANG_GREEK",function(){return c}),r.d(a,"LANG_ARABIC",function(){return g}),r.d(a,"LANG_PERSIAN",function(){return f}),r.d(a,"LANG_GEEZ",function(){return d}),r.d(a,"STR_LANG_CODE_UNDEFINED",function(){return h}),r.d(a,"STR_LANG_CODE_LAT",function(){return m}),r.d(a,"STR_LANG_CODE_LA",function(){return p}),r.d(a,"STR_LANG_CODE_GRC",function(){return _}),r.d(a,"STR_LANG_CODE_ARA",function(){return E}),r.d(a,"STR_LANG_CODE_AR",function(){return I}),r.d(a,"STR_LANG_CODE_FAS",function(){return y}),r.d(a,"STR_LANG_CODE_PER",function(){return A}),r.d(a,"STR_LANG_CODE_FA_IR",function(){return F}),r.d(a,"STR_LANG_CODE_FA",function(){return v}),r.d(a,"STR_LANG_CODE_GEZ",function(){return S}),r.d(a,"POFS_ADJECTIVE",function(){return w}),r.d(a,"POFS_ADVERB",function(){return C}),r.d(a,"POFS_ADVERBIAL",function(){return O}),r.d(a,"POFS_ARTICLE",function(){return D}),r.d(a,"POFS_CONJUNCTION",function(){return T}),r.d(a,"POFS_EXCLAMATION",function(){return L}),r.d(a,"POFS_INTERJECTION",function(){return b}),r.d(a,"POFS_NOUN",function(){return x}),r.d(a,"POFS_NOUN_PROPER",function(){return N}),r.d(a,"POFS_NUMERAL",function(){return V}),r.d(a,"POFS_PARTICLE",function(){return P}),r.d(a,"POFS_PREFIX",function(){return M}),r.d(a,"POFS_PREPOSITION",function(){return R}),r.d(a,"POFS_PRONOUN",function(){return U}),r.d(a,"POFS_SUFFIX",function(){return j}),r.d(a,"POFS_GERUNDIVE",function(){return W}),r.d(a,"POFS_SUPINE",function(){return k}),r.d(a,"POFS_VERB",function(){return G}),r.d(a,"POFS_VERB_PARTICIPLE",function(){return B}),r.d(a,"GEND_MASCULINE",function(){return $}),r.d(a,"GEND_FEMININE",function(){return z}),r.d(a,"GEND_NEUTER",function(){return J}),r.d(a,"GEND_COMMON",function(){return q}),r.d(a,"GEND_ANIMATE",function(){return K}),r.d(a,"GEND_INANIMATE",function(){return H}),r.d(a,"GEND_PERSONAL_MASCULINE",function(){return Q}),r.d(a,"GEND_ANIMATE_MASCULINE",function(){return X}),r.d(a,"GEND_INANIMATE_MASCULINE",function(){return Y}),r.d(a,"COMP_POSITIVE",function(){return Z}),r.d(a,"COMP_COMPARITIVE",function(){return ee}),r.d(a,"COMP_SUPERLATIVE",function(){return te}),r.d(a,"CASE_ABESSIVE",function(){return re}),r.d(a,"CASE_ABLATIVE",function(){return ae}),r.d(a,"CASE_ABSOLUTIVE",function(){return ne}),r.d(a,"CASE_ACCUSATIVE",function(){return ue}),r.d(a,"CASE_ADDIRECTIVE",function(){return se}),r.d(a,"CASE_ADELATIVE",function(){return ie}),r.d(a,"CASE_ADESSIVE",function(){return oe}),r.d(a,"CASE_ADVERBIAL",function(){return le}),r.d(a,"CASE_ALLATIVE",function(){return ce}),r.d(a,"CASE_ANTESSIVE",function(){return ge}),r.d(a,"CASE_APUDESSIVE",function(){return fe}),r.d(a,"CASE_AVERSIVE",function(){return de}),r.d(a,"CASE_BENEFACTIVE",function(){return he}),r.d(a,"CASE_CARITIVE",function(){return me}),r.d(a,"CASE_CAUSAL",function(){return pe}),r.d(a,"CASE_CAUSAL_FINAL",function(){return _e}),r.d(a,"CASE_COMITATIVE",function(){return Ee}),r.d(a,"CASE_DATIVE",function(){return Ie}),r.d(a,"CASE_DELATIVE",function(){return ye}),r.d(a,"CASE_DIRECT",function(){return Ae}),r.d(a,"CASE_DISTRIBUTIVE",function(){return Fe}),r.d(a,"CASE_DISTRIBUTIVE_TEMPORAL",function(){return ve}),r.d(a,"CASE_ELATIVE",function(){return Se}),r.d(a,"CASE_ERGATIVE",function(){return we}),r.d(a,"CASE_ESSIVE",function(){return Ce}),r.d(a,"CASE_ESSIVE_FORMAL",function(){return Oe}),r.d(a,"CASE_ESSIVE_MODAL",function(){return De}),r.d(a,"CASE_EQUATIVE",function(){return Te}),r.d(a,"CASE_EVITATIVE",function(){return Le}),r.d(a,"CASE_EXESSIVE",function(){return be}),r.d(a,"CASE_FINAL",function(){return xe}),r.d(a,"CASE_FORMAL",function(){return Ne}),r.d(a,"CASE_GENITIVE",function(){return Ve}),r.d(a,"CASE_ILLATIVE",function(){return Pe}),r.d(a,"CASE_INELATIVE",function(){return Me}),r.d(a,"CASE_INESSIVE",function(){return Re}),r.d(a,"CASE_INSTRUCTIVE",function(){return Ue}),r.d(a,"CASE_INSTRUMENTAL",function(){return je}),r.d(a,"CASE_INSTRUMENTAL_COMITATIVE",function(){return We}),r.d(a,"CASE_INTRANSITIVE",function(){return ke}),r.d(a,"CASE_LATIVE",function(){return Ge}),r.d(a,"CASE_LOCATIVE",function(){return Be}),r.d(a,"CASE_MODAL",function(){return $e}),r.d(a,"CASE_MULTIPLICATIVE",function(){return ze}),r.d(a,"CASE_NOMINATIVE",function(){return Je}),r.d(a,"CASE_PARTITIVE",function(){return qe}),r.d(a,"CASE_PEGATIVE",function(){return Ke}),r.d(a,"CASE_PERLATIVE",function(){return He}),r.d(a,"CASE_POSSESSIVE",function(){return Qe}),r.d(a,"CASE_POSTELATIVE",function(){return Xe}),r.d(a,"CASE_POSTDIRECTIVE",function(){return Ye}),r.d(a,"CASE_POSTESSIVE",function(){return Ze}),r.d(a,"CASE_POSTPOSITIONAL",function(){return et}),r.d(a,"CASE_PREPOSITIONAL",function(){return tt}),r.d(a,"CASE_PRIVATIVE",function(){return rt}),r.d(a,"CASE_PROLATIVE",function(){return at}),r.d(a,"CASE_PROSECUTIVE",function(){return nt}),r.d(a,"CASE_PROXIMATIVE",function(){return ut}),r.d(a,"CASE_SEPARATIVE",function(){return st}),r.d(a,"CASE_SOCIATIVE",function(){return it}),r.d(a,"CASE_SUBDIRECTIVE",function(){return ot}),r.d(a,"CASE_SUBESSIVE",function(){return lt}),r.d(a,"CASE_SUBELATIVE",function(){return ct}),r.d(a,"CASE_SUBLATIVE",function(){return gt}),r.d(a,"CASE_SUPERDIRECTIVE",function(){return ft}),r.d(a,"CASE_SUPERESSIVE",function(){return dt}),r.d(a,"CASE_SUPERLATIVE",function(){return ht}),r.d(a,"CASE_SUPPRESSIVE",function(){return mt}),r.d(a,"CASE_TEMPORAL",function(){return pt}),r.d(a,"CASE_TERMINATIVE",function(){return _t}),r.d(a,"CASE_TRANSLATIVE",function(){return Et}),r.d(a,"CASE_VIALIS",function(){return It}),r.d(a,"CASE_VOCATIVE",function(){return yt}),r.d(a,"MOOD_ADMIRATIVE",function(){return At}),r.d(a,"MOOD_COHORTATIVE",function(){return Ft}),r.d(a,"MOOD_CONDITIONAL",function(){return vt}),r.d(a,"MOOD_DECLARATIVE",function(){return St}),r.d(a,"MOOD_DUBITATIVE",function(){return wt}),r.d(a,"MOOD_ENERGETIC",function(){return Ct}),r.d(a,"MOOD_EVENTIVE",function(){return Ot}),r.d(a,"MOOD_GENERIC",function(){return Dt}),r.d(a,"MOOD_GERUNDIVE",function(){return Tt}),r.d(a,"MOOD_HYPOTHETICAL",function(){return Lt}),r.d(a,"MOOD_IMPERATIVE",function(){return bt}),r.d(a,"MOOD_INDICATIVE",function(){return xt}),r.d(a,"MOOD_INFERENTIAL",function(){return Nt}),r.d(a,"MOOD_INFINITIVE",function(){return Vt}),r.d(a,"MOOD_INTERROGATIVE",function(){return Pt}),r.d(a,"MOOD_JUSSIVE",function(){return Mt}),r.d(a,"MOOD_NEGATIVE",function(){return Rt}),r.d(a,"MOOD_OPTATIVE",function(){return Ut}),r.d(a,"MOOD_PARTICIPLE",function(){return jt}),r.d(a,"MOOD_PRESUMPTIVE",function(){return Wt}),r.d(a,"MOOD_RENARRATIVE",function(){return kt}),r.d(a,"MOOD_SUBJUNCTIVE",function(){return Gt}),r.d(a,"MOOD_SUPINE",function(){return Bt}),r.d(a,"NUM_SINGULAR",function(){return $t}),r.d(a,"NUM_PLURAL",function(){return zt}),r.d(a,"NUM_DUAL",function(){return Jt}),r.d(a,"NUM_TRIAL",function(){return qt}),r.d(a,"NUM_PAUCAL",function(){return Kt}),r.d(a,"NUM_SINGULATIVE",function(){return Ht}),r.d(a,"NUM_COLLECTIVE",function(){return Qt}),r.d(a,"NUM_DISTRIBUTIVE_PLURAL",function(){return Xt}),r.d(a,"NRL_CARDINAL",function(){return Yt}),r.d(a,"NRL_ORDINAL",function(){return Zt}),r.d(a,"NRL_DISTRIBUTIVE",function(){return er}),r.d(a,"NURL_NUMERAL_ADVERB",function(){return tr}),r.d(a,"ORD_1ST",function(){return rr}),r.d(a,"ORD_2ND",function(){return ar}),r.d(a,"ORD_3RD",function(){return nr}),r.d(a,"ORD_4TH",function(){return ur}),r.d(a,"ORD_5TH",function(){return sr}),r.d(a,"ORD_6TH",function(){return ir}),r.d(a,"ORD_7TH",function(){return or}),r.d(a,"ORD_8TH",function(){return lr}),r.d(a,"ORD_9TH",function(){return cr}),r.d(a,"TENSE_AORIST",function(){return gr}),r.d(a,"TENSE_FUTURE",function(){return fr}),r.d(a,"TENSE_FUTURE_PERFECT",function(){return dr}),r.d(a,"TENSE_IMPERFECT",function(){return hr}),r.d(a,"TENSE_PAST_ABSOLUTE",function(){return mr}),r.d(a,"TENSE_PERFECT",function(){return pr}),r.d(a,"TENSE_PLUPERFECT",function(){return _r}),r.d(a,"TENSE_PRESENT",function(){return Er}),r.d(a,"VKIND_TO_BE",function(){return Ir}),r.d(a,"VKIND_COMPOUNDS_OF_TO_BE",function(){return yr}),r.d(a,"VKIND_TAKING_ABLATIVE",function(){return Ar}),r.d(a,"VKIND_TAKING_DATIVE",function(){return Fr}),r.d(a,"VKIND_TAKING_GENITIVE",function(){return vr}),r.d(a,"VKIND_TRANSITIVE",function(){return Sr}),r.d(a,"VKIND_INTRANSITIVE",function(){return wr}),r.d(a,"VKIND_IMPERSONAL",function(){return Cr}),r.d(a,"VKIND_DEPONENT",function(){return Or}),r.d(a,"VKIND_SEMIDEPONENT",function(){return Dr}),r.d(a,"VKIND_PERFECT_DEFINITE",function(){return Tr}),r.d(a,"VOICE_ACTIVE",function(){return Lr}),r.d(a,"VOICE_PASSIVE",function(){return br}),r.d(a,"VOICE_MEDIOPASSIVE",function(){return xr}),r.d(a,"VOICE_IMPERSONAL_PASSIVE",function(){return Nr}),r.d(a,"VOICE_MIDDLE",function(){return Vr}),r.d(a,"VOICE_ANTIPASSIVE",function(){return Pr}),r.d(a,"VOICE_REFLEXIVE",function(){return Mr}),r.d(a,"VOICE_RECIPROCAL",function(){return Rr}),r.d(a,"VOICE_CAUSATIVE",function(){return Ur}),r.d(a,"VOICE_ADJUTATIVE",function(){return jr}),r.d(a,"VOICE_APPLICATIVE",function(){return Wr}),r.d(a,"VOICE_CIRCUMSTANTIAL",function(){return kr}),r.d(a,"VOICE_DEPONENT",function(){return Gr}),r.d(a,"TYPE_IRREGULAR",function(){return Br}),r.d(a,"TYPE_REGULAR",function(){return $r}),r.d(a,"CLASS_PERSONAL",function(){return zr}),r.d(a,"CLASS_REFLEXIVE",function(){return Jr}),r.d(a,"CLASS_POSSESSIVE",function(){return qr}),r.d(a,"CLASS_DEMONSTRATIVE",function(){return Kr}),r.d(a,"CLASS_RELATIVE",function(){return Hr}),r.d(a,"CLASS_INTERROGATIVE",function(){return Qr}),r.d(a,"CLASS_GENERAL_RELATIVE",function(){return Xr}),r.d(a,"CLASS_INDEFINITE",function(){return Yr}),r.d(a,"CLASS_INTENSIVE",function(){return Zr}),r.d(a,"CLASS_RECIPROCAL",function(){return ea});const n=Symbol("word"),u=Symbol("char"),s=Symbol("ltr"),i=Symbol("rtl"),o=Symbol("undefined"),l=Symbol("latin"),c=Symbol("greek"),g=Symbol("arabic"),f=Symbol("persian"),d=Symbol("ge'ez"),h="undefined",m="lat",p="la",_="grc",E="ara",I="ar",y="fas",A="per",F="fa-IR",v="fa",S="gez",w="adjective",C="adverb",O="adverbial",D="article",T="conjunction",L="exclamation",b="interjection",x="noun",N="proper noun",V="numeral",P="particle",M="prefix",R="preposition",U="pronoun",j="suffix",W="gerundive",k="supine",G="verb",B="verb participle",$="masculine",z="feminine",J="neuter",q="common",K="animate",H="inanimate",Q="personal masculine",X="animate masculine",Y="inanimate masculine",Z="positive",ee="comparative",te="superlative",re="abessive",ae="ablative",ne="absolutive",ue="accusative",se="addirective",ie="adelative",oe="adessive",le="adverbial",ce="allative",ge="antessive",fe="apudessive",de="aversive",he="benefactive",me="caritive",pe="causal",_e="causal-final",Ee="comitative",Ie="dative",ye="delative",Ae="direct",Fe="distributive",ve="distributive-temporal",Se="elative",we="ergative",Ce="essive",Oe="essive-formal",De="essive-modal",Te="equative",Le="evitative",be="exessive",xe="final",Ne="formal",Ve="genitive",Pe="illative",Me="inelative",Re="inessive",Ue="instructive",je="instrumental",We="instrumental-comitative",ke="intransitive",Ge="lative",Be="locative",$e="modal",ze="multiplicative",Je="nominative",qe="partitive",Ke="pegative",He="perlative",Qe="possessive",Xe="postelative",Ye="postdirective",Ze="postessive",et="postpositional",tt="prepositional",rt="privative",at="prolative",nt="prosecutive",ut="proximative",st="separative",it="sociative",ot="subdirective",lt="subessive",ct="subelative",gt="sublative",ft="superdirective",dt="superessive",ht="superlative",mt="suppressive",pt="temporal",_t="terminative",Et="translative",It="vialis",yt="vocative",At="admirative",Ft="cohortative",vt="conditional",St="declarative",wt="dubitative",Ct="energetic",Ot="eventive",Dt="generic",Tt="gerundive",Lt="hypothetical",bt="imperative",xt="indicative",Nt="inferential",Vt="infinitive",Pt="interrogative",Mt="jussive",Rt="negative",Ut="optative",jt="participle",Wt="presumptive",kt="renarrative",Gt="subjunctive",Bt="supine",$t="singular",zt="plural",Jt="dual",qt="trial",Kt="paucal",Ht="singulative",Qt="collective",Xt="distributive plural",Yt="cardinal",Zt="ordinal",er="distributive",tr="numeral adverb",rr="1st",ar="2nd",nr="3rd",ur="4th",sr="5th",ir="6th",or="7th",lr="8th",cr="9th",gr="aorist",fr="future",dr="future perfect",hr="imperfect",mr="past absolute",pr="perfect",_r="pluperfect",Er="present",Ir="to be",yr="compounds of to be",Ar="taking ablative",Fr="taking dative",vr="taking genitive",Sr="transitive",wr="intransitive",Cr="impersonal",Or="deponent",Dr="semideponent",Tr="perfect definite",Lr="active",br="passive",xr="mediopassive",Nr="impersonal passive",Vr="middle",Pr="antipassive",Mr="reflexive",Rr="reciprocal",Ur="causative",jr="adjutative",Wr="applicative",kr="circumstantial",Gr="deponent",Br="irregular",$r="regular",zr="personal",Jr="reflexive",qr="possessive",Kr="demonstrative",Hr="relative",Qr="interrogative",Xr="general relative",Yr="indefinite",Zr="intensive",ea="reciprocal";var ta=r(0),ra=r.n(ta);class definition_Definition{constructor(e,t,r,a){this.text=e,this.language=t,this.format=r,this.lemmaText=a,this.ID=ra()()}static readObject(e){return new definition_Definition(e.text,e.language,e.format,e.lemmaText)}convertToJSONObject(){return{text:this.text,language:this.language,format:this.format,lemmaText:this.lemmaText,ID:this.ID}}}var aa=definition_Definition;var na=class FeatureImporter{constructor(e=[],t=!1){this.hash={};for(let t of e)this.map(t,t);return this.returnUnknown=t,this}map(e,t){if(!e)throw new Error("Imported value should not be empty.");if(!t)throw new Error("Library value should not be empty.");return this.hash[e]=t,this}has(e){return this.hash.hasOwnProperty(e)}get(e){if(this.has(e))return this.hash[e];if(this.returnUnknown)return e;throw new Error('A value "'+e+'" is not found in the importer.')}};class feature_Feature{constructor(e,t,r,a=1,n=[]){if(!feature_Feature.isAllowedType(e))throw new Error('Features of "'+e+'" type are not supported.');if(!t)throw new Error("Feature should have a non-empty value(s).");if(!r)throw new Error("No language ID is provided");this.type=e,this.languageID=r,this.sortOrder=a,this.allowedValues=n,this._data=feature_Feature.dataValuesFromInput(t),this.sort()}static dataValuesFromInput(e){let t;return(t=Array.isArray(e)?Array.isArray(e[0])?e:e.map((t,r)=>[t,e.length-r]):[[e,this.defaultSortOrder]]).map(e=>({value:e[0],sortOrder:Number.parseInt(e[1])}))}static newFromFtr(e){}static get types(){return{word:"word",fullForm:"full form",hdwd:"headword",part:"part of speech",number:"number",case:"case",grmCase:"case",declension:"declension",gender:"gender",type:"type",class:"class",grmClass:"class",conjugation:"conjugation",comparison:"comparison",tense:"tense",voice:"voice",mood:"mood",person:"person",frequency:"frequency",meaning:"meaning",source:"source",footnote:"footnote",dialect:"dialect",note:"note",pronunciation:"pronunciation",age:"age",area:"area",geo:"geo",kind:"kind",derivtype:"derivtype",stemtype:"stemtype",morph:"morph",var:"var"}}static isAllowedType(e){return Object.values(this.types).includes(`${e}`)}static get defaultSortOrder(){return 1}static get joinSeparator(){return" "}static get defaultImporterName(){return"default"}get allowsUnrestrictedValues(){return 0===this.allowedValues.length}sort(){this._data.sort((e,t)=>e.sortOrder!==t.sortOrder?t.sortOrder-e.sortOrder:e.value.localeCompare(t.value))}compareTo(e){return e?e._data[0].sortOrder-this._data[0].sortOrder:-1}get items(){return this._data}get value(){return this.values.join(this.constructor.joinSeparator)}get values(){return this._data.map(e=>e.value)}getValue(e){return this._data.find(t=>t.value===e)}get valQty(){return this._data.length}get isEmpty(){return 0===this.valQty}get isSingle(){return 1===this.valQty}get isMultiple(){return this.valQty>1}toString(){return this.value}hasValue(e){return this.values.includes(e)}hasValues(e){let t=!0;for(let r of e)t=t&&this.hasValue(r);return t}hasSomeValues(e){let t=!1;for(let r of e)t=t||this.hasValue(r);return t}get valuesUnrestricted(){return 0===this.allowedValues.length}isEqual(e){return e&&this.type===e.type&&ya.compareLanguages(this.languageID,e.languageID)&&this.value===e.value}addValue(e,t=this.constructor.defaultSortOrder){return this.hasValue(e)?console.warn(`Value "${e}" already exists. If you want to change it, use "getValue" to access it directly.`):(this._data.push({value:e,sortOrder:t}),this.sort()),this}addValues(e){let t=this.constructor.dataValuesFromInput(e),r=t.map(e=>e.value);return this.hasSomeValues(r)?console.warn(`One or several values from "${r}" already exist. If you want to change it, use "getValue" to access a value directly.`):(this._data=this._data.concat(t),this.sort()),this}removeValue(e){console.warn("This feature is not implemented yet")}createFeature(e,t=this.constructor.defaultSortOrder){return new feature_Feature(this.type,[[e,t]],this.languageID,this.sortOrder,this.allowedValues)}createFeatures(e){return new feature_Feature(this.type,e,this.languageID,this.sortOrder,this.allowedValues)}get ownFeatures(){return this.values.map(e=>new feature_Feature(this.type,e,this.languageID,1,this.allowedValues))}getCopy(){let e=this._data.map(e=>[e.value,e.sortOrder]);return new feature_Feature(this.type,e,this.languageID,this.sortOrder,this.allowedValues.slice())}addImporter(e=new na,t=this.constructor.defaultImporterName){return this.importers||(this.importers=new Map),this.importers.set(t,e),e}getImporter(e=this.constructor.defaultImporterName){if(!this.importers||!this.importers.has(e))throw new Error(`Importer "${e}" does not exist`);return this.importers.get(e)}addFromImporter(e,t=this.constructor.defaultImporterName){if(!this.importers||!this.importers.has(t))throw new Error(`Importer "${t}" does not exist`);const r=this.importers.get(t);return e=this.constructor.dataValuesFromInput(e),this._data.push(...e.map(e=>({value:r.get(e.value),sortOrder:e.sortOrder}))),this.sort(),this}createFromImporter(e,t=this.constructor.defaultImporterName){if(!this.importers||!this.importers.has(t))throw new Error(`Importer "${t}" does not exist`);const r=this.importers.get(t);Array.isArray(e)||(e=[e]);let a=e.map(e=>r.get(e));return a=a.reduce((e,t)=>e.concat(t),[]),new feature_Feature(this.type,a,this.languageID,this.sortOrder,this.allowedValues)}convertToJSONObject(){let e=this._data.map(e=>[e.value,e.sortOrder]);return{type:this.type,languageCode:ya.getLanguageCodeFromId(this.languageID),sortOrder:this.sortOrder,allowedValues:this.allowedValues,data:e}}static readObject(e){let t=ya.getLanguageIdFromCode(e.languageCode);return new feature_Feature(e.type,e.data,t,e.sortOrder,e.allowedValues)}}class feature_type_FeatureType{constructor(e,t,r){if(!t||!Array.isArray(t))throw new Error("Values should be an array (or an empty array) of values.");if(!r)throw new Error("FeatureType constructor requires a language");this.type=e,this.languageID=void 0,this.languageCode=void 0,({languageID:this.languageID,languageCode:this.languageCode}=ya.getLanguageAttrs(r)),this._orderIndex=[],this._orderLookup={};for(const[e,r]of t.entries())if(this._orderIndex.push(r),Array.isArray(r))for(let t of r)this[t]=new feature_Feature(this.type,t,this.languageID),this._orderLookup[t]=e;else this[r]=new feature_Feature(this.type,r,this.languageID),this._orderLookup[r]=e}get language(){return console.warn('Please use a "languageID" instead of a "language"'),this.languageCode}hasUnrestrictedValue(){return 1===this.orderedValues.length&&this.orderedValues[0]===feature_type_FeatureType.UNRESTRICTED_VALUE}get(e,t=1){if(e)return new feature_Feature(this.type,[[e,t]],this.languageID);throw new Error("A non-empty value should be provided.")}getValues(e){return new feature_Feature(this.type,e,this.languageID)}getFromImporter(e,t){let r;try{r=this.importer[e].get(t)}catch(e){r=this.get(t)}return r}addImporter(e){if(!e)throw new Error("Importer should have a non-empty name.");return this.importer=this.importer||{},this.importer[e]=this.importer[e]||new na,this.importer[e]}get orderedFeatures(){return this.orderedValues.map(e=>new feature_Feature(this.type,e,this.languageID))}get orderedValues(){return this._orderIndex}get orderLookup(){return this._orderLookup}set order(e){if(!e||Array.isArray(e)&&0===e.length)throw new Error("A non-empty list of values should be provided.");Array.isArray(e)||(e=[e]);for(let t of e)if(Array.isArray(t))for(let e of t){if(!this.hasOwnProperty(e.value))throw new Error('Trying to order an element with "'+e.value+'" value that is not stored in a "'+this.type+'" type.');if(e.type!==this.type)throw new Error('Trying to order an element with type "'+e.type+'" that is different from "'+this.type+'".');if(!ya.compareLanguages(e.languageID,this.languageID))throw new Error(`Trying to order an element with language "${e.languageID.toString()}" that is different from "${this.languageID.toString()}"`)}else{if(!this.hasOwnProperty(t.value))throw new Error('Trying to order an element with "'+t.value+'" value that is not stored in a "'+this.type+'" type.');if(t.type!==this.type)throw new Error('Trying to order an element with type "'+t.type+'" that is different from "'+this.type+'".');if(!ya.compareLanguages(t.languageID,this.languageID))throw new Error(`Trying to order an element with language "${t.languageID.toString()}" that is different from "${this.languageID.toString()}"`)}this._orderLookup={},this._orderIndex=[];for(const[t,r]of e.entries())if(Array.isArray(r)){let e=[];for(const a of r)this._orderLookup[a.value]=t,e.push(a.value);this._orderIndex[t]=e}else this._orderLookup[r.value]=t,this._orderIndex[t]=r.value}}feature_type_FeatureType.UNRESTRICTED_VALUE=Symbol("unrestricted");var ua=feature_type_FeatureType;var sa=class inflection_grouping_key_InflectionGroupingKey{constructor(e,t,r={}){for(let r of t)this[r]=e[r];Object.assign(this,r)}hasFeatureValue(e,t){return!!this.hasOwnProperty(e)&&this[e].values.includes(t)}toString(){let e=[];for(let t of Object.getOwnPropertyNames(this).sort()){let r=this[t]instanceof feature_Feature?this[t].values.sort().join(","):this[t];e.push(r)}return e.join(" ")}};var ia=class InflectionGroup{constructor(e,t=[],r=null){this.groupingKey=e,this.inflections=t}append(e){this.inflections.push(e)}};class language_model_LanguageModel{constructor(){this.context_backward=language_model_LanguageModel.contextBackward}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return s}static get baseUnit(){return n}get contextForward(){return console.warn('Please use static "contextForward" instead'),this.constructor.contextForward}get contextBackward(){return console.warn('Please use static "contextBackward" instead'),this.constructor.contextBackward}get direction(){return console.warn('Please use static "direction" instead'),this.constructor.direction}get baseUnit(){return console.warn('Please use static "baseUnit" instead'),this.constructor.baseUnit}get features(){return console.warn('Please use individual "getFeatureType" or static "features" instead'),this.constructor.features}static get featureNames(){return this.featureValues.keys()}static typeFeature(e){if(this.typeFeatures.has(e))return this.typeFeatures.get(e);throw new Error(`Type feature "${e}" is not defined within "${this}"`)}static get typeFeatures(){console.warn("This getter must be defined in a descendant class")}static get features(){let e={};for(const t of this.featureNames)e[t]=this.getFeature(t);return e}static get languageID(){return o}static get languageCode(){return h}static get languageCodes(){return[]}static get codes(){return console.warn('Use static "languageCodes" instead'),this.languageCodes}get codes(){return console.warn('Please use a static version of "codes" instead'),this.constructor.languageCodes}toCode(){return console.warn('Please use a static "languageCode" instead'),this.constructor.languageCode}static toCode(){return console.warn('Please use a static "languageCode" instead'),this.languageCode}static get featureValues(){return new Map([[feature_Feature.types.part,[C,O,w,D,T,L,b,x,V,P,M,R,U,j,k,G,B]],[feature_Feature.types.gender,[$,z,J]],[feature_Feature.types.type,[$r,Br]],[feature_Feature.types.person,[rr,ar,nr]],[feature_Feature.types.number,[$t,zt]],[feature_Feature.types.age,[]],[feature_Feature.types.area,[]],[feature_Feature.types.source,[]],[feature_Feature.types.frequency,[]],[feature_Feature.types.geo,[]],[feature_Feature.types.pronunciation,[]],[feature_Feature.types.kind,[]],[feature_Feature.types.comparison,[]],[feature_Feature.types.morph,[]],[feature_Feature.types.stemtype,[]],[feature_Feature.types.derivtype,[]]])}static get sourceLanguage(){return console.warn("Please use languageID directly"),this.languageID}get sourceLanguage(){return console.warn("Please use languageID directly"),this.constructor.languageID}static getFeatureType(e){console.warn("Please use getFeature instead");let t=this.featureValues;if(t.has(e))return new ua(e,t.get(e),this.languageID);throw new Error(`Feature "${e}" is not defined`)}static getFeature(e){let t=this.featureValues;if(t.has(e)){let r=t.get(e);return new feature_Feature(e,r,this.languageID,1,r)}throw new Error(`Feature "${e}" is not defined`)}_initializeFeatures(){let e={};for(const t of this.constructor.featureValues.keys())e[t]=this.constructor.getFeature(t);return e}grammarFeatures(){return console.warn('Please use a static version of "grammarFeatures" instead'),this.constructor.grammarFeatures()}static grammarFeatures(){return[]}static canInflect(e){return!1}static supportsLanguage(e){return this.languageCodes.includes[e]}static normalizeWord(e){return e}static alternateWordEncodings(e,t=null,r=null,a=null){return[]}static compareWords(e,t,r=!0){return r?this.normalizeWord(e)===this.normalizeWord(t):e===t}alternateWordEncodings(e,t,r,a){return console.warn('Please use static "alternateWordEncodings" instead'),this.constructor.alternateWordEncodings(e,t,r,a)}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}getPunctuation(){return console.warn('Please use a static version of "getPunctuation"'),this.constructor.getPunctuation()}toString(){return String(this.constructor.languageCode)}isEqual(e){return ya.compareLanguages(this.languageID,e.languageID)}static hasCode(e){if(this.isLanguageCode(e))return this.languageCodes.includes(e);throw new Error(`Format of a "${e}" is incorrect`)}static isLanguageID(e){return"symbol"==typeof e}static isLanguageCode(e){return!language_model_LanguageModel.isLanguageID(e)}canInflect(e){return console.warn('Please use a static version of "canInflect" instead'),this.constructor.canInflect(e)}static groupInflectionsForDisplay(e){let t=new Map,r=this.aggregateInflectionsForDisplay(e);for(let e of r){let r=new sa(e,[feature_Feature.types.part,feature_Feature.types.declension,feature_Feature.types.dialect,feature_Feature.types.comparison],{prefix:e.prefix,suffix:e.suffix,stem:e.stem}),a=r.toString();t.has(a)?t.get(a).append(e):t.set(a,new ia(r,[e]))}for(let e of t){let t=new Map;for(let r of e[1].inflections){let e,a=!1;r[feature_Feature.types.grmCase]?(e=feature_Feature.types.number,a=!0):e=r[feature_Feature.types.tense]?feature_Feature.types.tense:r[feature_Feature.types.part]===G?feature_Feature.types.part:r[feature_Feature.types.part]===C?feature_Feature.types.part:"misc";let n=new sa(r,[e],{isCaseInflectionSet:a}),u=n.toString();t.has(u)?t.get(u).append(r):t.set(u,new ia(n,[r]))}for(let e of t){let t=new Map,r=new Map;for(let a of e[1].inflections){let e=a[feature_Feature.types.grmCase]?Math.max(a[feature_Feature.types.grmCase].items.map(e=>e.sortOrder)):1,n=new sa(a,[feature_Feature.types.tense,feature_Feature.types.voice]),u=n.toString();t.has(u)?t.get(u).append(a):(t.set(u,new ia(n,[a],e)),r.set(u,e))}e[1].inflections=[];let a=Array.from(t.keys()).sort((e,t)=>{let a=r.get(e),n=r.get(t);return a>n?-1:n>a?1:0});for(let r of a)e[1].inflections.push(t.get(r))}for(let e of t){let t=e[1];for(let e of t.inflections){let t=new Map;for(let r of e.inflections){let e=new sa(r,[feature_Feature.types.grmCase,feature_Feature.types.comparison,feature_Feature.types.gender,feature_Feature.types.number,feature_Feature.types.person,feature_Feature.types.tense,feature_Feature.types.mood,feature_Feature.types.voice]),a=e.toString();t.has(a)?t.get(a).append(r):t.set(a,new ia(e,[r]))}e.inflections=Array.from(t.values())}}e[1].inflections=Array.from(t.values())}return Array.from(t.values())}static aggregateInflectionsForDisplay(e){return e}groupInflectionsForDisplay(e){return console.warn('Please use a static version of "groupInflectionsForDisplay" instead'),this.constructor.groupInflectionsForDisplay(e)}}var oa=language_model_LanguageModel;let la=new Map,ca=!1;class latin_language_model_LatinLanguageModel extends oa{static get languageID(){return l}static get languageCode(){return m}static get languageCodes(){return[p,m]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return s}static get baseUnit(){return n}static get featureValues(){return new Map([...oa.featureValues,[feature_Feature.types.grmClass,[zr,Jr,qr,Kr,Hr,Qr]],[feature_Feature.types.number,[$t,zt]],[feature_Feature.types.grmCase,[Je,Ve,Ie,ue,ae,Be,yt]],[feature_Feature.types.declension,[rr,ar,nr,ur,sr]],[feature_Feature.types.tense,[Er,hr,fr,pr,_r,dr]],[feature_Feature.types.voice,[Lr,br]],[feature_Feature.types.mood,[xt,Gt,bt,jt,Bt,Tt,jt,Vt]],[feature_Feature.types.conjugation,[rr,ar,nr,ur]]])}static get typeFeatures(){return ca||this.initTypeFeatures(),la}static initTypeFeatures(){for(const e of this.featureNames)la.set(e,this.getFeature(e));ca=!0}static grammarFeatures(){return[feature_Feature.types.part,feature_Feature.types.grmCase,feature_Feature.types.mood,feature_Feature.types.declension,feature_Feature.types.tense,feature_Feature.types.conjugation]}static canInflect(e){return!0}static normalizeWord(e){return e&&(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=e.replace(/[\u00c0\u00c1\u00c2\u00c3\u00c4\u0100\u0102]/g,"A")).replace(/[\u00c8\u00c9\u00ca\u00cb\u0112\u0114]/g,"E")).replace(/[\u00cc\u00cd\u00ce\u00cf\u012a\u012c]/g,"I")).replace(/[\u00d2\u00d3\u00d4\u00df\u00d6\u014c\u014e]/g,"O")).replace(/[\u00d9\u00da\u00db\u00dc\u016a\u016c]/g,"U")).replace(/[\u00c6\u01e2]/g,"AE")).replace(/[\u0152]/g,"OE")).replace(/[\u00e0\u00e1\u00e2\u00e3\u00e4\u0101\u0103]/g,"a")).replace(/[\u00e8\u00e9\u00ea\u00eb\u0113\u0115]/g,"e")).replace(/[\u00ec\u00ed\u00ee\u00ef\u012b\u012d\u0129]/g,"i")).replace(/[\u00f2\u00f3\u00f4\u00f5\u00f6\u014d\u014f]/g,"o")).replace(/[\u00f9\u00fa\u00fb\u00fc\u016b\u016d]/g,"u")).replace(/[\u00e6\u01e3]/g,"ae")).replace(/[\u0153]/g,"oe")),e}static alternateWordEncodings(e,t=null,r=null,a=null){return[]}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}static getInflectionConstraints(e){let t={fullFormBased:!1,suffixBased:!1,pronounClassRequired:!1};return e.hasOwnProperty(feature_Feature.types.part)?[G,B,k,W].includes(e[feature_Feature.types.part].value)?(t.fullFormBased=!0,t.suffixBased=!0):e[feature_Feature.types.part].value===U?t.fullFormBased=!0:t.suffixBased=!0:console.warn("Unable to set grammar: part of speech data is missing or is incorrect",e[feature_Feature.types.part]),t}}let ga=new Map,fa=!1;class greek_language_model_GreekLanguageModel extends oa{static get languageID(){return c}static get languageCode(){return _}static get languageCodes(){return[_]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return s}static get baseUnit(){return n}static get featureValues(){return new Map([...oa.featureValues,[feature_Feature.types.grmClass,[Kr,Xr,Yr,Zr,Qr,zr,qr,ea,Jr,Hr]],[feature_Feature.types.number,[$t,zt,Jt]],[feature_Feature.types.grmCase,[Je,Ve,Ie,ue,yt]],[feature_Feature.types.declension,[rr,ar,nr]],[feature_Feature.types.tense,[Er,hr,fr,pr,_r,dr,gr]],[feature_Feature.types.voice,[br,Lr,xr,Vr]],[feature_Feature.types.mood,[xt,Gt,Ut,bt]],[feature_Feature.types.dialect,["attic","epic","doric"]]])}static get typeFeatures(){return fa||this.initTypeFeatures(),ga}static initTypeFeatures(){for(const e of this.featureNames)ga.set(e,this.getFeature(e));fa=!0}static canInflect(e){return!0}static grammarFeatures(){return[feature_Feature.types.part,feature_Feature.types.grmCase,feature_Feature.types.mood,feature_Feature.types.declension,feature_Feature.types.tense,feature_Feature.types.voice]}static normalizeWord(e){return e?e.normalize("NFC"):e}static alternateWordEncodings(e,t=null,r=null,a=null){if(!e)return[];let n=greek_language_model_GreekLanguageModel.normalizeWord(e).toLocaleLowerCase(),u=n.replace(/[\u{1FB0}\u{1FB1}]/gu,"α").replace(/[\u{1FB8}\u{1FB9}]/gu,"Α").replace(/[\u{1FD0}\u{1FD1}]/gu,"ι").replace(/[\u{1FD8}\u{1FD9}]/gu,"Ι").replace(/[\u{1FE0}\u{1FE1}]/gu,"υ").replace(/[\u{1FE8}\u{1FE9}]/gu,"Υ").replace(/[\u{00AF}\u{0304}\u{0306}]/gu,""),s=n.replace(/\u{0390}/gu,"ί").replace(/\u{03AA}/gu,"Ι").replace(/\u{03AB}/gu,"Υ").replace(/\u{03B0}/gu,"ύ").replace(/\u{03CA}/gu,"ι").replace(/\u{03CB}/gu,"υ").replace(/\u{1FD2}/gu,"ὶ").replace(/\u{1FD3}/gu,"ί").replace(/\u{1FD7}/gu,"ῖ").replace(/\u{1FE2}/gu,"ὺ").replace(/\u{1FE3}/gu,"ύ").replace(/\u{1FE7}/gu,"ῦ").replace(/\u{1FC1}/gu,"῀").replace(/\u{1FED}/gu,"`").replace(/\u{1FEE}/gu,"´").replace(/[\u{00A8}\u{0308}]/gu,""),i=n.normalize("NFD").replace(/[\u{300}\u{0301}\u{0304}\u{0306},\u{342}]/gu,"").normalize("NFC");return"strippedDiaeresis"===a?[s]:"strippedDiacritics"===a?[i]:[u]}static getPunctuation(){return'.,;:!?"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r'}static getInflectionConstraints(e){let t={fullFormBased:!1,suffixBased:!1,pronounClassRequired:!1},r=[U,V,D];return e.hasOwnProperty(feature_Feature.types.part)?r.includes(e[feature_Feature.types.part].value)?t.fullFormBased=!0:t.suffixBased=!0:console.warn("Unable to set grammar: part of speech data is missing or is incorrect",e[feature_Feature.types.part]),t.pronounClassRequired=ya.compareLanguages(greek_language_model_GreekLanguageModel.languageID,e.languageID)&&e.hasOwnProperty(feature_Feature.types.part)&&e[feature_Feature.types.part].value===U,t}static getPronounClasses(e,t,r=!0){let a=new Set,n=e.filter(e=>{let a=!1;return e.value&&(a=greek_language_model_GreekLanguageModel.compareWords(e.value,t,r)),a});for(const e of n)if(e.features.hasOwnProperty(feature_Feature.types.grmClass))for(const t of e.features[feature_Feature.types.grmClass].values)a.add(t);if(a.size>0)return new feature_Feature(feature_Feature.types.grmClass,Array.from(a),greek_language_model_GreekLanguageModel.languageID)}static compareWords(e,t,r=!0){let a=!1;if(r){let r=greek_language_model_GreekLanguageModel.alternateWordEncodings(e,null,null,"strippedDiacritics"),n=greek_language_model_GreekLanguageModel.alternateWordEncodings(t,null,null,"strippedDiacritics");for(let e=0;e<r.length&&!(a=r[e]===n[e]);e++);a||(a=greek_language_model_GreekLanguageModel.normalizeWord(e)===greek_language_model_GreekLanguageModel.normalizeWord(t))}else a=e===t;return a}}let da=new Map,ha=!1;class arabic_language_model_ArabicLanguageModel extends oa{static get languageID(){return g}static get languageCode(){return E}static get languageCodes(){return[E,I]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return i}static get baseUnit(){return n}static get typeFeatures(){return ha||this.initTypeFeatures(),da}static initTypeFeatures(){for(const e of this.featureNames)da.set(e,this.getFeature(e));ha=!0}static canInflect(e){return!1}static alternateWordEncodings(e,t=null,r=null,a=null){let n=e.replace(/[\u{064B}\u{064C}\u{064D}\u{0640}]/gu,""),u=n.replace(/[\u{0622}\u{0623}\u{0625}]/gu,"ا"),s=u.replace(/[\u{064E}\u{064F}\u{0650}\u{0670}\u{0671}]/gu,""),i=s.replace(/\u{0651}/gu,""),o=i.replace(/\u{0652}/gu,""),l=o.replace(/\u{0627}/gu,""),c=new Map([["tanwin",n],["hamza",u],["harakat",s],["shadda",i],["sukun",o],["alef",l]]);return null!==a&&c.has(a)?[c.get(a)]:Array.from(c.values())}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}static aggregateInflectionsForDisplay(e){let t=[],r={[x]:[],[w]:[],[N]:[]};for(let a of e)a[feature_Feature.types.morph]&&a[feature_Feature.types.morph].value.match(/ADJ[uaiNK]/)?r[w].push(a):a[feature_Feature.types.morph]&&a[feature_Feature.types.morph].value.match(/NOUN[uaiNK]/)?r[x].push(a):a[feature_Feature.types.morph]&&a[feature_Feature.types.morph].value.match(/NOUN_PROP[uaiNK]/)?r[N].push(a):(a.example=null,t.push(a));for(let e of Object.keys(r)){1!==t.filter(t=>t[feature_Feature.types.part].value===e).length&&t.push(...r[e])}return t}}let ma=new Map,pa=!1;class persian_language_model_PersianLanguageModel extends oa{static get languageID(){return f}static get languageCode(){return A}static get languageCodes(){return[A,y,v,F]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return i}static get baseUnit(){return n}static get typeFeatures(){return pa||this.initTypeFeatures(),ma}static initTypeFeatures(){for(const e of this.featureNames)ma.set(e,this.getFeature(e));pa=!0}static canInflect(e){return!1}static alternateWordEncodings(e,t=null,r=null,a=null){return[]}static getPunctuation(){return".,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}}let _a=new Map,Ea=!1;class geez_language_model_GeezLanguageModel extends oa{static get languageID(){return d}static get languageCode(){return S}static get languageCodes(){return[S]}static get contextForward(){return 0}static get contextBackward(){return 0}static get direction(){return s}static get baseUnit(){return n}static get featureValues(){return new Map([...oa.featureValues,[feature_Feature.types.grmCase,[]],[feature_Feature.types.number,[]],[feature_Feature.types.gender,[]],[feature_Feature.types.mood,[]]])}static get typeFeatures(){return Ea||this.initTypeFeatures(),_a}static initTypeFeatures(){for(const e of this.featureNames)_a.set(e,this.getFeature(e));Ea=!0}static canInflect(e){return!1}static alternateWordEncodings(e,t=null,r=null,a=null){return[]}static getPunctuation(){return"፡፨።፣፤፥፦፧፠,;:!?'\"(){}\\[\\]<>/\\ ‐‑‒–—―‘’“”··\n\r"}}const Ia=new Map([[p,latin_language_model_LatinLanguageModel],[m,latin_language_model_LatinLanguageModel],[_,greek_language_model_GreekLanguageModel],[E,arabic_language_model_ArabicLanguageModel],[I,arabic_language_model_ArabicLanguageModel],[A,persian_language_model_PersianLanguageModel],[S,geez_language_model_GeezLanguageModel]]);class language_model_factory_LanguageModelFactory{static supportsLanguage(e){return e="symbol"==typeof e?language_model_factory_LanguageModelFactory.getLanguageCodeFromId(e):e,Ia.has(e)}static availableLanguages(){let e=new Set;for(let t of Ia.values())e.add(t.languageCode);return Array.from(e)}static getLanguageModel(e){let t=language_model_factory_LanguageModelFactory.getLanguageCodeFromId(e);return Ia.has(t)?Ia.get(t):oa}static getLanguageForCode(e=null){let t=Ia.get(e);return t?new t:new oa}static getLanguageIdFromCode(e){for(const t of Ia.values())if(t.hasCode(e))return t.languageID;return o}static getLanguageCodeFromId(e){for(const t of Ia.values())if(t.languageID.toString()===e.toString())return t.languageCode;return h}static getLanguageAttrs(e){return"symbol"==typeof e?{languageID:e,languageCode:language_model_factory_LanguageModelFactory.getLanguageCodeFromId(e)}:{languageID:language_model_factory_LanguageModelFactory.getLanguageIdFromCode(e),languageCode:e}}static compareLanguages(e,t){return(e="symbol"==typeof e?language_model_factory_LanguageModelFactory.getLanguageCodeFromId(e):e)===(t="symbol"==typeof t?language_model_factory_LanguageModelFactory.getLanguageCodeFromId(t):t)}}var ya=language_model_factory_LanguageModelFactory;class definition_set_DefinitionSet{constructor(e,t){this.lemmaWord=e,this.languageID=t,this.shortDefs=[],this.fullDefs=[]}static readObject(e){!e.languageID&&e.languageCode&&(e.languageID=ya.getLanguageIdFromCode(e.languageCode));let t=new definition_set_DefinitionSet(e.lemmaWord,e.languageID);for(let r of e.shortDefs)t.shortDefs.push(aa.readObject(r));for(let r of e.fullDefs)t.fullDefs.push(aa.readObject(r));return t}isEmpty(){return 0===this.shortDefs.length&&0===this.fullDefs.length}appendShortDefs(e){return e&&(Array.isArray(e)||(e=[e]),this.shortDefs=this.shortDefs.concat(e)),this.shortDefs}clearShortDefs(){this.shortDefs=[]}appendFullDefs(e){return e&&(Array.isArray(e)||(e=[e]),this.fullDefs=this.fullDefs.concat(e)),this.fullDefs}clearFullDefs(){this.fullDefs=[]}convertToJSONObject(){let e=ya.getLanguageCodeFromId(this.languageID);return{lemmaWord:this.lemmaWord,languageCode:e,shortDefs:this.shortDefs.map(e=>e.convertToJSONObject()),fullDefs:this.fullDefs.map(e=>e.convertToJSONObject())}}}class grm_feature_GrmFeature{constructor(e,t,r,a=1){if(!grm_feature_GrmFeature.types.isAllowed(t))throw new Error('Features of "'+t+'" type are not supported.');if(!e)throw new Error("Feature should have a non-empty value.");if(!t)throw new Error("Feature should have a non-empty type.");if(!r)throw new Error("Feature constructor requires a language");this.value=e,this.type=t,this.languageID=void 0,this.languageCode=void 0,({languageID:this.languageID,languageCode:this.languageCode}=ya.getLanguageAttrs(r)),this.sortOrder=a}get language(){return console.warn('Please use a "languageID" instead of a "language"'),this.languageCode}isEqual(e){if(Array.isArray(e.value)){if(!Array.isArray(this.value)||this.value.length!==e.value.length)return!1;let t=this.type===e.type&&ya.compareLanguages(this.languageID,e.languageID);return t=t&&this.value.every(function(t,r){return t===e.value[r]})}return ya.compareLanguages(this.languageID,e.languageID)&&this.type===e.type&&this.value===e.value}isSubsetof(e){Array.isArray(e)||(e=[e]);let t=e[0].languageID,r=e[0].type,a=e.map(e=>e.value);return!(!ya.compareLanguages(this.languageID,t)||this.type!==r||!a.includes(this.value))}hasValue(e){return Array.isArray(this.value)?this.value.includes(e):this.value===e}toString(){return Array.isArray(this.value)?this.value.join(","):this.value}static toFeature(e){if(Array.isArray(e)){if(!(e[0]instanceof feature_Feature)){const t=e[0].type,r=e[0].languageID,a=e.map(e=>e.value);return new feature_Feature(t,a,r)}}else if(!(e instanceof feature_Feature))return new feature_Feature(e.type,e.value,e.languageID);return e}}grm_feature_GrmFeature.types={word:"word",part:"part of speech",number:"number",case:"case",grmCase:"case",declension:"declension",gender:"gender",type:"type",class:"class",grmClass:"class",conjugation:"conjugation",comparison:"comparison",tense:"tense",voice:"voice",mood:"mood",person:"person",frequency:"frequency",meaning:"meaning",source:"source",footnote:"footnote",dialect:"dialect",note:"note",pronunciation:"pronunciation",age:"age",area:"area",geo:"geo",kind:"kind",derivtype:"derivtype",stemtype:"stemtype",morph:"morph",var:"var",isAllowed(e){let t=`${e}`;return Object.values(this).includes(t)}};var Aa=grm_feature_GrmFeature;var Fa=class FeatureList{constructor(e=[]){this._features=[],this._types={},this.add(e)}add(e){if(!e||!Array.isArray(e))throw new Error("Features must be defined and must come in an array.");for(let t of e)this._features.push(t),this._types[t.type]=t}get items(){return this._features}forEach(e){this._features.forEach(e)}ofType(e){if(this.hasType(e))return this._types[e]}hasType(e){return this._types.hasOwnProperty(e)}};var va=class ResourceProvider{constructor(e="",t="",r=new Map([["default",t]])){this.uri=e,this.rights=r,this.rights.has("default")||this.rights.set("default",t)}toString(){return this.rights.get("default")}toLocaleString(e){return this.rights.get(e)||this.rights.get("default")}static getProxy(e=null,t={}){return new Proxy(t,{get:function(t,r){return"provider"===r?e:t[r]}})}};class translation_Translation{constructor(e,t,r=[]){if(!e)throw new Error("Lemma should not be empty.");this.lemmaWord=e.word,this.languageCode=t,this.glosses=r}static readTranslationFromJSONList(e,t,r,a){if(!r||!Array.isArray(r))throw new Error("Recieved not proper translation list",r);let n=r.find(function(t){return t.in===e.word}),u=new translation_Translation(e,t,n.translations);return a?va.getProxy(a,u):u}static loadTranslations(e,t,r,a){e.addTranslation(this.readTranslationFromJSONList(e,t,r,a))}convertToJSONObject(){return{languageCode:this.languageCode,translations:this.glosses}}static readObject(e,t){return new translation_Translation(t,e.languageCode,e.translations)}}var Sa=translation_Translation;class lemma_Lemma{constructor(e,t,r=[],a={}){if(!e)throw new Error("Word should not be empty.");if(!t)throw new Error("Language should not be empty.");this.languageID=void 0,this.languageCode=void 0,({languageID:this.languageID,languageCode:this.languageCode}=ya.getLanguageAttrs(t)),this.word=e,this.principalParts=r,this.features={},this.ID=ra()()}get language(){return console.warn('Please use "languageID" instead of "language"'),this.languageCode}static readObject(e){let t=e.language?e.language:e.languageCode,r=new lemma_Lemma(e.word,t,e.principalParts,e.pronunciation);return e.features&&e.features.length>0&&e.features.forEach(e=>{r.addFeature(feature_Feature.readObject(e))}),e.translation&&(r.translation=Sa.readObject(e.translation,r)),r}convertToJSONObject(){let e=[];for(let t of Object.values(this.features))e.push(t.convertToJSONObject());let t={word:this.word,language:this.languageCode,principalParts:this.principalParts,features:e};return this.translation&&(t.translation=this.translation.convertToJSONObject()),t}set feature(e){if(console.warn('Please use "addFeature" instead'),!e)throw new Error("feature data cannot be empty.");Array.isArray(e)||(e=[e]);let t=e[0].type;this.features[t]=[];for(let r of e){if(!(r instanceof feature_Feature))throw new Error("feature data must be a Feature object.");if(!ya.compareLanguages(r.languageID,this.languageID))throw new Error('Language "'+r.languageID.toString()+'" of a feature does not match a language "'+this.languageID.toString()+'" of a Lemma object.');this.features[t].push(r)}}addFeature(e){if(!e)throw new Error("feature data cannot be empty.");if(!(e instanceof feature_Feature))throw new Error("feature data must be a Feature object.");if(!ya.compareLanguages(e.languageID,this.languageID))throw new Error('Language "'+e.languageID.toString()+'" of a feature does not match a language "'+this.languageID.toString()+'" of a Lemma object.');this.features[e.type]=e}addFeatures(e){if(!Array.isArray(e))throw new Error("Features must be in an array");for(let t of e)this.addFeature(t)}addTranslation(e){if(!e)throw new Error("translation data cannot be empty.");if("Translation"!==e.constructor.name)throw new Error("translation data must be a Translation object.");this.translation=e}isFullHomonym(e){return this.word===e.word&&this.features[feature_Feature.types.part]&&e.features[feature_Feature.types.part]&&this.features[feature_Feature.types.part].isEqual(e.features[feature_Feature.types.part])}}var wa=lemma_Lemma;class inflection_Inflection{constructor(e=null,t,r=null,a=null,n=null){if(!e&&!r)throw new Error("At least stem or suffix must be defined");if(!t)throw new Error("Language should not be empty.");if(!ya.supportsLanguage(t))throw new Error(`language ${t} not supported.`);this.stem=e,this.languageID=void 0,this.languageCode=void 0,({languageID:this.languageID,languageCode:this.languageCode}=ya.getLanguageAttrs(t)),this.model=ya.getLanguageModel(this.languageID),this.features=new Set,this.constraints={fullFormBased:!1,suffixBased:!1,irregular:!1,obligatoryMatches:[],optionalMatches:[],morphologyMatches:[]},this.suffix=r,this.prefix=a,this.example=n,this.lemma=null}clone(){let e=new inflection_Inflection(this.stem,this.languageID,this.suffix,this.prefix,this.example);return e.addFeatures(Array.from(this.features).map(e=>this[e])),e.constraints={fullFormBased:this.constraints.fullFormBased,suffixBased:this.constraints.suffixBased,irregular:this.constraints.irregular,obligatoryMatches:this.constraints.obligatoryMatches?Array.from(this.constraints.obligatoryMatches):[],optionalMatches:this.constraints.obligatoryMatches?Array.from(this.constraints.obligatoryMatches):[],morphologyMatches:this.constraints.morphologyMatches?Array.from(this.constraints.morphologyMatches):[]},e.lemma=this.lemma,e}get form(){const e=this.stem?" - ":"";return this.getForm(e)}getForm(e=""){let t,r,a,n=this.stem?this.stem:"";return this.model.direction===i?(r=this.prefix?e+this.prefix:"",t=(a=this.suffix?this.suffix+e:"")+n+r):t=(r=this.prefix?this.prefix+e:"")+n+(a=this.suffix?e+this.suffix:""),t}get language(){return console.warn('Please use a "languageID" instead of a "language"'),this.languageCode}setConstraints(){if(this.model.hasOwnProperty("getInflectionConstraints")){let e=this.model.getInflectionConstraints(this);this.constraints=Object.assign(this.constraints,e)}}smartWordCompare(e,t,r={}){let a;r.hasOwnProperty("normalize")||(r.normalize=!0),r.hasOwnProperty("fuzzySuffix")||(r.fuzzySuffix=!1),a=this.constraints.irregular?"Suffix"===t?this.suffix:this[feature_Feature.types.fullForm]?this[feature_Feature.types.fullForm].value:this.form:this.constraints.suffixBased?this.suffix:this.form;let n=this.modelCompareWords(e,a,r.normalize);if(!n&&"Suffix"===t&&r.fuzzySuffix){let t=this.getForm();if(t&&e&&t.length>=e.length){let a=t.substring(t.length-e.length);n=this.modelCompareWords(e,a,r.normalize)}}return n}compareWithWord(e,t=!0){const r=this.constraints.suffixBased?this.suffix:this.form;return this.modelCompareWords(e,r,t)}modelCompareWords(e,t,r=!0){return ya.getLanguageModel(this.languageID).compareWords(e,t,r)}disambiguatedBy(e){let t=!0;0!==this.features.length&&0!==e.features.length||(t=!1),e.features.length>this.features.length&&(t=!1);for(let r of e.features)if(!this[r]||!this[r].isEqual(e[r])){t=!1;break}return t}set feature(e){if(console.warn('Please use "addFeature" instead.'),!e)throw new Error("Inflection feature data cannot be empty.");Array.isArray(e)||(e=[e]);let t=e[0].type;this[t]=[];for(let r of e){if(!(r instanceof feature_Feature))throw new Error("Inflection feature data must be a Feature object.");if(!ya.compareLanguages(r.languageID,this.languageID))throw new Error(`Language "${r.languageID.toString()}" of a feature does not match\n          a language "${this.languageID.toString()}" of an Inflection object.`);this[t].push(r),this.features.add(t)}}addFeature(e){if(!e)throw new Error("feature data cannot be empty.");if(!(e instanceof feature_Feature))throw new Error("feature data must be a Feature object.");if(!ya.compareLanguages(e.languageID,this.languageID))throw new Error('Language "'+e.languageID.toString()+'" of a feature does not match a language "'+this.languageID.toString()+'" of a Lemma object.');this[e.type]=e,this.features.add(e.type)}addFeatures(e){if(!Array.isArray(e))throw new Error("Features must be in an array");for(let t of e)this.addFeature(t)}hasFeatureValue(e,t){return!!this.hasOwnProperty(e)&&this[e].values.includes(t)}toString(){let e=`Inflection stem: ${this.stem}, prefix: ${this.prefix}, suffix: ${this.suffix}, langID: ${this.languageID.toString()}\n  features:  `;for(const t of this.features.values())e+=`${t}: ${this[t].value}, `;e+="\n  constraints:  ";for(const[t,r]of Object.entries(this.constraints))Array.isArray(r)?e+=`${t}: [${r}], `:e+=`${t}: ${r}, `;return e+=`\n  example: ${this.example}`}static readObject(e,t){let r=new inflection_Inflection(e.stem,e.languageCode,e.suffix,e.prefix,e.example);return r.languageID=ya.getLanguageIdFromCode(r.languageCode),e.features&&e.features.length>0&&e.features.forEach(e=>{r.addFeature(feature_Feature.readObject(e))}),t&&(r.lemma=t),r}convertToJSONObject(){let e=[];for(let t of this.features.keys())e.push(this[t].convertToJSONObject());let t=ya.getLanguageCodeFromId(this.languageID);return{stem:this.stem,languageCode:t,suffix:this.suffix,prefix:this.prefix,example:this.example,features:e}}}var Ca=inflection_Inflection;class lexeme_Lexeme{constructor(e,t,r=null){if(!e)throw new Error("Lemma should not be empty.");if(!(e instanceof wa))throw new Error("Lemma should be of Lemma object type.");if(!t)throw new Error("Inflections data should not be empty.");if(!Array.isArray(t))throw new Error("Inflection data should be provided in an array.");for(let e of t)if(!(e instanceof Ca))throw new Error("All inflection data should be of Inflection object type.");if(null!==r&&!(r instanceof definition_set_DefinitionSet))throw new Error("Meaning should be of DefinitionSet object type.");this.lemma=e,this.altLemmas=[],this.inflections=[],t.forEach(e=>{this.addInflection(e)}),this.meaning=r||new definition_set_DefinitionSet(this.lemma.word,this.lemma.languageID),this.disambiguated=!1}addInflection(e){e.lemma=this.lemma,e.lexeme=this,this.inflections.push(e)}addAltLemma(e){this.altLemmas.push(e)}isPopulated(){return Object.entries(this.lemma.features).length>0||!this.meaning.isEmpty()||this.inflections.length>0}static disambiguate(e,t){let r=new lexeme_Lexeme(e.lemma,e.inflections,e.meaning);if(e.lemma.isFullHomonym(t.lemma)&&t.inflections.length>0){r.disambiguated=!0;let e=[];for(let a of r.inflections)for(let r of t.inflections)a.disambiguatedBy(r)&&e.push(a);if(r.inflections=e,0===r.inflections.length)for(let e of t.inflections)r.addInflection(e)}return r}getGroupedInflections(){return ya.getLanguageModel(this.lemma.languageID).groupInflectionsForDisplay(this.inflections)}static readObject(e){let t=wa.readObject(e.lemma),r=[];for(let t of e.inflections)r.push(Ca.readObject(t));let a=new lexeme_Lexeme(t,r);return e.meaning&&(a.meaning=definition_set_DefinitionSet.readObject(e.meaning)),a}convertToJSONObject(e=!1){let t=[];this.inflections.forEach(e=>{t.push(e.convertToJSONObject())});let r={lemma:this.lemma.convertToJSONObject(),inflections:t};if(e){let e=this.meaning.convertToJSONObject();r.meaning=e}return r}static getSortByTwoLemmaFeatures(e,t){return(r,a)=>{if(r.lemma.features[e]&&a.lemma.features[e]||!r.lemma.features[e]&&!a.lemma.features[[e]]){let n;return 0!==(n=r.lemma.features[e]&&a.lemma.features[e]?r.lemma.features[e].compareTo(a.lemma.features[e]):0)?n:r.lemma.features[t]&&a.lemma.features[t]?r.lemma.features[t].compareTo(a.lemma.features[t]):r.lemma.features[t]&&!a.lemma.features[t]?-1:!r.lemma.features[t]&&a.lemma.features[t]?1:0}return r.lemma.features[e]&&!a.lemma.features[e]?-1:!r.lemma.features[e]&&a.lemma.features[e]?1:0}}}var Oa=lexeme_Lexeme;class homonym_Homonym{constructor(e,t){if(!e||Array.isArray(e)&&0===e.length)throw new Error("Lexemes data should not be empty.");if(!Array.isArray(e))throw new Error("Lexeme data should be provided in an array.");for(let t of e)if(!(t instanceof Oa))throw new Error("All lexeme data should be of Lexeme object type.");this.lexemes=e,this.targetWord=t}static createSimpleForm(e,t,r=[]){let a=new wa(e,t),n=new Oa(a,r);return new homonym_Homonym([n],e)}static readObject(e){let t=[];if(e.lexemes)for(let r of e.lexemes)t.push(Oa.readObject(r));return new homonym_Homonym(t,e.form)}convertToJSONObject(e=!1){let t={lexemes:[],form:this.targetWord};for(let r of this.lexemes)t.lexemes.push(r.convertToJSONObject(e));return t}get language(){return console.warn("Please use languageID instead"),ya.getLanguageCodeFromId(this.languageID)}get languageID(){if(this.lexemes&&this.lexemes[0]&&this.lexemes[0].lemma&&this.lexemes[0].lemma.languageID)return this.lexemes[0].lemma.languageID;throw new Error("Homonym has not been initialized properly. Unable to obtain language ID information.")}get inflections(){let e=[];for(const t of this.lexemes)e=e.concat(t.inflections);return e}isDisambiguated(){return this.lexemes.filter(e=>e.disambiguated).length>0}static disambiguate(e,t){if(0===t.length)return e;let r=t.shift(),a=[],n=[];for(let t of r.lexemes){let r=!1;for(let n of e.lexemes){let e=Oa.disambiguate(n,t);a.push(e),e.disambiguated&&(r=!0)}r||(t.disambiguated=!0,n.push(t))}let u=new homonym_Homonym([...a,...n],e.targetWord);return homonym_Homonym.disambiguate(u,t)}}var Da=homonym_Homonym;class PsEventData{constructor(e,t=""){this.name=e.name,this.publisher=e.publisher,this.caller=t}get description(){return this.caller?`${this.publisher}.${this.caller} -> [${this.name}]`:`${this.publisher} -> [${this.name}]`}}class ps_event_PsEvent{constructor(e,t){this.name=e,this.publisher=t.name,this._subscribers=[]}get subscribers(){return this._subscribers}sub(e){this._subscribers.push(e)}pub(e={},t=""){this._subscribers.forEach(r=>r(e,new PsEventData(this,t)))}}class text_quote_selector_TextQuoteSelector{constructor(e,t){this.languageCode=e,this.normalizedText=t,this.contextForward=6,this.contextBackward=6,this.ID=ra()()}get contextHTML(){let e=`<span class="alpheios_worditem_incontext_add">${this.text}</span>`,t=this.prefix.replace(this.text,e),r=this.suffix.replace(this.text,e);return`${t} <span class="alpheios_worditem_incontext">${this.text}</span> ${r}`}createContext(e,t){this.prefix=e.anchorNode.data.substr(0,t.start).trim().replace(/\n/g,""),this.suffix=e.anchorNode.data.substr(t.end).trim().replace(/\n/g,""),this.text=t.text,this.source=window.location.href,this.languageCode=t.languageCode}static readObject(e){let t=new text_quote_selector_TextQuoteSelector(e.languageCode,e.target.selector.exact);return t.prefix=e.target.selector.prefix,t.suffix=e.target.selector.suffix,t.text=e.targetWord,t.source=e.target.source,t}isEqual(e){let t=`${this.prefix}${this.text}${this.suffix}`;t=t.trim();let r=`${e.prefix}${e.text}${e.suffix}`;return r=r.trim(),this.text===e.text&&this.source===e.source&&this.languageCode===e.languageCode&&t===r}}class word_usage_example_WordUsageExample extends text_quote_selector_TextQuoteSelector{constructor(e,t,r,a,n,u){super(e,t),this.prefix=r,this.suffix=a,this.source=n,this.cit=u}createContext(){return null}get htmlExample(){return`${this.prefix}<span class="alpheios_word_usage_list_item__text_targetword">${this.normalizedText}</span>${this.suffix}`}fullCit(e){let t="";return this.author?(t=this.author.title(e),this.textWork?t=t+" "+this.textWork.title(e):this.cit&&this.cit.split(".")&&this.cit.split(".").length>=2&&(t=t+" "+this.cit.split(".")[1]+"."),this.cit&&this.cit.split(".")&&this.cit.split(".").length>=3&&(t=t+" "+this.cit.split(".")[2])):t=this.cit,t}}class Author{constructor(e,t,r){this.urn=e,this.titles=t,this.abbreviations=r}static get defaultLang(){return"eng"}title(e){return this.titles[e]?this.titles[e]:this.titles[Author.defaultLang]?this.titles[Author.defaultLang]:Object.values(this.titles).length>0?Object.values(this.titles)[0]:null}abbreviation(e){return this.abbreviations[e]?this.abbreviations[e]:this.abbreviations[Author.defaultLang]?this.abbreviations[Author.defaultLang]:Object.values(this.abbreviations).length>0?Object.values(this.abbreviations)[0]:null}}var Ta=Author;class TextWork{constructor(e,t,r,a){this.urn=t,this.titles=r,this.author=e,this.abbreviations=a}static get defaultLang(){return"eng"}static get defaultIDPrefix(){return"phi"}title(e){return this.titles[e]?this.titles[e]:this.titles[TextWork.defaultLang]?this.titles[TextWork.defaultLang]:Object.values(this.titles).length>0?Object.values(this.titles)[0]:null}abbreviation(e){return this.abbreviations[e]?this.abbreviations[e]:this.abbreviations[TextWork.defaultLang]?this.abbreviations[TextWork.defaultLang]:Object.values(this.abbreviations).length>0?Object.values(this.abbreviations)[0]:null}}var La=TextWork;class word_item_WordItem{constructor(e={targetWord:null,languageCode:null,important:!1,currentSession:!0,context:[],homonym:{}}){if(this.version=1,this.targetWord=e.targetWord,this.languageCode=e.languageCode,!this.targetWord||!this.languageCode)throw new Error("Unable to construct a worditem without at least a targetWord and a languageCode");this.important=void 0!==e.important&&e.important,this.currentSession=void 0===e.currentSession||e.currentSession,this.context=e.context||[],this.homonym=e.homonym||{}}static readObject(e){let t={},r=[];return e.homonym&&(t=word_item_WordItem.readHomonym(e)),e.context&&(r=word_item_WordItem.readContext(e)),new word_item_WordItem({targetWord:e.targetWord,languageCode:e.languageCode,important:e.important,currentSession:e.currentSession,context:r,homonym:t})}static readHomonym(e){return Da.readObject(e.homonym)}get hasTextQuoteSelectors(){return this.context.length>0}static readContext(e){let t=[];for(let r of e){let e=text_quote_selector_TextQuoteSelector.readObject(r);t.push(e)}return t}addContext(e){for(let t of e){0===this.context.filter(e=>e.isEqual(t)).length&&this.context.push(t)}}get lemmasList(){return this.homonym&&this.homonym.lexemes?this.homonym.lexemes.map(e=>e.lemma.word).filter((e,t,r)=>r.indexOf(e)===t).join(", "):""}merge(e){let t=["homonym","important","currentSession"];for(let r of t)this._emptyProp(r)&&!e._emptyProp(r)&&(this[r]=e[r])}_emptyProp(e){return!this[e]||"object"==typeof this[e]&&0===Object.keys(this[e]).length}get formattedContext(){let e={};for(let t of this.context)e[t.source]||(e[t.source]=[]),e[t.source].push(t);return e}}class word_list_WordList{constructor(e,t=[]){if(!e)throw new Error("Unable to construct a wordlist without a languagecode");this.languageCode=e,this.items={},t.forEach(e=>{this.addWordItem(e)})}get values(){return Object.values(this.items)}get isEmpty(){return 0===Object.values(this.items).length}addWordItem(e){if(e.languageCode!==this.languageCode)throw new Error(`Language Code mismatch ${e.languageCode} !=== ${this.languageCode}`);let t=this.getWordItem(e.targetWord,!1);t&&(e=e.merge(t));let r=this._makeItemKey(this.languageCode,e.targetWord);this.items[r]=e}deleteWordItem(e){let t=this._makeItemKey(this.languageCode,e),r=this.items[t];return r&&delete this.items[t],r}removeAllWordItems(){this.items={}}getWordItem(e,t=!0,r=null){let a=this._makeItemKey(this.languageCode,e);if(t&&!this.items[a]){let t=new word_item_WordItem({targetWord:e,languageCode:this.languageCode});r&&r.pub({dataObj:t,params:{segment:"common"}}),this.items[a]=t}return this.items[a]}_makeItemKey(e,t){return`${e}:${t}`}}r.d(t,"Constants",function(){return a}),r.d(t,"Definition",function(){return aa}),r.d(t,"DefinitionSet",function(){return definition_set_DefinitionSet}),r.d(t,"Feature",function(){return feature_Feature}),r.d(t,"GrmFeature",function(){return Aa}),r.d(t,"FeatureType",function(){return ua}),r.d(t,"FeatureList",function(){return Fa}),r.d(t,"FeatureImporter",function(){return na}),r.d(t,"Inflection",function(){return Ca}),r.d(t,"LanguageModelFactory",function(){return ya}),r.d(t,"Homonym",function(){return Da}),r.d(t,"Lexeme",function(){return Oa}),r.d(t,"Lemma",function(){return wa}),r.d(t,"LatinLanguageModel",function(){return latin_language_model_LatinLanguageModel}),r.d(t,"GreekLanguageModel",function(){return greek_language_model_GreekLanguageModel}),r.d(t,"ArabicLanguageModel",function(){return arabic_language_model_ArabicLanguageModel}),r.d(t,"PersianLanguageModel",function(){return persian_language_model_PersianLanguageModel}),r.d(t,"GeezLanguageModel",function(){return geez_language_model_GeezLanguageModel}),r.d(t,"ResourceProvider",function(){return va}),r.d(t,"Translation",function(){return Sa}),r.d(t,"PsEvent",function(){return ps_event_PsEvent}),r.d(t,"PsEventData",function(){return PsEventData}),r.d(t,"TextQuoteSelector",function(){return text_quote_selector_TextQuoteSelector}),r.d(t,"WordUsageExample",function(){return word_usage_example_WordUsageExample}),r.d(t,"Author",function(){return Ta}),r.d(t,"TextWork",function(){return La}),r.d(t,"WordItem",function(){return word_item_WordItem}),r.d(t,"WordList",function(){return word_list_WordList})}])});