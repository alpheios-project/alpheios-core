{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./l10n/l10n.js","webpack:///./l10n/message-bundle.js","webpack:///./lib/extended-greek-data.js","webpack:///./lib/extended-language-data.js","webpack:///./lib/footnote.js","webpack:///./lib/form.js","webpack:///./lib/inflection-data.js","webpack:///./lib/inflection-list.js","webpack:///./lib/inflection-set.js","webpack:///./lib/lang/greek/data/adjective/footnotes.csv","webpack:///./lib/lang/greek/data/adjective/suffixes.csv","webpack:///./lib/lang/greek/data/article/forms.csv","webpack:///./lib/lang/greek/data/noun/footnotes.csv","webpack:///./lib/lang/greek/data/noun/suffixes.csv","webpack:///./lib/lang/greek/data/numeral/footnotes.csv","webpack:///./lib/lang/greek/data/numeral/forms.csv","webpack:///./lib/lang/greek/data/pronoun/footnotes.csv","webpack:///./lib/lang/greek/data/pronoun/forms.csv","webpack:///./lib/lang/greek/data/verb-participle/paradigm/rules.csv","webpack:///./lib/lang/greek/data/verb/paradigm/footnotes.csv","webpack:///./lib/lang/greek/data/verb/paradigm/rules.csv","webpack:///./lib/lang/greek/greek-language-dataset.js","webpack:///./lib/lang/latin/data/adjective/footnotes.csv","webpack:///./lib/lang/latin/data/adjective/suffixes.csv","webpack:///./lib/lang/latin/data/gerundive/form_footnotes.csv","webpack:///./lib/lang/latin/data/gerundive/forms.csv","webpack:///./lib/lang/latin/data/noun/footnotes.csv","webpack:///./lib/lang/latin/data/noun/suffixes.csv","webpack:///./lib/lang/latin/data/participle/form_footnotes.csv","webpack:///./lib/lang/latin/data/participle/forms.csv","webpack:///./lib/lang/latin/data/participle/suffixes.csv","webpack:///./lib/lang/latin/data/pronoun/footnotes.csv","webpack:///./lib/lang/latin/data/pronoun/forms.csv","webpack:///./lib/lang/latin/data/supine/form_footnotes.csv","webpack:///./lib/lang/latin/data/supine/forms.csv","webpack:///./lib/lang/latin/data/supine/suffixes.csv","webpack:///./lib/lang/latin/data/verb/footnotes.csv","webpack:///./lib/lang/latin/data/verb/form_footnotes.csv","webpack:///./lib/lang/latin/data/verb/forms.csv","webpack:///./lib/lang/latin/data/verb/suffixes.csv","webpack:///./lib/lang/latin/latin-language-dataset.js","webpack:///./lib/language-dataset-factory.js","webpack:///./lib/language-dataset.js","webpack:///./lib/match-data.js","webpack:///./lib/morpheme.js","webpack:///./lib/paradigm-inflection-list.js","webpack:///./lib/paradigm-rule.js","webpack:///./lib/paradigm.js","webpack:///./lib/suffix.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/inherits/inherits.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/papaparse/papaparse.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/readable-stream/duplex-browser.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/passthrough.js","webpack:///./node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/readable-stream/transform.js","webpack:///./node_modules/readable-stream/writable-browser.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/stream-browserify/index.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/string_decoder/node_modules/safe-buffer/index.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/util-deprecate/node.js","webpack:///./node_modules/util/support/isBufferBrowser.js","webpack:///./node_modules/util/util.js","webpack:///./node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/uuid/lib/rng-browser.js","webpack:///./node_modules/uuid/v4.js","webpack:///(webpack)/buildin/global.js","webpack:///./views/lang/greek/adjective/greek-adjective-simplified-view.js","webpack:///./views/lang/greek/adjective/greek-adjective-view.js","webpack:///./views/lang/greek/article/greek-article-view.js","webpack:///./views/lang/greek/greek-view-set.js","webpack:///./views/lang/greek/greek-view.js","webpack:///./views/lang/greek/noun/greek-noun-simplified-view.js","webpack:///./views/lang/greek/noun/greek-noun-view.js","webpack:///./views/lang/greek/numeral/greek-numeral-view.js","webpack:///./views/lang/greek/pronoun/greek-gender-pronoun-view.js","webpack:///./views/lang/greek/pronoun/greek-lemma-gender-pronoun-view.js","webpack:///./views/lang/greek/pronoun/greek-person-gender-pronoun-view.js","webpack:///./views/lang/greek/pronoun/greek-person-pronoun-view.js","webpack:///./views/lang/greek/pronoun/greek-pronoun-view.js","webpack:///./views/lang/greek/verb-participle/greek-verb-participle-paradigm-view.js","webpack:///./views/lang/greek/verb/greek-verb-paradigm-view.js","webpack:///./views/lang/latin/adjective/latin-adjective-view.js","webpack:///./views/lang/latin/latin-view-set.js","webpack:///./views/lang/latin/latin-view.js","webpack:///./views/lang/latin/noun/latin-noun-view.js","webpack:///./views/lang/latin/noun/latin-supine-view.js","webpack:///./views/lang/latin/verb/irregular/latin-verb-irregular-base-view.js","webpack:///./views/lang/latin/verb/irregular/latin-verb-irregular-view.js","webpack:///./views/lang/latin/verb/irregular/latin-verb-irregular-voice-view.js","webpack:///./views/lang/latin/verb/irregular/latin-verb-participle-irregular-view.js","webpack:///./views/lang/latin/verb/irregular/latin-verb-supine-irregular-view.js","webpack:///./views/lang/latin/verb/latin-conjugation-mood-voice-view.js","webpack:///./views/lang/latin/verb/latin-conjugation-voice-mood-view.js","webpack:///./views/lang/latin/verb/latin-imperative-view.js","webpack:///./views/lang/latin/verb/latin-infinitive-view.js","webpack:///./views/lang/latin/verb/latin-mood-conjugation-voice-view.js","webpack:///./views/lang/latin/verb/latin-mood-voice-conjugation-view.js","webpack:///./views/lang/latin/verb/latin-verb-mood-view.js","webpack:///./views/lang/latin/verb/latin-verb-participle-view.js","webpack:///./views/lang/latin/verb/latin-verb-view.js","webpack:///./views/lang/latin/verb/latin-voice-conjugation-mood-view.js","webpack:///./views/lang/latin/verb/latin-voice-mood-conjugation-view.js","webpack:///./views/lib/cell.js","webpack:///./views/lib/column.js","webpack:///./views/lib/group-feature-list.js","webpack:///./views/lib/group-feature-type.js","webpack:///./views/lib/header-cell.js","webpack:///./views/lib/node-group.js","webpack:///./views/lib/row-title-cell.js","webpack:///./views/lib/row.js","webpack:///./views/lib/table.js","webpack:///./views/lib/view-set-factory.js","webpack:///./views/lib/view-set.js","webpack:///./views/lib/view.js","webpack:///./views/lib/wide-view.js","webpack:///util (ignored)","webpack:///util (ignored)?b7fb","webpack:///external \"alpheios-data-models\"","webpack:///external \"intl-messageformat\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACiB;AACD;AACA;AACpC;AAC2B;;AAEuC;;;;;;;;;;;;;ACPnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACT;AACA;;AAEtC;AACA,YAAY,+CAAI;AAChB,YAAY,+CAAI;AAChB;;AAEA;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,gBAAgB;AAC7B,eAAe,KAAK;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,OAAO,wCAAwC,mBAAmB;AACrG;AACA;AACA,4BAA4B,0DAAa;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AAAA;AAAA;AAAA;AAAkD;;AAElD;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,8BAA8B,yDAAiB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAA2D;;AAE5C,gCAAgC,+DAAoB;AACnE;AACA;AACA,iBAAiB,+DAAoB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,qEAAqE,iBAAiB;AACtF;AACA,GAAG;AACH;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAA8C;;AAE/B;AACf;AACA;AACA;AACA,SAAS,4DAAO;AAChB;;AAEA;AACA;AACA;AACA,SAAS,4DAAO,0BAA0B,4DAAO;AACjD,sEAAsE,4DAAO;AAC7E;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAoC;;AAErB,mBAAmB,oDAAQ;AAC1C;;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAA8C;;AAE/B;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,yBAAyB;AACtC,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAO;AACrC;AACA,+BAA+B,4DAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClGA;AAAA;AAAA;AAAiD;;AAEjD;AACA,+CAA+C,wCAAwC;AACvF;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,uDAAuD;AACpE,aAAa,aAAa;AAC1B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,uDAAuD;AACpE,aAAa,aAAa;AAC1B,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,2DAA2D,oCAAoC,SAAS,2BAA2B;AACnI,2BAA2B,2BAA2B,SAAS,kBAAkB;AACjF;AACA;;AAEA;AACA;AACA,aAAa,yBAAyB;AACtC,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA,oCAAoC,2DAAc;AAClD;AACA;AACA;AACA;;;;;;;;;;;;AC7GA,+zD;;;;;;;;;;;ACAA,w+xB;;;;;;;;;;;ACAA,81D;;;;;;;;;;;ACAA,wkH;;;;;;;;;;;ACAA,qt9B;;;;;;;;;;;ACAA,6b;;;;;;;;;;;ACAA,onF;;;;;;;;;;;ACAA,8T;;;;;;;;;;;ACAA,ys4B;;;;;;;;;;;ACAA,slH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,4T;;;;;;;;;;;ACAA,yqiF;;AAE3B;AACE;AACrB;AACJ;AACQ;AAC6B;AACE;;AAEQ;AACE;;AAEZ;;AAEA;AACQ;;AAER;AACQ;;AAE5E;;AAEA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACmF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACnF;AAC+E;AACQ;;AAEvF;AAC8F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC9F;AACoG;;AAEnE;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;;AAEe,mCAAmC,gEAAe;AACjE;AACA;;AAEA;AACA,0BAA0B,4DAAO,qBAAqB,4DAAO,CAAC,4DAAO;AACrE,0BAA0B,4DAAO,qBAAqB,4DAAO,CAAC,4DAAO;AACrE,0BAA0B,4DAAO,iBAAiB,4DAAO,CAAC,4DAAO;AACjE,0BAA0B,4DAAO,oBAAoB,4DAAO,CAAC,4DAAO;;AAEpE;AACA;AACA,8BAA8B,oEAAe;AAC7C;;AAEA;AACA,0BAA0B,4DAAO;AACjC,gEAAgE,8DAAS,iBAAiB,8DAAS;AACnG,uEAAuE,8DAAS,iBAAiB,8DAAS,gBAAgB,8DAAS;AACnI;;AAEA;AACA,WAAW,8DAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,4DAAO;AACrC,8BAA8B,4DAAO;AACrC,8BAA8B,4DAAO;AACrC,8BAA8B,4DAAO;AACrC,8BAA8B,4DAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4DAAO;AACnD;AACA;;AAEA,kCAAkC,gEAAiB;AACnD;AACA;AACA,SAAS,8DAAS;AAClB;;AAEA,iDAAiD,sDAAM;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA,8BAA8B,4DAAO;AACrC,8BAA8B,4DAAO;AACrC,8BAA8B,4DAAO;AACrC,8BAA8B,4DAAO;AACrC;AACA;AACA;;AAEA,kCAAkC,gEAAiB;AACnD;AACA;AACA,SAAS,8DAAS;AAClB;;AAEA,iDAAiD,oDAAI;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA,8BAA8B,4DAAO;AACrC;;AAEA;AACA,4CAA4C,4DAAO;;AAEnD,sEAAsE;AACtE;;AAEA,2BAA2B,qCAAqC,4DAAO;AACvE,4BAA4B,qCAAqC,4DAAO;AACxE,2BAA2B,qCAAqC,4DAAO;AACvE,yBAAyB,qCAAqC,4DAAO;;AAErE;;AAEA;AACA;AACA;AACA,4CAA4C,4DAAO;AACnD;AACA;;AAEA,kCAAkC,gEAAiB;AACnD;AACA;AACA,SAAS,8DAAS;AAClB;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP,iDAAiD,oDAAI;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA,8BAA8B,4DAAO;AACrC;;AAEA;AACA,4CAA4C,4DAAO;AACnD;AACA,6BAA6B,qCAAqC,4DAAO;AACzE,2BAA2B,qCAAqC,4DAAO;AACvE,2BAA2B,qCAAqC,4DAAO;AACvE,4BAA4B,qCAAqC,4DAAO;AACxE,2BAA2B,qCAAqC,4DAAO;AACvE,yBAAyB,qCAAqC,4DAAO;;AAErE;;AAEA;AACA;AACA;AACA,4CAA4C,4DAAO;AACnD;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,4DAAO;AACnD;AACA;;AAEA,kCAAkC,gEAAiB;AACnD;AACA;AACA,SAAS,8DAAS;AAClB;AACA,iDAAiD,oDAAI;AACrD;AACA;;AAEA;AACA,yBAAyB,8DAAS;AAClC;AACA,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,wBAAwB,wDAAQ,gCAAgC,wFAAU;AAC1E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,wFAAU;AAC3E;AACA;;AAEA;AACA,yBAAyB,8DAAS;AAClC;AACA,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E,yBAAyB,wDAAQ,gCAAgC,mGAAU;AAC3E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;;AAEA,6BAA6B,qCAAqC,4DAAO;AACzE,0BAA0B,qCAAqC,4DAAO;AACtE,yBAAyB,qCAAqC,4DAAO;AACrE,0BAA0B,qCAAqC,4DAAO;AACtE,4BAA4B,qCAAqC,4DAAO;;AAExE;AACA;AACA,oBAAoB,0DAAK;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,0DAA0D,GAAG;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC,4DAAO,2BAA2B,8DAAS;AACpF,oBAAoB,iDAAS,OAAO,8EAAgB,GAAG,uBAAuB;AAC9E,gDAAgD,sDAAM;AACtD,eAAe,iDAAS,OAAO,6EAAe,GAAG,uBAAuB;AACxE;;AAEA;AACA,yCAAyC,4DAAO,2BAA2B,8DAAS;AACpF,oBAAoB,iDAAS,OAAO,mFAAqB,GAAG,uBAAuB;AACnF,gDAAgD,sDAAM;AACtD,eAAe,iDAAS,OAAO,kFAAoB,GAAG,uBAAuB;AAC7E;;AAEA;AACA,yCAAyC,4DAAO,2BAA2B,8DAAS;AACpF,YAAY,iDAAS,OAAO,8EAAe,GAAG,uBAAuB;AACrE;;AAEA;AACA,yCAAyC,4DAAO,2BAA2B,8DAAS;AACpF,oBAAoB,iDAAS,OAAO,kFAAmB,GAAG,uBAAuB;AACjF,gDAAgD,oDAAI;AACpD,YAAY,iDAAS,OAAO,8EAAe,GAAG,uBAAuB;AACrE;;AAEA;AACA,yCAAyC,4DAAO,2BAA2B,8DAAS;AACpF,oBAAoB,iDAAS,OAAO,kFAAmB,GAAG,uBAAuB;AACjF,gDAAgD,oDAAI;AACpD,YAAY,iDAAS,OAAO,8EAAe,GAAG,uBAAuB;AACrE;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,4DAAO,2BAA2B,8DAAS;AACpF;AACA;AACA,MAAM,iDAAS,OAAO,oFAAoB,GAAG,uBAAuB;AACpE;AACA,oCAAoC,wDAAQ,EAAE,iDAAS,OAAO,wFAAwB,GAAG,uBAAuB;;AAEhH;AACA;AACA,yCAAyC,4DAAO,2BAA2B,8DAAS;AACpF;AACA;AACA,MAAM,iDAAS,OAAO,+FAA8B,GAAG,uBAAuB;AAC9E;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAO,uBAAuB,8DAAS;AAC7D;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,4DAAO,CAAC,4DAAO;AACvF;;AAEA;AACA;AACA;;AAEA;AACA,uDAAuD,4DAAO,CAAC,4DAAO;AACtE;;AAEA;AACA,mCAAmC,4DAAO,aAAa,8DAAS;AAChE;AACA,cAAc,4DAAO,aAAa,4DAAO;AACzC,KAAK,WAAW,8DAAS,eAAe,8DAAS,mCAAmC,4DAAO;AAC3F;AACA,cAAc,4DAAO;AACrB,KAAK;AACL;AACA,cAAc,4DAAO,aAAa,4DAAO;AACzC,KAAK;AACL;AACA,cAAc,4DAAO;AACrB;AACA;;AAEA;AACA;;AAEA,SAAS,8DAAS,eAAe,8DAAS,eAAe,8DAAS,mCAAmC,4DAAO;AAC5G;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA,KAAK,qCAAqC,4DAAO,aAAa,8DAAS;AACvE;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA,KAAK;AACL;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA,SAAS,8DAAS,eAAe,8DAAS,eAAe,8DAAS,mCAAmC,4DAAO;AAC5G;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;;AAEf;AACA,KAAK,qCAAqC,4DAAO,aAAa,8DAAS;AACvE;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA,KAAK;AACL;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AChrBA,y3B;;;;;;;;;;;ACAA,60J;;;;;;;;;;;ACAA,6mC;;;;;;;;;;;ACAA,sX;;;;;;;;;;;ACAA,8NAA8N,qzB;;;;;;;;;;;ACA9N,+8R;;;;;;;;;;;ACAA,0nC;;;;;;;;;;;ACAA,+3B;;;;;;;;;;;ACAA,u2D;;;;;;;;;;;ACAA,2hB;;;;;;;;;;;ACAA,m7EAAm7E,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,+EAA+E,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,gFAAgF,cAAc,oFAAoF,cAAc,mFAAmF,cAAc,kFAAkF,cAAc,gFAAgF,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,iFAAiF,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,+EAA+E,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,kFAAkF,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,+EAA+E,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,uEAAuE,cAAc,mFAAmF,cAAc,kFAAkF,cAAc,gFAAgF,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,uEAAuE,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,+EAA+E,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,uEAAuE,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,+EAA+E,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,uEAAuE,cAAc,mFAAmF,cAAc,kFAAkF,cAAc,gFAAgF,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,uEAAuE,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,+EAA+E,cAAc,oFAAoF,cAAc,iFAAiF,cAAc,uEAAuE,cAAc,iFAAiF,cAAc,kFAAkF,cAAc,8EAA8E,cAAc,kFAAkF,cAAc,gFAAgF,cAAc,+EAA+E,cAAc,kFAAkF,cAAc,kFAAkF,cAAc,mEAAmE,cAAc,kFAAkF,cAAc,qEAAqE,cAAc,gFAAgF,cAAc,iFAAiF,cAAc,kFAAkF,cAAc,mEAAmE,cAAc,iFAAiF,cAAc,qEAAqE,cAAc,+EAA+E,cAAc,iFAAiF,cAAc,kFAAkF,cAAc,8EAA8E,cAAc,kFAAkF,cAAc,gFAAgF,cAAc,qEAAqE,cAAc,kFAAkF,cAAc,kFAAkF,cAAc,mEAAmE,cAAc,kFAAkF,cAAc,qEAAqE,cAAc,+DAA+D,cAAc,iFAAiF,cAAc,kFAAkF,cAAc,mEAAmE,cAAc,iFAAiF,cAAc,qEAAqE,cAAc,qEAAqE,cAAc,iFAAiF,cAAc,kFAAkF,cAAc,8EAA8E,cAAc,kFAAkF,cAAc,gFAAgF,cAAc,qEAAqE,cAAc,kFAAkF,cAAc,kFAAkF,cAAc,mEAAmE,cAAc,kFAAkF,cAAc,qEAAqE,cAAc,qEAAqE,cAAc,iFAAiF,cAAc,kFAAkF,cAAc,mEAAmE,cAAc,iFAAiF,cAAc,qEAAqE,cAAc,6EAA6E,sGAAsG,oGAAoG,kGAAkG,uGAAuG,oGAAoG,oGAAoG,sGAAsG,qGAAqG,mGAAmG,uGAAuG,oGAAoG,oGAAoG,uGAAuG,oGAAoG,kGAAkG,uGAAuG,oGAAoG,qGAAqG,sGAAsG,oGAAoG,kGAAkG,uGAAuG,oGAAoG,uFAAuF,sGAAsG,qGAAqG,mGAAmG,uGAAuG,oGAAoG,uFAAuF,sGAAsG,oGAAoG,kGAAkG,uGAAuG,oGAAoG,uFAAuF,oGAAoG,qGAAqG,iGAAiG,qGAAqG,mGAAmG,kGAAkG,qGAAqG,qGAAqG,mFAAmF,qGAAqG,qFAAqF,mGAAmG,oGAAoG,qGAAqG,mFAAmF,oGAAoG,qFAAqF,kGAAkG,oGAAoG,qGAAqG,iGAAiG,qGAAqG,mGAAmG,qFAAqF,qGAAqG,qGAAqG,mFAAmF,qGAAqG,qFAAqF,+EAA+E,oGAAoG,qGAAqG,mFAAmF,oGAAoG,qFAAqF,+iQAA+iQ,gBAAgB,gBAAgB,gBAAgB,sEAAsE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,sEAAsE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,sEAAsE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,sEAAsE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,sEAAsE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,sEAAsE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,gEAAgE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,gEAAgE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,gEAAgE,gBAAgB,gBAAgB,gBAAgB,oEAAoE,gBAAgB,gBAAgB,gBAAgB,kEAAkE,gBAAgB,gBAAgB,gBAAgB,++L;;;;;;;;;;;ACA5+9B,6mC;;;;;;;;;;;ACAA,yR;;;;;;;;;;;ACAA,sE;;;;;;;;;;;ACAA,umC;;;;;;;;;;;ACAA,qoC;;;;;;;;;;;ACAA,yp3C;;;;;;;;;;;ACAA,+z1C;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACiF;AAC3B;AACnB;AACJ;AAC/B;AACoE;AACE;AACF;AACQ;AACE;AACE;AACZ;AACE;AACR;AACiB;AACK;AACN;AACiB;AACnB;AACN;AACiB;AACf;AACiB;AACxD;;AAEjC;AACA;AACA;AACA;AACe,mCAAmC,gEAAe;AACjE;AACA;;AAEA;AACA,sBAAsB,4DAAO,qBAAqB,4DAAO,CAAC,4DAAO;AACjE,sBAAsB,4DAAO,qBAAqB,4DAAO,CAAC,4DAAO;AACjE,sBAAsB,4DAAO,iBAAiB,4DAAO,CAAC,4DAAO;;AAE7D;AACA;AACA,8BAA8B,oEAAe;AAC7C;;AAEA;AACA,sBAAsB,4DAAO;AAC7B,oDAAoD,8DAAS,UAAU,8DAAS;AAChF,sBAAsB,4DAAO;AAC7B,gEAAgE,8DAAS,iBAAiB,8DAAS;;AAEnG,sBAAsB,4DAAO;AAC7B,6BAA6B,8DAAS;;AAEtC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,8DAAS;AACpB;;AAEA;AACA;AACA;AACA,mBAAmB,8DAAS,YAAY,8DAAS,uBAAuB,8DAAS,cAAc,8DAAS;AACxG;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,4DAAO;AACjC,0BAA0B,4DAAO;AACjC,0BAA0B,4DAAO;AACjC,0BAA0B,4DAAO;AACjC,0BAA0B,4DAAO;AACjC;AACA;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,iDAAiD,sDAAM;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,iDAAiD,oDAAI;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA;AACA;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,iDAAiD,sDAAM;AACvD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA,iDAAiD,sDAAM;AACvD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,4DAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;;AAEP,iDAAiD,sDAAM;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,sBAAsB,0DAAK;;AAE3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,wCAAwC,4DAAO;AAC/C;AACA;AACA,wCAAwC,4DAAO;AAC/C;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,4DAAO;;AAE/C;AACA;AACA,iDAAiD,oDAAI;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,0DAAK;AAC7B,wCAAwC,4DAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,4DAAO;AAC/C;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,4DAAO;;AAE/C;AACA;AACA,iDAAiD,oDAAI;AACrD;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,4DAAO,2BAA2B,8DAAS;AAChF,oBAAoB,iDAAS,OAAO,8EAAgB,GAAG,uBAAuB;AAC9E,gDAAgD,sDAAM;AACtD,eAAe,iDAAS,OAAO,6EAAe,GAAG,uBAAuB;AACxE;;AAEA;AACA,qCAAqC,4DAAO,2BAA2B,8DAAS;AAChF,oBAAoB,iDAAS,OAAO,iFAAmB,GAAG,uBAAuB;AACjF,gDAAgD,oDAAI;AACpD,YAAY,iDAAS,OAAO,6EAAe,GAAG,uBAAuB;AACrE;;AAEA;AACA,qCAAqC,4DAAO,2BAA2B,8DAAS;AAChF,oBAAoB,iDAAS,OAAO,mFAAqB,GAAG,uBAAuB;AACnF,gDAAgD,sDAAM;AACtD,eAAe,iDAAS,OAAO,kFAAoB,GAAG,uBAAuB;AAC7E;;AAEA;AACA,qCAAqC,4DAAO,2BAA2B,8DAAS;AAChF,oBAAoB,iDAAS,OAAO,+EAAgB,GAAG,uBAAuB;AAC9E,gDAAgD,sDAAM;;AAEtD,eAAe,iDAAS,OAAO,8EAAe,GAAG,uBAAuB;AACxE;;AAEA,oBAAoB,iDAAS,OAAO,oFAAoB,GAAG,uBAAuB;AAClF,gDAAgD,oDAAI;;AAEpD,YAAY,iDAAS,OAAO,2EAAY,GAAG,uBAAuB;AAClE;;AAEA;AACA,qCAAqC,4DAAO,2BAA2B,8DAAS;AAChF,eAAe,iDAAS,OAAO,oFAAyB,GAAG,uBAAuB;AAClF;;AAEA,oBAAoB,iDAAS,OAAO,0FAA8B,GAAG,uBAAuB;AAC5F,gDAAgD,oDAAI;AACpD,YAAY,iDAAS,OAAO,iFAAsB,GAAG,uBAAuB;AAC5E;;AAEA;AACA,qCAAqC,4DAAO,2BAA2B,8DAAS;AAChF,eAAe,iDAAS,OAAO,gFAAqB,GAAG,uBAAuB;AAC9E;;AAEA,oBAAoB,iDAAS,OAAO,sFAA0B,GAAG,uBAAuB;AACxF,gDAAgD,oDAAI;AACpD,YAAY,iDAAS,OAAO,6EAAkB,GAAG,uBAAuB;AACxE;;AAEA;AACA,qCAAqC,4DAAO,2BAA2B,8DAAS;AAChF,oBAAoB,iDAAS,OAAO,yFAAyB,GAAG,uBAAuB;AACvF,gDAAgD,oDAAI;AACpD,YAAY,iDAAS,OAAO,gFAAiB,GAAG,uBAAuB;AACvE;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,4DAAO;AACnC;AACA,qBAAqB,4DAAO,kCAAkC,4DAAO,8BAA8B,8DAAS;AAC5G;AACA;AACA,OAAO,qBAAqB,4DAAO;AACnC,oFAAoF,4DAAO;AAC3F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAO;AACnC;AACA;AACA,2EAA2E,4DAAO;AAClF;AACA;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA,8BAA8B,4DAAO;AACrC;AACA,yFAAyF,4DAAO;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,4DAAO,aAAa,8DAAS;AAC9D,iCAAiC,4DAAO,aAAa,8DAAS;AAC9D;AACA,cAAc,4DAAO,aAAa,4DAAO,iBAAiB,4DAAO;AACjE,KAAK,qCAAqC,4DAAO,aAAa,8DAAS;AACvE,cAAc,4DAAO;AACrB,KAAK;AACL,cAAc,4DAAO,aAAa,4DAAO;AACzC,KAAK;AACL;AACA,cAAc,4DAAO;AACrB;AACA;;AAEA;AACA;AACA,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb;;AAEA;AACA;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,SAAS;AACvB;AACA;AACA;AACA,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb,MAAM,4DAAO;AACb;;AAEA;AACA;AACA,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf,QAAQ,4DAAO;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;ACxlBA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACgB;AACA;;AAEjE;AACA;;AAEA;AACA;AACA;AACA;AACe;AACf;AACA,aAAa,cAAc;AAC3B;AACA,+BAA+B,6EAAY,EAAE,6EAAY;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,2DAAc;AAC/B;AACA;AACA;;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AACvC;AACJ;AACJ;AACQ;AACA;AACW;AACE;AACV;;AAEvC;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,yEAAG;AACpB;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,cAAc;AAC3B,aAAa,UAAU;AACvB,aAAa,WAAW;AACxB,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,4DAAO;AAClC,aAAa,4DAAO,wBAAwB,4DAAO;AACnD,aAAa,4DAAO;AACpB;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,qCAAqC,0DAAa;AAClD;;AAEA;AACA;;AAEA;AACA;AACA,2CAA2C,0DAAa;AACxD;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,oDAAQ;;AAE/B;;AAEA;AACA,qCAAqC,0DAAa;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,SAAS;AACtB,aAAa,yBAAyB;AACtC,cAAc,OAAO;AACrB,QAAQ,UAAU;AAClB,QAAQ,QAAQ;AAChB;AACA,kEAAkE,oDAAQ;AAC1E;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,SAAS;AACtB,aAAa,yBAAyB;AACtC,cAAc,OAAO;AACrB,QAAQ,UAAU;AAClB,QAAQ,QAAQ;AAChB;AACA,gEAAgE,oDAAQ;AACxE;AACA;;AAEA,kEAAkE,oDAAQ;AAC1E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,WAAW;AACxB,aAAa,8BAA8B;AAC3C,aAAa,yBAAyB;AACtC,eAAe,4CAA4C;AAC3D;AACA;AACA;AACA,uEAAuE,oDAAQ;AAC/E;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,YAAY;AACZ;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,MAAM;AACnB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,4DAAO;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,4DAAO,CAAC,4DAAO;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,gDAAI;AAC7F;AACA,+DAA+D,gBAAgB;AAC/E;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kFAAkF,aAAa;AAC/F;AACA;;AAEA;AACA,yFAAyF,oDAAQ;;AAEjG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,KAAK,OAAO,GAAG,aAAa,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4DAAO;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC,cAAc,2BAA2B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,cAAc,cAAc;AAC5B;AACA;AACA,4BAA4B,0DAAa;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA,kFAAkF,UAAU;AAC5F;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,kDAAM;AACtC,0CAA0C,kDAAM;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,gDAAI;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,oDAAQ;AAC3D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,qBAAqB,2DAAc;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,gDAAI;AACtC,uCAAuC,gDAAI,uDAAuD,qBAAqB;AACvH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,sDAAS;AACnC;AACA,gGAAgG,oBAAoB;AACpH;;AAEA;AACA,wFAAwF,oDAAQ;AAChG;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oFAAoF,oDAAQ;AAC5F;;AAEA;AACA,0FAA0F,oDAAQ;AAClG;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,UAAU;AACvB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjkBA;AAAA;AAAA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,iBAAiB,eAAe,eAAe,eAAe,eAAe,qBAAqB,qBAAqB;AAC7J,4BAA4B,qBAAqB;AACjD;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACG;AACb;AACuB;AAC/B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA,cAAc,8CAAM;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,OAAO,iBAAiB,OAAO;AACpC;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,2DAAc;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,4DAAO;AAC1B,aAAa,4DAAO;AACpB,sCAAsC,4DAAO;AAC7C,eAAe,4DAAO;AACtB;AACA;;AAEA;AACA,qBAAqB,mDAAS;AAC9B;;AAEA;AACA;AACA,wCAAwC,+DAAoB;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,4DAAO;AACpB,YAAY,4DAAO,wBAAwB,4DAAO;AAClD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,yBAAyB;AACtC,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,yBAAyB;AACtC;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,yCAAyC,eAAe;AACxD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,4DAA4D;;AAEnG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sBAAsB,UAAU,WAAW,QAAQ,QAAQ;AAC/E;AACA,mBAAmB,QAAQ,IAAI,YAAY;AAC3C;AACA,qBAAqB,kBAAkB,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;ACnXA;AAAA;AAAA;AAAiD;;AAElC,qCAAqC,2DAAc;AAClE;AACA;AACA;AACA,aAAa,wBAAwB;AACrC,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpEA;AAAA;AAAe;AACf;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACkB;AACD;AACqB;;AAEnD;AACf;AACA,cAAc,8CAAM;AACpB;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA,oBAAoB;AACpB,iCAAiC,mCAAmC,UAAU;AAC9E;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAO;AACvC;AACA,eAAe,4DAAO,mBAAmB,4DAAO,CAAC,4DAAO;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK,OAAO,cAAc,SAAS;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,eAAe,oEAAsB;AACrC;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,MAAM;AACnB;AACA;AACA;AACA,wBAAwB,yDAAY;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK,OAAO,cAAc,SAAS,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK,OAAO,eAAe,SAAS;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnIA;AAAA;AAAA;AAAoC;;AAErB,qBAAqB,oDAAQ;AAC5C;;;;;;;;;;;;;ACHY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,oDAAW;AAChC,cAAc,mBAAO,CAAC,gDAAS;AAC/B,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC7SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;ACnFA;AACA,aAAa,mBAAO,CAAC,yCAAM;AAC3B;AACA;AACA,CAAC;AACD,mBAAmB,mBAAO,CAAC,0EAAuB;AAClD;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAA0C;AAC/C;AACA;AACA,EAAE,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACrB;AACA,MAAM,EAWJ;AACF,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAoC,aAAa;AACjD,sCAAsC,eAAe;AACrD,sCAAsC,eAAe;;AAErD;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA,wCAAwC;AACxC,wCAAwC;AACxC,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,iCAAiC;AACjC,MAAM;AACN;AACA,IAAI;;AAEJ,mBAAmB;AACnB,eAAe;;;AAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AAOA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,gEAAgE,gDAAgD,EAAE;AAClH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,mBAAmB;AACvC;AACA;;AAEA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,gCAAgC,2CAA2C;AAC3E;AACA;AACA,6BAA6B;AAC7B;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD;AACA,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,kCAAkC;;AAElC,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,UAAU,cAAc,EAAE,EAAE;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA,eAAe,mBAAO,CAAC,yDAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,sBAAsB,EAAE,yEAAyE,EAAE,oEAAoE,EAAE;;AAEzK;AACA,uBAAuB;AACvB,sBAAsB;AACtB,aAAa;AACb,cAAc;AACd,sBAAsB;AACtB,uBAAuB;AACvB,sBAAsB;AACtB,mBAAmB;AACnB,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA,qBAAqB,QAAQ,eAAe,EAAE,iBAAiB,QAAQ,gBAAgB,EAAE;AACzF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;;AAEA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,8CAA8C;AAChE,mBAAmB,6BAA6B;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA,iCAAiC;;AAEjC;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,8BAA8B,gBAAgB,EAAE;AAClF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC5vDD,+CAAa;;AAEb;AACA;AACA;AACA,oBAAoB;AACpB,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;AC1CA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;ACvLtC,iBAAiB,mBAAO,CAAC,qFAAyB;;;;;;;;;;;;;ACAlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,qDAAU;AAClC;;AAEA,eAAe,mBAAO,CAAC,kFAAoB;AAC3C,eAAe,mBAAO,CAAC,kFAAoB;;AAE3C;;AAEA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,oFAAqB;;AAE7C;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,qDAAU;AAClC;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;;AAEA;AACA,cAAc,mBAAO,CAAC,gDAAS;AAC/B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,mBAAO,CAAC,+CAAQ;;AAEzB;AACA;AACA;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,wGAA2B;AAChD;;AAEA;;AAEA,aAAa,mBAAO,CAAC,wDAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,qDAAU;AAClC;;AAEA;AACA,gBAAgB,mBAAO,CAAC,aAAM;AAC9B;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,wGAA+B;AACxD,kBAAkB,mBAAO,CAAC,kGAA4B;AACtD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,6EAA6E;AACtJ;;AAEA;AACA,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,mBAAO,CAAC,4EAAiB;AACjE;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,kGAAkG;AAClG,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,4FAA4F;AAC5F,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,mBAAO,CAAC,4EAAiB;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,mDAAmD,iEAAiE;AACpH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,C;;;;;;;;;;;;;AC1/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8EAAkB;;AAEvC;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,qDAAU;AAClC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,C;;;;;;;;;;;;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,qDAAU;AAClC;;AAEA;AACA;AACA,aAAa,mBAAO,CAAC,6DAAgB;AACrC;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,wGAA2B;AAChD;;AAEA;;AAEA,aAAa,mBAAO,CAAC,wDAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,mBAAO,CAAC,kGAA4B;;AAEtD;;AAEA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;AC9qBa;;AAEb,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,aAAa,mBAAO,CAAC,wDAAa;AAClC,WAAW,mBAAO,CAAC,aAAM;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,C;;;;;;;;;;;;AC9Ea;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;ACzEA,iBAAiB,mBAAO,CAAC,+CAAQ;;;;;;;;;;;;ACAjC,iBAAiB,mBAAO,CAAC,sEAAY;;;;;;;;;;;;ACArC,2BAA2B,mBAAO,CAAC,yFAA2B;AAC9D;AACA;AACA,mBAAmB,mBAAO,CAAC,yFAA2B;AACtD,iBAAiB,mBAAO,CAAC,qFAAyB;AAClD,oBAAoB,mBAAO,CAAC,2FAA4B;AACxD,sBAAsB,mBAAO,CAAC,+FAA8B;;;;;;;;;;;;ACN5D,iBAAiB,mBAAO,CAAC,sEAAY;;;;;;;;;;;;ACArC,iBAAiB,mBAAO,CAAC,yFAA2B;;;;;;;;;;;;ACApD;AACA,aAAa,mBAAO,CAAC,8CAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;ACzLD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,mBAAO,CAAC,+CAAQ;AACzB,eAAe,mBAAO,CAAC,qDAAU;;AAEjC;AACA,kBAAkB,mBAAO,CAAC,uFAA6B;AACvD,kBAAkB,mBAAO,CAAC,uFAA6B;AACvD,gBAAgB,mBAAO,CAAC,mFAA2B;AACnD,mBAAmB,mBAAO,CAAC,iFAA8B;AACzD,qBAAqB,mBAAO,CAAC,qFAAgC;;AAE7D;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,oFAAa;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,sCAAsC,sCAAsC;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;ACvSA;AACA,aAAa,mBAAO,CAAC,8CAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,mBAAO,CAAC,iEAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7DA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,yCAAM;;;;;;;;;;;;ACL/B;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0EAAoB;;AAE/C;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA,mBAAmB,mBAAO,CAAC,qDAAU;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzkBA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACjCA,UAAU,mBAAO,CAAC,yDAAW;AAC7B,kBAAkB,mBAAO,CAAC,iEAAmB;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACb;AAC8C;;AAElE,2CAA2C,wFAAkB;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,2DAA2D,8DAAS;AACpE,qCAAqC,8DAAS;AAC9C,KAAK;AACL,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACb;AACoB;;AAExC,iCAAiC,uEAAS;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA;AACA,0BAA0B,8DAAS;AACnC;AACA,4BAA4B,uEAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA,KAAK,4BAA4B,8DAAS;AAC1C;AACA,4BAA4B,8DAAS;AACrC,4BAA4B,uEAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA,KAAK;AACL;AACA,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACN;AACF;AACF;;AAEvB,+BAA+B,sDAAS;AACvD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,oDAAI;AACf;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;AAE0B;AACqB;;AAEZ;;AAEA;;AAEM;AACqB;;AAEd;AACW;AACE;AACb;AACL;AACgC;;AAEvG,2BAA2B,wDAAO;AACjD;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,MAAM,iFAAa;AACnB,MAAM,4FAAuB;AAC7B,MAAM,uFAAgB;AACtB,MAAM,uFAAgB;AACtB,MAAM,2FAAkB;AACxB,MAAM,sGAA4B;AAClC,MAAM,8FAAsB;AAC5B,MAAM,qGAA4B;AAClC,MAAM,+FAAsB;AAC5B,MAAM,oGAA2B;AACjC,MAAM,2FAAqB;AAC3B,MAAM,iHAA+B;AACrC;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACzD;AACsC;AACF;AAC0B;;AAE/C,wBAAwB,oDAAI;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAgB,gBAAgB,4DAAO;AACtD,aAAa,kEAAgB,gBAAgB,4DAAO;AACpD,mBAAmB,kEAAgB,gBAAgB,4DAAO;AAC1D,eAAe,kEAAgB,gBAAgB,4DAAO;AACtD,aAAa,kEAAgB,gBAAgB,4DAAO;AACpD,eAAe,kEAAgB,gBAAgB,4DAAO;AACtD;AACA;AACA;AACA,OAAO,8DAAS,iBAAiB,8DAAS;AAC1C;AACA,OAAO,8DAAS,iBAAiB,8DAAS,gBAAgB,8DAAS;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,8DAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qDAAK;AAC1B;;AAEA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,8DAAS;AACnC;AACA;AACA,4BAA4B,8DAAS;AACrC;AACA,KAAK,4BAA4B,8DAAS;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC;AACA;;AAEA;AACA,yBAAyB,8DAAS,kBAAkB;AACpD,yBAAyB,8DAAS,iBAAiB;AACnD,yBAAyB,8DAAS,eAAe;AACjD,2EAA2E;AAC3E,kFAAkF;AAClF;AACA;AACA;;;;;;;;;;;;;AC9HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACT;AACJ;AACoB;AACV;;AAE9B,sCAAsC,wDAAa;AAClE;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,uEAAS;AAC9C,OAAO,8DAAS,iBAAiB,8DAAS,gBAAgB,8DAAS;AACnE,2CAA2C,wDAAQ;AACnD,6CAA6C,uEAAS;;AAEtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,2DAA2D,8DAAS;AACpE,qCAAqC,8DAAS;AAC9C,KAAK;AACL,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACT;AACJ;AACoB;;AAExC,4BAA4B,uEAAS;AACpD;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,uEAAS,yCAAyC,8DAAS,iBAAiB,8DAAS;AAC1H,2CAA2C,wDAAQ;AACnD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA;AACA,SAAS,8DAAS,UAAU,8DAAS;AACrC;AACA,4BAA4B,uEAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA,KAAK;AACL;AACA,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAClB;AACR;AACQ;;AAEC;AACyB;;AAElD,+BAA+B,sDAAS;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,4DAAO,CAAC,4DAAO;AAC/C,+BAA+B,kEAAgB,CAAC,4DAAO;AACvD;;AAEA;AACA;AACA;AACA,2CAA2C,wDAAQ;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,oDAAI;AACf;;AAEA;AACA,qBAAqB,2DAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD;AACA,sEAAsE,4DAAO;AAC7E;;AAEA;AACA,wBAAwB,sDAAS;AACjC;AACA;AACA;AACA;AACA,4BAA4B,sDAAS;AACrC;AACA,KAAK;AACL;AACA,4BAA4B,sDAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA,KAAK;AACL;AACA,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,8DAAS,kBAAkB;AACpD,yBAAyB,8DAAS,iBAAiB;AACnD,yBAAyB,8DAAS,eAAe;AACjD,yBAAyB,sDAAS,yCAAyC;AAC3E,yBAAyB,sDAAS,gDAAgD;AAClF;AACA;AACA;;;;;;;;;;;;;ACvGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACR;AACc;AAChB;;AAEtC;AACA;AACA;AACA;AACe,qCAAqC,8DAAgB;AACpE;AACA,uBAAuB,8DAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA,MAAM,8DAAS;AACf,MAAM,8DAAS;AACf,MAAM,8DAAS;AACf,MAAM,8DAAS;AACf,MAAM,8DAAS;AACf,MAAM,8DAAS;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,sDAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,sDAAS;AACnC;AACA;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACH;AACW;AAC3B;;AAEtC;AACA;AACA;AACe,0CAA0C,8DAAgB;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kEAAgB,CAAC,4DAAO;AACvD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAgB;AAC1C;AACA;AACA;;;;;;;;;;;;;AC5DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACM;AAChB;;AAEtC;AACA;AACA;AACe,2CAA2C,8DAAgB;AAC1E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA;AACA,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACM;AAChB;;AAEtC;AACA;AACA;AACe,qCAAqC,8DAAgB;AACpE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA,YAAY,8DAAS;AACrB;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8E;AAC/C;AACM;AAC0B;AACR;;AAEvD;AACA;AACA;AACA;AACe,+BAA+B,uEAAS;AACvD;AACA,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,4DAAO,CAAC,4DAAO,kEAAkE,uEAAS;AAC1H,+BAA+B,wEAAgB,CAAC,4DAAO;AACvD;;AAEA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,oDAAI;AACf;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,OAAO;AACrB;AACA;AACA,gEAAgE,4DAAO;AACvE,4BAA4B,4DAAO;AACnC;AACA;AACA;;AAEA;AACA,cAAc,aAAa,EAAE,0DAAI,gDAAgD;AACjF;;AAEA;AACA,cAAc,aAAa,GAAG,kCAAkC;AAChE;;AAEA;AACA,WAAW,0DAAI,gBAAgB,aAAa,GAAG,kCAAkC;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B;AACA,cAAc;AACd;AACA;AACA,kEAAkE,4DAAO;AACzE;AACA;AACA;AACA;AACA,4CAA4C,4DAAO;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD,4DAAO;AAC1D,0BAA0B,4DAAO;AACjC;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA,yBAAyB,+DAAU;AACnC,8BAA8B,4DAAO,CAAC,4DAAO;AAC7C,kBAAkB,4DAAO;AACzB;AACA;AACA;AACA;;;;;;;;;;;;;AC5IA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACuB;;AAExD,8CAA8C,yEAAqB;AAClF;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;AACA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAClB;AACF;AACkB;;AAEvD;AACA;AACA;AACA;AACe,oCAAoC,uEAAS;AAC5D;AACA,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc,KAAK,OAAO,eAAe,SAAS;AAClD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,wDAAQ;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA,cAAc,aAAa,EAAE,0DAAI,qDAAqD;AACtF;;AAEA;AACA,cAAc,aAAa,GAAG,uCAAuC;AACrE;;AAEA;AACA,WAAW,0DAAI,gBAAgB,aAAa,GAAG,uCAAuC;AACtF;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B;AACA,cAAc;AACd;AACA;AACA;AACA,8BAA8B,4DAAO;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,wDAAQ;AACjF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACF;AACN;;AAEzB,iCAAiC,sDAAS;AACzD;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,sDAAS,6BAA6B,8DAAS,UAAU,8DAAS;AAC3G;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA;AACA,0BAA0B,sDAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC;AACA;;AAEA;AACA;AACA,WAAW,sDAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC,0BAA0B,8DAAS;AACnC;AACA;AACA;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAC0B;AACe;AACmB;AACA;AACA;AACA;AACA;AACA;AACtB;AACR;AACyB;AACW;AACnB;AAC6B;AACR;AAC/G;AACiF;AAClE,2BAA2B,wDAAO;AACjD;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,MAAM,iFAAa;AACnB,MAAM,2FAAkB;AACxB,MAAM,6FAAuB;AAC7B,MAAM,oFAAe;AACrB,MAAM,wFAAmB;AACzB,MAAM,uFAAmB;AACzB,MAAM,sGAAsB;AAC5B,MAAM,4GAA2B;AACjC,MAAM,iHAAgC;AACtC,MAAM,6GAA4B;AAClC;AACA,MAAM,mGAA6B;AACnC,MAAM,mGAA6B;AACnC,MAAM,mGAA6B;AACnC,MAAM,mGAA6B;AACnC,MAAM,mGAA6B;AACnC,MAAM,mGAA6B;AACnC;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACpB;AAC0B;AACxB;;AAExB,wBAAwB,0DAAI;AAC3C;AACA;;AAEA;AACA,eAAe,wEAAgB,gBAAgB,4DAAO;AACtD,aAAa,wEAAgB,gBAAgB,4DAAO;AACpD,mBAAmB,wEAAgB,gBAAgB,4DAAO;AAC1D,eAAe,wEAAgB,gBAAgB,4DAAO;AACtD,aAAa,wEAAgB,gBAAgB,4DAAO;AACpD,cAAc,wEAAgB,gBAAgB,4DAAO;AACrD,cAAc,wEAAgB,gBAAgB,4DAAO;AACrD,iBAAiB,wEAAgB,CAAC,4DAAO;AACzC,2CAA2C,4DAAO,2BAA2B,8DAAS;AACtF,2CAA2C,4DAAO,2BAA2B,8DAAS;AACtF;AACA,eAAe,wEAAgB,gBAAgB,4DAAO;AACtD,oBAAoB,wEAAgB,gBAAgB,4DAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW,8DAAS;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2DAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,mEAAmE,4DAAO;AAC1E,sEAAsE,4DAAO;AAC7E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB;AACA;AACA;;AAEA;AACA;AACA,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB,WAAW,8DAAS;AACpB;AACA;AACA;AACA;;;;;;;;;;;;;ACpIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACT;AACJ;AACoB;;AAExC,4BAA4B,uEAAS;AACpD;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,uEAAS,yCAAyC,8DAAS,iBAAiB,8DAAS;AAC1H;AACA;AACA,2CAA2C,wDAAQ;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA;AACA,SAAS,8DAAS,UAAU,8DAAS,UAAU,8DAAS;AACxD;AACA,4BAA4B,uEAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA,KAAK;AACL;AACA,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC,4BAA4B,8DAAS;AACrC;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACF;AACN;AACF;;AAEvB,8BAA8B,sDAAS;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACF;AACxB;AACK;;AAEpC;AACA;AACA;AACA;AACA;AACe,0CAA0C,uEAAS;AAClE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,WAAW,oDAAI;AACf;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,4DAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA,aAAa,4DAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,4DAAO;AAC1E;AACA;AACA;AACA;AACA,cAAc,4DAAO,qBAAqB,4DAAO;AACjD;AACA;AACA;AACA,8HAA8H,+BAA+B;AAC7J;AACA;AACA;AACA,eAAe,4DAAO,oBAAoB,4DAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AAC6D;AACW;AACP;AAC3E;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACe,qCAAqC,0GAA0B;AAC9E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,eAAe,IAAI,yBAAyB;AAChG;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA,iBAAiB,4DAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,gHAA+B,EAAE,4GAA4B;AACzE;AACA;;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AAC6D;AACW;AACP;AAC3E;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACe,0CAA0C,0GAA0B;AACnF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oDAAoD,eAAe,IAAI,yBAAyB;AAChG;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,wDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA,iBAAiB,4DAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,gHAA+B,EAAE,4GAA4B;AACzE;AACA;;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACkD;AACT;AACW;AACE;AACnD;AACxB;;AAErB,+CAA+C,0GAA0B;AACxF;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,qEAAgB,CAAC,4DAAO;AACvD,yCAAyC,4DAAO,4BAA4B,8DAAS;AACrF,yCAAyC,4DAAO,4BAA4B,8DAAS;AACrF,yCAAyC,4DAAO,4BAA4B,8DAAS;AACrF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,qBAAqB,wDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,qGAAsB,EAAE,2GAA2B,EAAE,4GAA4B;AAC7F;AACA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACkD;AACT;AACW;AACU;AACnF;;AAErB,2CAA2C,0GAA0B;AACpF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS;AACrB;;AAEA;AACA,qBAAqB,wDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA,aAAa,4DAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY,qGAAsB,EAAE,2GAA2B,EAAE,gHAAgC;AACjG;AACA;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACA;AACE;AACV;;AAEvB,4CAA4C,2DAAa;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,sEAAsE,4DAAO;AAC7E;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACA;AACE;AACV;;AAEvB,4CAA4C,2DAAa;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,sEAAsE,4DAAO;AAC7E;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACA;AACzD;AACsC;;AAEvB,kCAAkC,gEAAiB;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,sEAAsE,4DAAO;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,4DAAO;AAC7B,iBAAiB,4DAAO;AACxB,iBAAiB,4DAAO,6BAA6B,8DAAS;AAC9D;;AAEA;AACA,2BAA2B,4DAAO,6BAA6B,8DAAS;AACxE;AACA;;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACA;AACzD;AACsC;;AAEvB,kCAAkC,gEAAiB;AAClE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,wDAAwD,4DAAO;AAC/D,mEAAmE,4DAAO;AAC1E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,4DAAO;AAC7B,iBAAiB,4DAAO;AACxB,iBAAiB,4DAAO,6BAA6B,8DAAS;AAC9D;;AAEA;AACA,2BAA2B,4DAAO,6BAA6B,8DAAS;AACxE;AACA;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACA;AACE;AACV;;AAEvB,4CAA4C,2DAAa;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,sEAAsE,4DAAO;AAC7E;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACA;AACE;AACV;;AAEvB,4CAA4C,2DAAa;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,sEAAsE,4DAAO;AAC7E;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAA8C;AACE;;AAEjC,gCAAgC,2DAAa;AAC5D;AACA,WAAW,sDAAM;AACjB;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACX;AACN;AACsB;AACxB;;AAEvB,sCAAsC,sDAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,+DAAgB,CAAC,4DAAO;AACvD,yCAAyC,4DAAO,4BAA4B,8DAAS;AACrF,yCAAyC,4DAAO,4BAA4B,8DAAS;AACrF,yCAAyC,4DAAO,4BAA4B,8DAAS;AACrF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,8DAAS,uBAAuB,8DAAS;AACrD;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,wDAAwD,4DAAO;AAC/D,mEAAmE,4DAAO;AAC1E;AACA;AACA;;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACR;;AAEzB,4BAA4B,sDAAS;AACpD;AACA,YAAY,8DAAS;AACrB;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACA;AACE;AACV;;AAEvB,4CAA4C,2DAAa;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,sEAAsE,4DAAO;AAC7E;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACA;AACE;AACV;;AAEvB,4CAA4C,2DAAa;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,sDAAM;AACjB;;AAEA;AACA,qBAAqB,kDAAK;AAC1B;AACA;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA;AACA,yCAAyC,4DAAO;AAChD,yCAAyC,4DAAO;AAChD;AACA,sEAAsE,4DAAO;AAC7E;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAe;AACf;AACA;AACA,aAAa,WAAW;AACxB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/FA;AAAA;AAAA;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChGA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACL;;AAEtD;AACA;AACA;AACe,+BAA+B,gEAAW;AACzD;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,kCAAkC;;AAEjE;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,8BAA8B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,+BAA+B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA,sBAAsB,4DAAO;AAC7B;AACA,+BAA+B,8DAAgB;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA,KAAK;AACL,gFAAgF,SAAS;AACzF;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACT;AACX;AACO;AACL;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,aAAa,UAAU;AACvB,aAAa,yBAAyB;AACtC;AACA;AACA,4EAA4E,wDAAQ;AACpF;AACA;AACA;AACA;AACA,mBAAmB,wEAAG;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA,MAAM,yEAAoB;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,yEAAoB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe,aAAa;AAC5B;AACA;AACA,eAAe,0DAAY;AAC3B;;AAEA;AACA,eAAe,uDAAU;AACzB;AACA;;;;;;;;;;;;;ACtLA;AAAA;AAAA;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,OAAO;AACpB,aAAa,iBAAiB;AAC9B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/FA;AAAA;AAAA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,OAAO;AACpB,aAAa,iBAAiB;AAC9B;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5EA;AAAA;AAAA;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACZ;AACI;AACN;AAC4B;AACf;;AAEvC;AACA;AACA;AACe;AACf;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA,wBAAwB,8DAAgB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB,eAAe,UAAU;AACzB;AACA;AACA,oBAAoB,sDAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,sDAAM;AACtC;;AAEA,yBAAyB,gDAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,kDAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,+CAAG;AACzC;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,sCAAsC,+CAAG;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,0BAA0B,4BAA4B;AACtD,2BAA2B,+CAAG;AAC9B;AACA,+BAA+B,kCAAkC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6E;AAC1C;AACuB;AACA;;AAE3C;AACf;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uDAAuD,EAAE;AACzD;AACA,oBAAoB,oDAAO;AAC3B;AACA;AACA;;AAEA;AACA,WAAW,yEAAG;AACd;;AAEA;AACA;AACA,WAAW,8DAAS;AACpB,eAAe,qEAAY;AAC3B,WAAW,8DAAS;AACpB,eAAe,qEAAY;AAC3B;AACA,eAAe,oDAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACe;;AAE1E;AACA;AACA;AACA;AACe;AACf;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,wEAAsB;;AAE3C;AACA;AACA;AACA,qBAAqB,yEAAoB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyF;AAClC;AAClB;AACH;AACH;;AAE/B;AACA;AACA;AACe;AACf;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,cAAc;AAC3B,aAAa,OAAO;AACpB;AACA,gDAAgD,qDAAI;AACpD;AACA;AACA,oBAAoB,qDAAI;AACxB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,kDAAQ;;AAEhC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW,wEAAG;AACd;;AAEA;AACA,WAAW,yEAAoB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA;AACA;AACA,sEAAsE,4DAAO;AAC7E;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,qDAAI;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB,EAAE,eAAe;AAChF;AACA;;AAEA;AACA;AACA,aAAa,aAAa;AAC1B,cAAc;AACd;AACA;AACA,qCAAqC,4DAAO;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,cAAc,YAAY;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,oDAAI;AACpC;AACA;AACA;AACA;AACA,yBAAyB,+DAAU;AACnC,8BAA8B,4DAAO,CAAC,4DAAO;AAC7C,kBAAkB,4DAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA,2DAA2D,qBAAqB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrYA;AAAA;AAAA;AAA2C;;AAE3C;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,uDAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;;;;;;;;;;;;ACnEA,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;ACAA,kE;;;;;;;;;;;ACAA,gE","file":"alpheios-inflection-tables.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"alpheios-data-models\"), require(\"intl-messageformat\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"alpheios-data-models\", \"intl-messageformat\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"alpheios-data-models\"), require(\"intl-messageformat\")) : factory(root[\"alpheios-data-models\"], root[\"intl-messageformat\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE_alpheios_data_models__, __WEBPACK_EXTERNAL_MODULE_intl_messageformat__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","import InflectionData from './lib/inflection-data.js'\nimport LanguageDatasetFactory from './lib/language-dataset-factory.js'\nimport LatinDataSet from './lib/lang/latin/latin-language-dataset.js'\nimport GreekDataSet from './lib/lang/greek/greek-language-dataset.js'\nimport L10n from './l10n/l10n.js'\nimport ViewSetFactory from './views/lib/view-set-factory.js'\n\nexport { InflectionData, LanguageDatasetFactory, LatinDataSet, GreekDataSet, L10n, ViewSetFactory }\n","import MessageBundle from './message-bundle.js'\nimport enUS from './locale/en-us.json'\nimport enGB from './locale/en-gb.json'\n\nconst messages = new Map([\n  ['en-US', enUS],\n  ['en-GB', enGB]\n])\n\nlet messageBundles = new Map()\n\n/**\n * Combines several message bundle for different locales.\n */\nexport default class L10n {\n  /**\n   * Creates an object. If an array of message bundle data is provided, initializes an object with this data.\n   * @param {MessageBundle[]} messageData - An array of message bundles to be stored within.\n   * @returns {L10n} Returns a reference to self for chaining.\n   */\n  constructor (messageData) {\n    this._locales = {}\n    this._localeList = []\n\n    if (messageData) {\n      this.addLocaleData(messageData)\n    }\n    return this\n  }\n\n  static get defaultLocale () {\n    return 'en-US'\n  }\n\n  static get locales () {\n    return Array.from(messages.keys())\n  }\n\n  static getMessages (locale = this.defaultLocale) {\n    if (messageBundles.has(locale)) {\n      return messageBundles.get(locale)\n    }\n    if (!messages.has(locale)) {\n      console.warn(`Messages for \"{locale}\" are not found, returning a default \"${this.defaultLocale}\" instead`)\n      locale = this.defaultLocale\n    }\n    let messageBundle = new MessageBundle(locale, messages.get(locale))\n    messageBundles.set(locale, messageBundle)\n    return messageBundle\n  }\n\n  /**\n   * Adds one or several message bundles.\n   * This function is chainable.\n   * @param {MessageBundle[]} messageData - An array of message bundles to be stored within.\n   * @return {L10n} - Returns self for chaining.\n   */\n  addLocaleData (messageData) {\n    for (let messageBundle of messageData) {\n      this._localeList.push(messageBundle.locale)\n      this._locales[messageBundle.locale] = messageBundle\n    }\n    return this\n  }\n\n  /**\n   * Returns a message bundle for a locale.\n   * @param {string} locale - A locale code for a message bundle. IETF language tag format is recommended.\n   * @returns {MessageBundle} A message bundle for a locale.\n   */\n  messages (locale) {\n    if (!this._locales[locale]) {\n      throw new Error('Locale \"' + locale + '\" is not found.')\n    }\n    return this._locales[locale]\n  }\n\n  /**\n   * Returns a list of available locale codes.\n   * @returns {string[]} Array of local codes.\n   */\n  get locales () {\n    return this._localeList\n  }\n}\n","import IntlMessageFormat from 'intl-messageformat'\n\n/**\n * Combines messages with the same locale code.\n */\nexport default class MessageBundle {\n  /**\n   * Creates a message bundle (a list of messages) for a locale.\n   * @param {string} locale - A locale code for a message group. IETF language tag format is recommended.\n   * @param {Object} messages - Messages for a locale in an object. Object keys are message IDss, strings that\n   * are used to reference a message, and key values are message texts in a string format.\n   */\n  constructor (locale, messages) {\n    if (!locale) {\n      throw new Error('Locale data is missing')\n    }\n    if (!messages) {\n      throw new Error('Messages data is missing')\n    }\n\n    this._locale = locale\n\n    for (let messageID in messages) {\n      if (messages.hasOwnProperty(messageID)) {\n        this[messageID] = new IntlMessageFormat(messages[messageID], this._locale)\n      }\n    }\n  }\n\n  /**\n   * Returns a (formatted) message for a message ID provided.\n   * @param messageID - An ID of a message.\n   * @param options - Options that can be used for message formatting.\n   * @returns {string} A formatted message. If message not found, returns a message that contains an error text.\n   */\n  get (messageID, options = undefined) {\n    if (this[messageID]) {\n      return this[messageID].format(options)\n    } else {\n      // If message with the ID provided is not in translation data, generate a warning.\n      return `Not in translation data: \"${messageID}\"`\n    }\n  }\n\n  /**\n   * Returns a locale of a current message bundle.\n   * @return {string} A locale of this message bundle.\n   */\n  get locale () {\n    return this._locale\n  }\n}\n","import ExtendedLanguageData from './extended-language-data'\n\nexport default class ExtendedGreekData extends ExtendedLanguageData {\n  constructor () {\n    super()\n    this._type = ExtendedLanguageData.types().EXTENDED_GREEK_DATA // For deserialization\n    this.primary = false\n  }\n\n  static readObject (jsonObject) {\n    let data = new ExtendedGreekData()\n    data.primary = jsonObject.primary\n    return data\n  }\n\n  merge (extendedGreekData) {\n    if (this.primary !== extendedGreekData.primary) {\n      console.log('Mismatch', this.primary, extendedGreekData.primary)\n    }\n    let merged = new ExtendedGreekData()\n    merged.primary = this.primary\n    return merged\n  }\n}\n","export default class ExtendedLanguageData {\n  constructor () {\n    this._type = undefined // This is a base class\n  }\n\n  static types () {\n    return {\n      EXTENDED_GREEK_DATA: 'ExtendedGreekData'\n    }\n  }\n\n  /* static readObject (jsonObject) {\n    if (!jsonObject._type) {\n      throw new Error('Extended language data has no type information. Unable to deserialize.')\n    } else if (jsonObject._type === ExtendedLanguageData.types().EXTENDED_GREEK_DATA) {\n      return ExtendedGreekData.readObject(jsonObject)\n    } else {\n      throw new Error(`Unsupported extended language data of type \"${jsonObject._type}\".`)\n    }\n  } */\n}\n","import { Feature } from 'alpheios-data-models'\n\nexport default class Footnote {\n  constructor (index, text, partOfSpeech) {\n    this.index = index\n    this.text = text\n    this[Feature.types.part] = partOfSpeech\n  }\n\n  static readObject (jsonObject) {\n    this.index = jsonObject.index\n    this.text = jsonObject.text\n    this[Feature.types.part] = jsonObject[Feature.types.part]\n    return new Footnote(jsonObject.index, jsonObject.text, jsonObject[Feature.types.part])\n  }\n}\n","import Morpheme from './morpheme.js'\n\nexport default class Form extends Morpheme {\n}\n","// import * as Models from 'alpheios-data-models'\n// import InflectionItemsGroup from './inflection-items-group.js'\n// import Suffix from './suffix'\n// import Footnote from './footnote'\n\n/**\n * A return value for inflection queries. Stores suffixes, forms and corresponding footnotes.\n * Inflection data is grouped first by a part of speech within a [Models.Feature.types.part] property object.\n * Inside that object, it is grouped by type: suffixes, or forms.\n */\nexport default class InflectionData {\n  constructor (homonym) {\n    this.homonym = homonym\n    this.pos = new Map()\n  }\n\n  addInflectionSet (infectionSet) {\n    this.pos.set(infectionSet.partOfSpeech, infectionSet)\n  }\n\n  get targetWord () {\n    if (this.homonym && this.homonym.targetWord) {\n      return this.homonym.targetWord\n    }\n  }\n\n  get languageID () {\n    if (this.homonym) {\n      return this.homonym.languageID\n    }\n  }\n\n  get hasInflectionSets () {\n    return this.pos.size > 0\n  }\n\n  /**\n   * Returns a list of parts of speech that have any inflection data for them.\n   * @return {string[]} Names of parts of speech, as strings, in an array.\n   */\n  get partsOfSpeech () {\n    return Array.from(this.pos.keys())\n  }\n\n  /**\n   * Returns either suffixes or forms of a given part of speech.\n   * @param {string} partOfSpeech.\n   * @param {string} inflectionType.\n   * @return {Suffix[] | Form[]}\n   */\n  getMorphemes (partOfSpeech, inflectionType) {\n    if (this.pos.has(partOfSpeech)) {\n      let inflectionSet = this.pos.get(partOfSpeech)\n      if (inflectionSet.types.has(inflectionType)) {\n        return inflectionSet.types.get(inflectionType).types\n      }\n    }\n    return []\n  }\n\n  /**\n   * Returns footnotes for either suffixes or forms of a given part of speech.\n   * @param {string} partOfSpeech.\n   * @param {string} inflectionType.\n   * @return {Map}\n   */\n  getFootnotesMap (partOfSpeech, inflectionType) {\n    if (this.pos.has(partOfSpeech)) {\n      let inflectionSet = this.pos.get(partOfSpeech)\n      if (inflectionSet.types.has(inflectionType)) {\n        return inflectionSet.types.get(inflectionType).footnotesMap\n      }\n    }\n    return new Map()\n  }\n}\n","import { Feature } from 'alpheios-data-models'\n\nexport default class InflectionList {\n  constructor (type) {\n    this.type = type\n    this.items = [] // Suffixes or forms\n    this.footnotesMap = new Map() // Footnotes (if any)\n  }\n\n  /**\n   * Adds an individual item to the `items` array.\n   * @param {Object} item\n   */\n  addItem (item) {\n    if (!item) {\n      throw new Error(`Inflection item cannot be empty`)\n    }\n    this.items.push(item)\n  }\n\n  /**\n   * Adds suffix of form items\n   * @param {Suffix[] | Form[] | Paradigm[]} items\n   */\n  addItems (items) {\n    if (!items) {\n      throw new Error(`Inflection items cannot be empty`)\n    }\n    if (!Array.isArray(items)) {\n      throw new Error(`Inflection items must be in an array`)\n    }\n    if (items.length === 0) {\n      throw new Error(`Inflection items array must not be empty`)\n    }\n    // Store only new items, avoid duplicates\n    for (const item of items) {\n      if (!this.hasItem(item)) {\n        this.items.push(item)\n      }\n    }\n  }\n\n  /**\n   * Adds a singe footnote object. If a footonte with the same index exists, it will be rewritten.\n   * @param {string} index - A footnote index\n   * @param {Footnote} footnote - A footnote object\n   */\n  addFootnote (index, footnote) {\n    this.footnotesMap.set(index, footnote)\n  }\n\n  /**\n   * Checks if item with the same ID is already stored in array of inflection data.\n   * @param {Suffix | Form | Paradigm} morpheme - An item to be checked against stored in inflection data.\n   * @return {boolean} True if this item is stored in inflection data, false otherwise.\n   */\n  hasItem (morpheme) {\n    return this.items.some(i => i.id === morpheme.id)\n  }\n\n  /**\n   * Checks if an array of items has at least one element that matches an inflection.\n   *  A match is determined as a result of item's `match` function.\n   * @param {Inflection[]} inflections - One or several inflection to match against.\n   * @return {boolean} - True if there is at least one match, false otherwise\n   */\n  hasMatches (inflections) {\n    return this.items.some(i => i.matches(inflections))\n  }\n\n  /**\n   * Returns an array of items that `matches` an inflection. A match is determined as a result of item's `match`\n   * function. Returned value is determined by item's `match` function as well.\n   * @param {Inflection[]} inflections - An inflection to match against.\n   * @return {Suffix[]|Form[]|Paradigm[]} An array of objects. Each object is returned by a `match` function of an individual item.\n   * Its format is dependent on the `match` function implementation.\n   */\n  getMatches (inflections) {\n    return this.items.filter(i => i.matches(inflections))\n  }\n\n  /**\n   * Returns a sorted (as numbers) array of footnote indexes that are used by items within an `items` array\n   * @return {number[]}\n   */\n  get footnotesInUse () {\n    let set = new Set()\n    // Scan all selected morphemes to build a unique set of footnote indexes\n    for (const item of this.items) {\n      if (item.hasOwnProperty(Feature.types.footnote)) {\n        // Footnote indexes are stored in an array\n        for (let index of item[Feature.types.footnote]) {\n          set.add(index)\n        }\n      }\n    }\n    return Array.from(set).sort((a, b) => parseInt(a) - parseInt(b))\n  }\n}\n","import InflectionList from './inflection-list.js'\n\n/**\n * Stores inflections data of different types {such as `Suffix`, `Form`, or `Paradigm`} in a `types` map. Items are grouped by type.\n * May also store inflections that corresponds to stored inflection data.\n */\nexport default class InflectionSet {\n  constructor (partOfSpeech, languageID) {\n    this.languageID = languageID\n    this.partOfSpeech = partOfSpeech\n\n    // Stores inflections (i.e. a form of a word with grammatical features as returned by a morph analyzer\n    this.inflections = []\n    this.isImplemented = false // Whether we implemented support for inflections from this set\n\n    // Stores inflections data (suffixes, forms, and paradigms) for inflections\n    this.types = new Map()\n  }\n\n  /**\n   * Checks if an `InflectionSet` has any types stored. If it does not, it means that an `InflectionSet` is empty.\n   * @return {boolean}\n   */\n  get hasTypes () {\n    return this.types.size !== 0\n  }\n\n  /**\n   * Return a list of item types this set contains.\n   * @return {Function<Morpheme>[]}\n   */\n  get inflectionTypes () {\n    return Array.from(this.types.keys())\n  }\n\n  /**\n   * Checks whether an inflection set has any items of certain type that matches an inflection.\n   * @param {Function<Suffix> | Function<Form> | Function<Paradigm>} itemType - A type of an item.\n   * @param {Inflection[]} inflections - One or several inflections to match.\n   * @return {boolean} True if there are matches, false otherwise\n   */\n  hasMatchingItems (itemType, inflections) {\n    return (this.types.has(itemType) && this.types.get(itemType).hasMatches(inflections))\n  }\n\n  /**\n   * Returns an array of items of certain type that matches an inflection.\n   * @param {Function<Suffix> | Function<Form> | Function<Paradigm>} itemType - A type of an item.\n   * @param {Inflection[]} inflections - One or several inflections to match.\n   * @return {Suffix[] | Form[] | Paradigm[] | []} Array of items of a particular type if any matches found.\n   * An empty array otherwise.\n   */\n  getMatchingItems (itemType, inflections) {\n    return this.types.has(itemType) ? this.types.get(itemType).getMatches(inflections) : []\n  }\n\n  /**\n   * Adds a single inflection item to the set\n   * @param {Suffix | Form | Paradigm} inflection\n   */\n  addInflectionItem (inflection) {\n    this.addInflectionItems([inflection])\n  }\n\n  /**\n   * Adds an array of inflection items of the same type.\n   * @param {Suffix[] | Form[] | Paradigm[]} items\n   */\n  addInflectionItems (items) {\n    // We assume all inflection items have the same type\n    let classType = items[0].constructor\n\n    if (!this.types.has(classType)) {\n      this.types.set(classType, classType.createList())\n    }\n\n    this.types.get(classType).addItems(items)\n  }\n\n  /**\n   * Adds an InflectionSet to the existing one. All inflections of a foreign inflection set\n   * will be added to the current one. Inflection data items (Suffixes, Forms, Paradigms) will\n   * be added only if they do not exist in the current InflectionSet.\n   * @param inflectionSet\n   */\n  addInflectionSet (inflectionSet) {\n    if (this.languageID === inflectionSet.languageID && this.partOfSpeech === inflectionSet.partOfSpeech) {\n      this.inflections.push(...inflectionSet.inflections)\n      for (const items of this.types.values()) {\n        this.addInflectionItems(items)\n      }\n    } else {\n      console.warn(`Cannot add inflectionSet [languageID=${inflectionSet.languageID.toString()}, POFS=${inflectionSet.partOfSpeech}]` +\n        ` to [languageID=${this.languageID.toString()}, POFS=${this.partOfSpeech}]`)\n    }\n  }\n\n  /**\n   * Adds a footnote object to inflection data of a specific class type.\n   * @param {Suffix | Form | Paradigm} classType.\n   * @param {number} index - A footnote index.\n   * @param {Footnote} footnote - A Footnote object.\n   */\n  addFootnote (classType, index, footnote) {\n    if (!this.types.has(classType)) {\n      this.types.set(classType, new InflectionList(classType))\n    }\n    this.types.get(classType).addFootnote(index, footnote)\n  }\n}\n","module.exports = \"Index,Text\\n1,\\\"All adjectives said to be of the \\\"\\\"1st Declension\\\"\\\" = α- Declension feminine unless noted otherwise.\\\"\\n2,\\\"All masculines, \\\"\\\"feminines\\\"\\\" and neuters said to be of the \\\"\\\"2nd Declension\\\"\\\" are  o- Declension adjectives unless noted otherwise\\\"\\n3,Irregular Declension\\n4,ε-stem contracts of the α- Declension\\n5,ε-stem contracts of the o- Declension\\n6,\\\"See Smyth 288. There are no truly regular feminine adjectives in this Declension, but some regular \\\"\\\"Adjectives of Two Endings\\\"\\\" and some irregulars.\\\"\\n7,\\\"Same as former, but w/ (ν)\\\"\\n8,\\\"The most common \\\"\\\"endings\\\"\\\" of the nominative case of these \\\"\\\"3rd declension\\\"\\\" adjectives are not really endings at all, but a lengthening of the vowel before the final consonant of the stem (e.g.  \\\"\\\"-ων-\\\"\\\"for the stem ending in  \\\"\\\"-ον-\\\"\\\",  \\\"\\\"-ωρ-\\\"\\\"for the \\\"\\\"ορ-\\\"\\\"stem, and \\\"\\\"-ην-\\\"\\\"for the \\\"\\\"εν-\\\"\\\"stem)\\\"\\n9,Uncontracted form of ες-stem's ε + ending. See Smyth 292 and 292 D\\n10,where -εέ- (the stem's ε and the initial ε of the ending) contract w/o the rest of the ending joining in the contraction. See also 292 D.\\n11,Compound adjectives in -ης not accented on the last syllable show recessive accent (noyt on the ending) in the contracted forms. See Smyth 292 c.\\n12,\\\"Contraction of \\\"\\\"-ο(σ)α\\\"\\\"\\\"\\n13,\\\"Consonant Declension Adjs w/ a separate form for the feminine ...--Smyth 294. In adjs w/ stems ending in ντ- , that \\\"\\\"ντ-\\\"\\\" becomes \\\"\\\"σσ-\\\"\\\" before those endings, w/ \\\"\\\"α\\\"\\\" lengthened to \\\"\\\"η\\\"\\\" in the oblique cases --See Smyth 299.\\\"\\n14,See 292 d.\\n15,See 293 d. Accusative Plurals of Comparatives borrowing the Nominative form\\n16,See Tables in Smyth 290 for uncontracted forms of 1st and 2nd Declensions (in parenthetheses)\\n17,See Smyth 297 for uncontracted stems in υ\\n18,Not used as feminine ending\"","module.exports = \"Ending,Number,Case,Declension,Gender,Type,Primary,Footnote\\nα,dual,accusative,1st,feminine,regular,primary,\\nά,dual,accusative,1st,feminine,regular,,\\nᾶ,dual,accusative,1st,feminine,regular,,4\\nέα,dual,accusative,1st,feminine,irregular,,16\\nαιν,dual,dative,1st,feminine,regular,primary,\\nαῖv,dual,dative,1st,feminine,regular,,\\nέαιν,dual,dative,1st,feminine,irregular,,16\\nαιν,dual,genitive,1st,feminine,regular,primary,\\nαῖv,dual,genitive,1st,feminine,regular,,\\nέαιν,dual,genitive,1st,feminine,irregular,,16\\nα,dual,nominative,1st,feminine,regular,primary,\\nά,dual,nominative,1st,feminine,regular,,\\nᾶ,dual,nominative,1st,feminine,regular,,4\\nέα,dual,nominative,1st,feminine,irregular,,16\\nα,dual,vocative,1st,feminine,regular,primary,\\nά,dual,vocative,1st,feminine,regular,,\\nᾶ,dual,vocative,1st,feminine,regular,,4\\nέα,dual,vocative,1st,feminine,irregular,,16\\nας,plural,accusative,1st,feminine,regular,primary,\\nάς,plural,accusative,1st,feminine,regular,,\\nᾶς,plural,accusative,1st,feminine,regular,,4\\nέας,plural,accusative,1st,feminine,irregular,,16\\nαις,plural,dative,1st,feminine,regular,primary,\\nαῖς,plural,dative,1st,feminine,regular,,4\\nέαις,plural,dative,1st,feminine,irregular,,16\\nων,plural,genitive,1st,feminine,regular,,\\nῶν,plural,genitive,1st,feminine,regular,primary,\\nέων,plural,genitive,1st,feminine,irregular,,16\\nάων,plural,genitive,1st,feminine,irregular,,\\nαι,plural,nominative,1st,feminine,regular,primary,\\nαί,plural,nominative,1st,feminine,regular,,\\nαῖ,plural,nominative,1st,feminine,regular,,4\\nεαι,plural,nominative,1st,feminine,irregular,,16\\nέαι,plural,nominative,1st,feminine,irregular,,16\\nαι,plural,vocative,1st,feminine,regular,primary,\\nαί,plural,vocative,1st,feminine,regular,,\\nαῖ,plural,vocative,1st,feminine,regular,,4\\nεαι,plural,vocative,1st,feminine,irregular,,16\\nέαι,plural,vocative,1st,feminine,irregular,,16\\nαν,singular,accusative,1st,feminine,regular,primary,\\nην,singular,accusative,1st,feminine,regular,,\\nάν,singular,accusative,1st,feminine,regular,,\\nήν,singular,accusative,1st,feminine,regular,,\\nᾶν,singular,accusative,1st,feminine,regular,,4\\nῆν,singular,accusative,1st,feminine,regular,,4\\nέαν,singular,accusative,1st,feminine,irregular,,16\\nᾳ,singular,dative,1st,feminine,regular,primary,\\nῃ,singular,dative,1st,feminine,regular,,\\nᾷ,singular,dative,1st,feminine,regular,,\\nῇ,singular,dative,1st,feminine,regular,,\\nέᾳ,singular,dative,1st,feminine,irregular,,16\\nας,singular,genitive,1st,feminine,regular,primary,\\nης,singular,genitive,1st,feminine,regular,,\\nᾶς,singular,genitive,1st,feminine,regular,,\\nῆς,singular,genitive,1st,feminine,regular,,\\nέας,singular,genitive,1st,feminine,irregular,,16\\nα,singular,nominative,1st,feminine,regular,primary,\\nη,singular,nominative,1st,feminine,regular,,\\nά,singular,nominative,1st,feminine,regular,,\\nή,singular,nominative,1st,feminine,regular,,\\nῆ,singular,nominative,1st,feminine,regular,,4\\nᾶ,singular,nominative,1st,feminine,regular,,4\\nέα,singular,nominative,1st,feminine,irregular,,16\\nα,singular,vocative,1st,feminine,regular,primary,\\nη,singular,vocative,1st,feminine,regular,,\\nά,singular,vocative,1st,feminine,regular,,\\nή,singular,vocative,1st,feminine,regular,,\\nᾶ,singular,vocative,1st,feminine,regular,,4\\nῆ,singular,vocative,1st,feminine,regular,,4\\nέα,singular,vocative,1st,feminine,irregular,,16\\nω,dual,accusative,2nd,masculine feminine,regular,primary,\\nώ,dual,accusative,2nd,masculine feminine,regular,,\\nέω,dual,accusative,2nd,masculine feminine,irregular,,16\\nόω,dual,accusative,2nd,masculine feminine,irregular,,16\\nοιν,dual,dative,2nd,masculine feminine,regular,primary,\\nοῖν,dual,dative,2nd,masculine feminine,regular,,\\nῳν,dual,dative,2nd,masculine feminine,regular,,\\nέοιν,dual,dative,2nd,masculine feminine,irregular,,16\\nόοιν,dual,dative,2nd,masculine feminine,irregular,,16\\nοιν,dual,genitive,2nd,masculine feminine,regular,primary,\\nοῖν,dual,genitive,2nd,masculine feminine,regular,,\\nῳν,dual,genitive,2nd,masculine feminine,regular,,\\nέοιν,dual,genitive,2nd,masculine feminine,irregular,,16\\nόοιν,dual,genitive,2nd,masculine feminine,irregular,,16\\nω,dual,nominative,2nd,masculine feminine,regular,primary,\\nώ,dual,nominative,2nd,masculine feminine,regular,,\\nέω,dual,nominative,2nd,masculine feminine,irregular,,16\\nόω,dual,nominative,2nd,masculine feminine,irregular,,16\\nω,dual,vocative,2nd,masculine feminine,regular,primary,\\nώ,dual,vocative,2nd,masculine feminine,regular,,\\nέω,dual,vocative,2nd,masculine feminine,irregular,,16\\nόω,dual,vocative,2nd,masculine feminine,irregular,,16\\nω,dual,accusative,2nd,neuter,regular,primary,\\nώ,dual,accusative,2nd,neuter,regular,,\\nέω,dual,accusative,2nd,neuter,irregular,,16\\nοιν,dual,dative,2nd,neuter,regular,primary,\\nοῖν,dual,dative,2nd,neuter,regular,,\\nῳν,dual,dative,2nd,neuter,regular,,\\nέοιν,dual,dative,2nd,neuter,irregular,,16\\nόοιν,dual,dative,2nd,neuter,irregular,,16\\nοιν,dual,genitive,2nd,neuter,regular,primary,\\nοῖν,dual,genitive,2nd,neuter,regular,,\\nῳν,dual,genitive,2nd,neuter,regular,,\\nέοιν,dual,genitive,2nd,neuter,irregular,,16\\nόοιν,dual,genitive,2nd,neuter,irregular,,16\\nω,dual,nominative,2nd,neuter,regular,primary,\\nώ,dual,nominative,2nd,neuter,regular,,\\nέω,dual,nominative,2nd,neuter,irregular,,16\\nόω,dual,nominative,2nd,neuter,irregular,,16\\nω,dual,vocative,2nd,neuter,regular,primary,\\nώ,dual,vocative,2nd,neuter,regular,,\\nέω,dual,vocative,2nd,neuter,irregular,,16\\nόω,dual,vocative,2nd,neuter,irregular,,16\\nους,plural,accusative,2nd,masculine feminine,regular,primary,\\nούς,plural,accusative,2nd,masculine feminine,regular,,\\nοῦς,plural,accusative,2nd,masculine feminine,regular,,5\\nέους,plural,accusative,2nd,masculine feminine,irregular,,16\\nόους,plural,accusative,2nd,masculine feminine,irregular,,16\\nοις,plural,dative,2nd,masculine feminine,regular,primary,\\nοῖς,plural,dative,2nd,masculine feminine,regular,,\\nῳς,plural,dative,2nd,masculine feminine,regular,,\\nέοις,plural,dative,2nd,masculine feminine,irregular,,16\\nόοις,plural,dative,2nd,masculine feminine,irregular,,16\\nοῖσι,plural,dative,2nd,masculine feminine,irregular,,\\nοῖσιν,plural,dative,2nd,masculine feminine,irregular,,\\nῃσιν,plural,dative,2nd,masculine feminine,irregular,,\\nων,plural,genitive,2nd,masculine feminine,regular,primary,\\nῶν,plural,genitive,2nd,masculine feminine,regular,,\\nέων,plural,genitive,2nd,masculine feminine,irregular,,16\\nόων,plural,genitive,2nd,masculine feminine,irregular,,16\\nοι,plural,nominative,2nd,masculine feminine,regular,primary,\\nοί,plural,nominative,2nd,masculine feminine,regular,,\\nοῖ,plural,nominative,2nd,masculine feminine,regular,,5\\nῳ,plural,nominative,2nd,masculine feminine,regular,,\\nεοι,plural,nominative,2nd,masculine feminine,irregular,,16\\nόοι,plural,nominative,2nd,masculine feminine,irregular,,16\\nοι,plural,vocative,2nd,masculine feminine,regular,primary,\\nοί,plural,vocative,2nd,masculine feminine,regular,,\\nοῖ,plural,vocative,2nd,masculine feminine,regular,,5\\nῳ,plural,vocative,2nd,masculine feminine,regular,,\\nεοι,plural,vocative,2nd,masculine feminine,irregular,,16\\nόοι,plural,vocative,2nd,masculine feminine,irregular,,16\\nα,plural,accusative,2nd,neuter,regular,primary,\\nά,plural,accusative,2nd,neuter,regular,,\\nᾶ,plural,accusative,2nd,neuter,regular,,5\\nεα,plural,accusative,2nd,neuter,irregular,,16\\nόα,plural,accusative,2nd,neuter,irregular,,16\\nοις,plural,dative,2nd,neuter,regular,primary,\\nοῖς,plural,dative,2nd,neuter,regular,,\\nῳς,plural,dative,2nd,neuter,regular,,\\nέοις,plural,dative,2nd,neuter,irregular,,16\\nόοις,plural,dative,2nd,neuter,irregular,,16\\nοῖσι,plural,dative,2nd,neuter,irregular,,\\nοῖσιν,plural,dative,2nd,neuter,irregular,,\\nων,plural,genitive,2nd,neuter,regular,primary,\\nῶν,plural,genitive,2nd,neuter,regular,,\\nέων,plural,genitive,2nd,neuter,irregular,,16\\nόων,plural,genitive,2nd,neuter,irregular,,16\\nα,plural,nominative,2nd,neuter,regular,primary,\\nά,plural,nominative,2nd,neuter,regular,,\\nᾶ,plural,nominative,2nd,neuter,regular,,5\\nεα,plural,nominative,2nd,neuter,irregular,,16\\nόα,plural,nominative,2nd,neuter,irregular,,16\\nα,plural,vocative,2nd,neuter,regular,primary,\\nά,plural,vocative,2nd,neuter,regular,,\\nᾶ,plural,vocative,2nd,neuter,regular,,5\\nεα,plural,vocative,2nd,neuter,irregular,,16\\nόα,plural,vocative,2nd,neuter,irregular,,16\\nον,singular,accusative,2nd,masculine feminine,regular,primary,\\nόν,singular,accusative,2nd,masculine feminine,regular,,\\nοῦν,singular,accusative,2nd,masculine feminine,regular,,5\\nων,singular,accusative,2nd,masculine feminine,regular,,\\nεον,singular,accusative,2nd,masculine feminine,irregular,,16\\nόον,singular,accusative,2nd,masculine feminine,irregular,,16\\nῳ,singular,dative,2nd,masculine feminine,regular,primary,\\nῷ,singular,dative,2nd,masculine feminine,regular,,\\nέῳ,singular,dative,2nd,masculine feminine,irregular,,16\\nόῳ,singular,dative,2nd,masculine feminine,irregular,,16\\nου,singular,genitive,2nd,masculine feminine,regular,primary,\\nοῦ,singular,genitive,2nd,masculine feminine,regular,,\\nω,singular,genitive,2nd,masculine feminine,regular,,\\nέου,singular,genitive,2nd,masculine feminine,irregular,,16\\nόου,singular,genitive,2nd,masculine feminine,irregular,,16\\nοῖο,singular,genitive,2nd,masculine feminine,irregular,,\\nος,singular,nominative,2nd,masculine feminine,regular,primary,2\\nός,singular,nominative,2nd,masculine feminine,regular,,\\nοῦς,singular,nominative,2nd,masculine feminine,regular,,5\\nως,singular,nominative,2nd,masculine feminine,regular,,\\nεος,singular,nominative,2nd,masculine feminine,irregular,,16\\nόος,singular,nominative,2nd,masculine feminine,irregular,,16\\nε,singular,vocative,2nd,masculine feminine,regular,primary,\\nέ,singular,vocative,2nd,masculine feminine,regular,,\\nοῦς,singular,vocative,2nd,masculine feminine,regular,,5\\nως,singular,vocative,2nd,masculine feminine,regular,,\\nεος,singular,vocative,2nd,masculine feminine,irregular,,16\\nόος,singular,vocative,2nd,masculine feminine,irregular,,16\\nον,singular,accusative,2nd,neuter,regular,primary,\\nόν,singular,accusative,2nd,neuter,regular,,\\nων,singular,accusative,2nd,neuter,regular,,\\nοῦν,singular,accusative,2nd,neuter,regular,,5\\nεον,singular,accusative,2nd,neuter,irregular,,16\\nόον,singular,accusative,2nd,neuter,irregular,,16\\nῳ,singular,dative,2nd,neuter,regular,primary,\\nῷ,singular,dative,2nd,neuter,regular,,\\nέῳ,singular,dative,2nd,neuter,irregular,,16\\nόῳ,singular,dative,2nd,neuter,irregular,,16\\nου,singular,genitive,2nd,neuter,regular,primary,\\nοῦ,singular,genitive,2nd,neuter,regular,,\\nω,singular,genitive,2nd,neuter,regular,,\\nέου,singular,genitive,2nd,neuter,irregular,,16\\nόου,singular,genitive,2nd,neuter,irregular,,16\\nοῖο,singular,genitive,2nd,neuter,irregular,,\\nον,singular,nominative,2nd,neuter,regular,primary,2\\nόν,singular,nominative,2nd,neuter,regular,,\\nων,singular,nominative,2nd,neuter,regular,,\\nοῦν,singular,nominative,2nd,neuter,regular,,5\\nεον,singular,nominative,2nd,neuter,irregular,,16\\nόον,singular,nominative,2nd,neuter,irregular,,16\\nον,singular,vocative,2nd,neuter,regular,primary,\\nόν,singular,vocative,2nd,neuter,regular,,\\nων,singular,vocative,2nd,neuter,regular,,\\nοῦν,singular,vocative,2nd,neuter,regular,,5\\nεον,singular,vocative,2nd,neuter,irregular,,16\\nόον,singular,vocative,2nd,neuter,irregular,,16\\nα,dual,accusative,3rd,feminine,regular,primary,\\nαινα,dual,accusative,3rd,feminine,regular,,\\nέινα,dual,accusative,3rd,feminine,regular,,\\nέσσα,dual,accusative,3rd,feminine,regular,,\\nαιν,dual,dative,3rd,feminine,regular,primary,\\nαιναιν,dual,dative,3rd,feminine,regular,,\\nέιναιν,dual,dative,3rd,feminine,regular,,\\nέσσαιν,dual,dative,3rd,feminine,regular,,\\nαιν,dual,genitive,3rd,feminine,regular,primary,\\nαιναιν,dual,genitive,3rd,feminine,regular,,\\nέιναιν,dual,genitive,3rd,feminine,regular,,\\nέσσαιν,dual,genitive,3rd,feminine,regular,,\\nα,dual,nominative,3rd,feminine,regular,primary,\\nαινα,dual,nominative,3rd,feminine,regular,,\\nέινα,dual,nominative,3rd,feminine,regular,,\\nέσσα,dual,nominative,3rd,feminine,regular,,\\nα,dual,vocative,3rd,feminine,regular,primary,\\nαινα,dual,vocative,3rd,feminine,regular,,\\nέινα,dual,vocative,3rd,feminine,regular,,\\nέσσα,dual,vocative,3rd,feminine,regular,,\\nε,dual,accusative,3rd,masculine feminine,regular,primary,\\nεῖ,dual,accusative,3rd,masculine feminine,regular,,\\nέε,dual,accusative,3rd,masculine feminine,irregular,,9\\nανε,dual,accusative,3rd,masculine feminine,regular,,18\\nενε,dual,accusative,3rd,masculine feminine,regular,,18\\nεντε,dual,accusative,3rd,masculine feminine,regular,,18\\nοιν,dual,dative,3rd,masculine feminine,regular,primary,\\nοῖν,dual,dative,3rd,masculine feminine,regular,,\\nέοιν,dual,dative,3rd,masculine feminine,irregular,,9\\nάνοιν,dual,dative,3rd,masculine feminine,regular,,18\\nένοιν,dual,dative,3rd,masculine feminine,regular,,18\\nέντοιν,dual,dative,3rd,masculine feminine,regular,,18\\nοιν,dual,genitive,3rd,masculine feminine,regular,primary,\\nοῖν,dual,genitive,3rd,masculine feminine,regular,,\\nέοιν,dual,genitive,3rd,masculine feminine,irregular,,9\\nάνοιν,dual,genitive,3rd,masculine feminine,regular,,18\\nένοιν,dual,genitive,3rd,masculine feminine,regular,,18\\nέντοιν,dual,genitive,3rd,masculine feminine,regular,,18\\nε,dual,nominative,3rd,masculine feminine,regular,primary,\\nεῖ,dual,nominative,3rd,masculine feminine,regular,,\\nέε,dual,nominative,3rd,masculine feminine,irregular,,9\\nανε,dual,nominative,3rd,masculine feminine,regular,,18\\nενε,dual,nominative,3rd,masculine feminine,regular,,18\\nεντε,dual,nominative,3rd,masculine feminine,regular,,18\\nε,dual,vocative,3rd,masculine feminine,regular,primary,\\nεῖ,dual,vocative,3rd,masculine feminine,regular,,\\nέε,dual,vocative,3rd,masculine feminine,irregular,,9\\nε,dual,accusative,3rd,neuter,regular,primary,\\nεῖ,dual,accusative,3rd,neuter,regular,,\\nέε,dual,accusative,3rd,neuter,regular,,\\nανε,dual,accusative,3rd,neuter,regular,,\\nενε,dual,accusative,3rd,neuter,regular,,\\nεντε,dual,accusative,3rd,neuter,regular,,\\nοιν,dual,dative,3rd,neuter,regular,primary,\\nοῖν,dual,dative,3rd,neuter,regular,,\\nέοιν,dual,dative,3rd,neuter,regular,,\\nάνοιν,dual,dative,3rd,neuter,regular,,\\nένοιν,dual,dative,3rd,neuter,regular,,\\nέντοιν,dual,dative,3rd,neuter,regular,,\\nοιν,dual,genitive,3rd,neuter,regular,primary,\\nοῖν,dual,genitive,3rd,neuter,regular,,\\nέοιν,dual,genitive,3rd,neuter,regular,,\\nάνοιν,dual,genitive,3rd,neuter,regular,,\\nένοιν,dual,genitive,3rd,neuter,regular,,\\nέντοιν,dual,genitive,3rd,neuter,regular,,\\nε,dual,nominative,3rd,neuter,regular,primary,\\nεῖ,dual,nominative,3rd,neuter,regular,,\\nέε,dual,nominative,3rd,neuter,regular,,\\nανε,dual,nominative,3rd,neuter,regular,,\\nενε,dual,nominative,3rd,neuter,regular,,\\nεντε,dual,nominative,3rd,neuter,regular,,\\nανε,dual,vocative,3rd,neuter,regular,,18\\nενε,dual,vocative,3rd,neuter,regular,,18\\nεντε,dual,vocative,3rd,neuter,regular,,18\\nε,dual,vocative,3rd,neuter,regular,primary,\\nεῖ,dual,vocative,3rd,neuter,regular,,\\nέε,dual,vocative,3rd,neuter,regular,,\\nανε,dual,vocative,3rd,neuter,regular,,\\nενε,dual,vocative,3rd,neuter,regular,,\\nεντε,dual,vocative,3rd,neuter,regular,,\\nας,plural,accusative,3rd,feminine,regular,primary,\\nείας,plural,accusative,3rd,feminine,regular,,\\nέα,plural,accusative,3rd,feminine,irregular,,9\\nαίνας,plural,accusative,3rd,feminine,regular,,\\nείνας,plural,accusative,3rd,feminine,regular,,\\nέσσας,plural,accusative,3rd,feminine,regular,,\\nαις,plural,dative,3rd,feminine,regular,primary,\\nείαις,plural,dative,3rd,feminine,regular,,\\nαίναις,plural,dative,3rd,feminine,regular,,\\nείναις,plural,dative,3rd,feminine,regular,,\\nέσσαις,plural,dative,3rd,feminine,regular,,\\nῶν,plural,genitive,3rd,feminine,regular,primary,\\nων,plural,genitive,3rd,feminine,regular,,\\nειῶν,plural,genitive,3rd,feminine,regular,,\\nαινῶν,plural,genitive,3rd,feminine,regular,,\\nεινῶν,plural,genitive,3rd,feminine,regular,,\\nεσσῶν,plural,genitive,3rd,feminine,regular,,\\nάων,plural,genitive,3rd,feminine,irregular,,\\nαι,plural,nominative,3rd,feminine,regular,primary,\\nεῖαι,plural,nominative,3rd,feminine,regular,,\\nέα,plural,nominative,3rd,feminine,irregular,,9\\nαιναι,plural,nominative,3rd,feminine,regular,,\\nειναι,plural,nominative,3rd,feminine,regular,,\\nεσσαι,plural,nominative,3rd,feminine,regular,,\\nαι,plural,vocative,3rd,feminine,regular,primary,\\nεῖαι,plural,vocative,3rd,feminine,regular,,\\nέα,plural,vocative,3rd,feminine,irregular,,9\\nαιναι,plural,vocative,3rd,feminine,regular,,\\nειναι,plural,vocative,3rd,feminine,regular,,\\nεσσαι,plural,vocative,3rd,feminine,regular,,\\nες,plural,accusative,3rd,masculine feminine,irregular,,15\\nας,plural,accusative,3rd,masculine feminine,regular,primary,\\nεῖς,plural,accusative,3rd,masculine feminine,regular,,\\nους,plural,accusative,3rd,masculine feminine,regular,,\\nεας,plural,accusative,3rd,masculine feminine,irregular,,\\nῖας,plural,accusative,3rd,masculine feminine,irregular,,10\\nανας,plural,accusative,3rd,masculine feminine,regular,,18\\nενας,plural,accusative,3rd,masculine feminine,regular,,18\\nεντας,plural,accusative,3rd,masculine feminine,regular,,18\\nσι,plural,dative,3rd,masculine feminine,regular,primary,\\nσιν,plural,dative,3rd,masculine feminine,regular,primary,7\\nέσι,plural,dative,3rd,masculine feminine,irregular,,\\nέσιν,plural,dative,3rd,masculine feminine,regular,,7\\nέσσι,plural,dative,3rd,masculine feminine,irregular,,9 14\\nέσσιν,plural,dative,3rd,masculine feminine,irregular,,7 9\\nασι,plural,dative,3rd,masculine feminine,regular,,18\\nασιν,plural,dative,3rd,masculine feminine,regular,,7 18\\nεσι,plural,dative,3rd,masculine feminine,regular,,18\\nεσιν,plural,dative,3rd,masculine feminine,regular,,7 18\\nων,plural,genitive,3rd,masculine feminine,regular,primary,\\nῶν,plural,genitive,3rd,masculine feminine,regular,,\\nέων,plural,genitive,3rd,masculine feminine,regular,,\\nάνων,plural,genitive,3rd,masculine feminine,regular,,18\\nένων,plural,genitive,3rd,masculine feminine,regular,,18\\nέντων,plural,genitive,3rd,masculine feminine,regular,,18\\nάων,plural,genitive,3rd,masculine feminine,irregular,,\\nες,plural,nominative,3rd,masculine feminine,regular,primary,12\\nεῖς,plural,nominative,3rd,masculine feminine,regular,,\\nους,plural,nominative,3rd,masculine feminine,regular,,\\nέες,plural,nominative,3rd,masculine feminine,irregular,,9 14 17\\nανες,plural,nominative,3rd,masculine feminine,regular,,18\\nενες,plural,nominative,3rd,masculine feminine,regular,,18\\nεντες,plural,nominative,3rd,masculine feminine,regular,,18\\nες,plural,vocative,3rd,masculine feminine,regular,primary,\\nεῖς,plural,vocative,3rd,masculine feminine,regular,,\\nέες,plural,vocative,3rd,masculine feminine,irregular,,9\\nους,plural,vocative,3rd,masculine feminine,regular,,\\nανες,plural,vocative,3rd,masculine feminine,regular,,18\\nενες,plural,vocative,3rd,masculine feminine,regular,,18\\nεντες,plural,vocative,3rd,masculine feminine,regular,,18\\nα,plural,accusative,3rd,neuter,regular,primary,\\nῆ,plural,accusative,3rd,neuter,regular,,\\nέα,plural,accusative,3rd,neuter,regular,,\\nω,plural,accusative,3rd,neuter,regular,,12\\nανα,plural,accusative,3rd,neuter,regular,,\\nενα,plural,accusative,3rd,neuter,regular,,\\nεντα,plural,accusative,3rd,neuter,regular,,\\nσι,plural,dative,3rd,neuter,regular,primary,\\nσιν,plural,dative,3rd,neuter,regular,,7\\nέσι,plural,dative,3rd,neuter,regular,,\\nέσιν,plural,dative,3rd,neuter,regular,,7\\nέσσι,plural,dative,3rd,neuter,irregular,,9\\nέσσιν,plural,dative,3rd,neuter,irregular,,7 9\\nασι,plural,dative,3rd,neuter,regular,,\\nασιν,plural,dative,3rd,neuter,regular,,7\\nεσι,plural,dative,3rd,neuter,regular,,\\nεσιν,plural,dative,3rd,neuter,regular,,7\\nων,plural,genitive,3rd,neuter,regular,primary,\\nῶν,plural,genitive,3rd,neuter,regular,,\\nέων,plural,genitive,3rd,neuter,regular,,\\nάνων,plural,genitive,3rd,neuter,regular,,\\nένων,plural,genitive,3rd,neuter,regular,,\\nέντων,plural,genitive,3rd,neuter,regular,,\\nάων,plural,genitive,3rd,neuter,irregular,,\\nα,plural,nominative,3rd,neuter,regular,primary,\\nῆ,plural,nominative,3rd,neuter,regular,,\\nέα,plural,nominative,3rd,neuter,irregular,,\\nω,plural,nominative,3rd,neuter,regular,,12\\nανα,plural,nominative,3rd,neuter,regular,,\\nενα,plural,nominative,3rd,neuter,regular,,\\nεντα,plural,nominative,3rd,neuter,regular,,\\nα,plural,vocative,3rd,neuter,regular,primary,\\nῆ,plural,vocative,3rd,neuter,regular,,\\nέα,plural,vocative,3rd,neuter,regular,,\\nω,plural,vocative,3rd,neuter,regular,,12\\nανα,plural,vocative,3rd,neuter,regular,,\\nενα,plural,vocative,3rd,neuter,regular,,\\nεντα,plural,vocative,3rd,neuter,regular,,\\nαν,singular,accusative,3rd,feminine,regular,primary,\\nεῖαν,singular,accusative,3rd,feminine,regular,,\\nαιναν,singular,accusative,3rd,feminine,regular,,\\nειναν,singular,accusative,3rd,feminine,regular,,\\nεσσαν,singular,accusative,3rd,feminine,regular,,\\nᾳ,singular,dative,3rd,feminine,regular,primary,\\nῃ,singular,dative,3rd,feminine,regular,,\\nείᾳ,singular,dative,3rd,feminine,regular,,\\nαινῃ,singular,dative,3rd,feminine,regular,,\\nεινῃ,singular,dative,3rd,feminine,regular,,\\nεσσῃ,singular,dative,3rd,feminine,regular,,\\nας,singular,genitive,3rd,feminine,regular,primary,\\nης,singular,genitive,3rd,feminine,regular,,\\nείας,singular,genitive,3rd,feminine,regular,,\\nαινης,singular,genitive,3rd,feminine,regular,,\\nεινης,singular,genitive,3rd,feminine,regular,,\\nεσσης,singular,genitive,3rd,feminine,regular,,\\nα,singular,nominative,3rd,feminine,regular,primary,\\nεῖα,singular,nominative,3rd,feminine,regular,,\\nαινα,singular,nominative,3rd,feminine,regular,,\\nεινα,singular,nominative,3rd,feminine,regular,,\\nεσσα,singular,nominative,3rd,feminine,regular,,\\nα,singular,vocative,3rd,feminine,regular,primary,\\nεῖα,singular,vocative,3rd,feminine,regular,,\\nαινα,singular,vocative,3rd,feminine,regular,,\\nεινα,singular,vocative,3rd,feminine,regular,,\\nεσσα,singular,vocative,3rd,feminine,regular,,\\nύν,singular,accusative,3rd,masculine feminine,regular,primary,\\nα,singular,accusative,3rd,masculine feminine,regular,primary,\\nῆ,singular,accusative,3rd,masculine feminine,regular,,\\nν,singular,accusative,3rd,masculine feminine,regular,,\\nω,singular,accusative,3rd,masculine feminine,regular,,12\\nέα,singular,accusative,3rd,masculine feminine,irregular,,9\\nᾶ,singular,accusative,3rd,masculine feminine,regular,,14\\nανα,singular,accusative,3rd,masculine feminine,regular,,18\\nενα,singular,accusative,3rd,masculine feminine,regular,,18\\nεντα,singular,accusative,3rd,masculine feminine,regular,,18\\nι,singular,dative,3rd,masculine feminine,regular,primary,\\nεῖ,singular,dative,3rd,masculine feminine,regular,primary,\\nέι,singular,dative,3rd,masculine feminine,irregular,,9\\nεϊ,singular,dative,3rd,masculine feminine,irregular,,9\\nέϊ,singular,dative,3rd,masculine feminine,irregular,,17 18\\nει,singular,dative,3rd,masculine feminine,irregular,,9\\nί,singular,dative,3rd,masculine feminine,regular,,\\nανι,singular,dative,3rd,masculine feminine,regular,,\\nενι,singular,dative,3rd,masculine feminine,regular,,\\nεντι,singular,dative,3rd,masculine feminine,regular,,\\nος,singular,genitive,3rd,masculine feminine,regular,primary,\\nός,singular,genitive,3rd,masculine feminine,regular,,\\nοῦς,singular,genitive,3rd,masculine feminine,regular,,\\nέος,singular,genitive,3rd,masculine feminine,irregular,,9\\nῖος,singular,genitive,3rd,masculine feminine,irregular,,9\\nανος,singular,genitive,3rd,masculine feminine,regular,,18\\nενος,singular,genitive,3rd,masculine feminine,regular,,18\\nεντος,singular,genitive,3rd,masculine feminine,regular,,18\\nύς,singular,nominative,3rd,masculine feminine,regular,primary,\\n_,singular,nominative,3rd,masculine feminine,regular,primary,8\\nς,singular,nominative,3rd,masculine feminine,regular,,8\\nής,singular,nominative,3rd,masculine feminine,regular,,\\nης,singular,nominative,3rd,masculine feminine,regular,,11\\nας,singular,nominative,3rd,masculine feminine,regular,,18\\nην,singular,nominative,3rd,masculine feminine,regular,,18\\nεις,singular,nominative,3rd,masculine feminine,regular,,18\\nν,singular,vocative,3rd,masculine feminine,regular,primary,\\nύ,singular,vocative,3rd,masculine feminine,regular,primary,\\n_,singular,vocative,3rd,masculine feminine,regular,primary,8\\nές,singular,vocative,3rd,masculine feminine,regular,,\\nί,singular,vocative,3rd,masculine feminine,regular,,\\nαν,singular,vocative,3rd,masculine feminine,regular,,18\\nεν,singular,vocative,3rd,masculine feminine,regular,,18\\n_,singular,accusative,3rd,neuter,regular,primary,\\nύ,singular,accusative,3rd,neuter,regular,primary,\\nές,singular,accusative,3rd,neuter,regular,,\\nαν,singular,accusative,3rd,neuter,regular,,\\nεν,singular,accusative,3rd,neuter,regular,,\\nεῖ,singular,dative,3rd,neuter,regular,,\\nι,singular,dative,3rd,neuter,regular,primary,\\nί,singular,dative,3rd,neuter,regular,,\\nεϊ,singular,dative,3rd,neuter,irregular,,\\nέϊ,singular,dative,3rd,neuter,irregular,,17\\nανι,singular,dative,3rd,neuter,regular,,\\nενι,singular,dative,3rd,neuter,regular,,\\nεντι,singular,dative,3rd,neuter,regular,,\\nος,singular,genitive,3rd,neuter,regular,primary,\\nός,singular,genitive,3rd,neuter,regular,,\\nέος,singular,genitive,3rd,neuter,regular,,\\nοῦς,singular,genitive,3rd,neuter,regular,,\\nανος,singular,genitive,3rd,neuter,regular,,\\nενος,singular,genitive,3rd,neuter,regular,,\\nεντος,singular,genitive,3rd,neuter,regular,,\\n_,singular,nominative,3rd,neuter,regular,primary,8\\nύ,singular,nominative,3rd,neuter,regular,primary,\\nές,singular,nominative,3rd,neuter,regular,,\\nες,singular,nominative,3rd,neuter,regular,,11\\nαν,singular,nominative,3rd,neuter,regular,,\\nεν,singular,nominative,3rd,neuter,regular,,\\n_,singular,vocative,3rd,neuter,regular,primary,\\nύ,singular,vocative,3rd,neuter,regular,primary,\\nές,singular,vocative,3rd,neuter,regular,,\\nαν,singular,vocative,3rd,neuter,regular,,\\nεν,singular,vocative,3rd,neuter,regular,,\"","module.exports = \"Form,Number,Case,Gender,Type,Primary\\nτά,dual,accusative,feminine,regular,primary\\nτώ,dual,accusative,feminine,regular,primary\\nταῖν,dual,dative,feminine,regular,primary\\nτοῖν,dual,dative,feminine,regular,primary\\nταῖν,dual,genitive,feminine,regular,primary\\nτοῖν,dual,genitive,feminine,regular,primary\\nτά,dual,nominative,feminine,regular,primary\\nτώ,dual,nominative,feminine,regular,primary\\nτώ,dual,accusative,masculine,regular,primary\\nτοῖν,dual,dative,masculine,regular,primary\\nτοῖν,dual,genitive,masculine,regular,primary\\nτώ,dual,nominative,masculine,regular,primary\\nτώ,dual,accusative,neuter,regular,primary\\nτοῖν,dual,dative,neuter,regular,primary\\nτοῖν,dual,genitive,neuter,regular,primary\\nτώ,dual,nominative,neuter,regular,primary\\nτάς,plural,accusative,feminine,regular,primary\\nταῖς,plural,dative,feminine,regular,primary\\nτῶν,plural,genitive,feminine,regular,primary\\nαἱ,plural,nominative,feminine,regular,primary\\nτούς,plural,accusative,masculine,regular,primary\\nτοῖς,plural,dative,masculine,regular,primary\\nτῶν,plural,genitive,masculine,regular,primary\\nοἱ,plural,nominative,masculine,regular,primary\\nτά,plural,accusative,neuter,regular,primary\\nτοῖς,plural,dative,neuter,regular,primary\\nτῶν,plural,genitive,neuter,regular,primary\\nτά,plural,nominative,neuter,regular,primary\\nτήν,singular,accusative,feminine,regular,primary\\nτῇ,singular,dative,feminine,regular,primary\\nτῆς,singular,genitive,feminine,regular,primary\\nἡ,singular,nominative,feminine,regular,primary\\nτόν,singular,accusative,masculine,regular,primary\\nτῷ,singular,dative,masculine,regular,primary\\nτοῦ,singular,genitive,masculine,regular,primary\\nὁ,singular,nominative,masculine,regular,primary\\nτό,singular,accusative,neuter,regular,primary\\nτῷ,singular,dative,neuter,regular,primary\\nτοῦ,singular,genitive,neuter,regular,primary\\nτό,singular,nominative,neuter,regular,primary\"","module.exports = \"Index,Text\\n1,See Smyth 217 for Rules of variance within regular endings\\n2,See Smyth 227 for Table of α- and ε- stem feminine 1st declension contracts\\n3,See Smyth 227 for Table of α- and ε- stem masculine 1st declension contracts\\n4,\\\"Previous, with (ν)\\\"\\n5,See Smyth 235 for Table of o- and ε- stem masculine  2nd declension contracts\\n6,See Smyth 235 for Table of o- and ε- stem neuter 2nd declension contracts\\n7,(Attic) contracts of o-stems preceded by a long vowel\\n15,\\\"This is not actually an “ending,” but the last letter of the “pure stem”. See Smyth 248.\\\"\\n16,\\\"See Smyth 264  & Smyth 265 for Table of Sigma (ες,ας,ος) stem contracts\\\"\\n17,See Smyth 268 for Table of  ι and υ - stem contracts\\n18,\\\"See Smyth 275 for Table of  ευ,αυ,and ου - stem contracts\\\"\\n19,See Smyth 279 for stems in οι feminine 3rd declension contracts\\n20,See Smyth 265 for Table of 3rd declension contracts of stems in -εσ- preceded by ε\\n21,See Smyth 258 for Table of stems in τ and ατ neuter 3rd declension contracts\\n22,\\\"On stem ending in ν, ν doubled in gen. Sing Aeolic (e.g. μῆνς,μῆννος...)\\\"\\n23,Also in inscriptions and expressions of swearing\\n24,(Borrowed from 1st decl) Sometimes in proper names whose nominative ends in -ης\\n25,From -ας-stems (properly αι)\\n26,(ε)υς instead of (ε)ος or ους (gen) for (3rd decl) words whose nominative ends in -ος\\n27,In 3rd decl. Only in the words αἰδώς (Attic) and ἠώς (Homer and Ionic)\\n28,Contraction of a stem in οι  and an ι-ending\\n29,Stronger form of Ionic contractions of οι-stems (in the nominative)\\n30,See Smyth 267 for Table of ω - stem contracts (masculine only)\\n31,Nominative plural contraction of  -ειδ+ες  after dropping the δ (used for accusative too). See Smyth 247.a\\n32,\\\"Plurals & duals occur rarely (and w/ 2nd decl endings) for 3rd decl οι-stem nouns. See Smyth 279.D.a,b,c\\\"\\n33,See Smyth 285 for description and examples of Irreg. Decl involving 3rd decl endings\\n34,(Homer)  for Attic  (ῳτ)ι\\n35,(Homer) for Cretan ινς\\n36,Also an irregular ending for other stem(s)\\n37,In inscriptions\\n38,\\\"Plural endings for otherwise dual noun,οσσε (eyes)\\\"\\n39,\\\"“Poetical” (acc for ἔρως). See Smyth 285,11\\\"\\n40,\\\"Poetic for χρωτι,dat. of ὁ χρως\\\"\\n41,No Masculine of this Form\\n42,No Feminine of this Form\\n44,See Smyth 214 D.9 and Smyth 215 regarding dialectic alternate forms of the Dative Plural\\n45,\\\"Surviving in Homer (See Smyth 280) Not truly genitive or dative, but instrumental/locative/ablative, associated with the remaining oblique cases (genitive & dative) only after being lost as cases themselves in Greek\\\"\\n46,See Smyth # 266 for only surviving ος-stem in Attic (fem. singular of αἰδως)\\n47,See Smyth 276 for Substantives in -εύς preceded by a vowel.\\n48,\\\"See Smyth 275 D.1,2,3\\\"\\n49,\\\"See Smyth 285, List of Principal Irregular Substantives\\\"\\n50,\\\"See Smyth 259 for Table of stems in a Liquid (λ,ρ) or a Nasal (ν), and Note #259D for variants including Κρονίων...\\\"\\n51,\\\"See Smyth 257 for Table of stems in a Dental (τ,δ,θ) or a Nasal (ν), and its notes including Ν.κόρυς (Voc. Κόρυ) & ὀδούς\\\"\\n52,See Smyth 248 for general rule re 3rd Declension Masc/Fem Singular Vocative\\n54,See Smyth 250 D\\n55,See Smyth 270.\\n56,\\\"See Smyth 277 for other forms of endings for contracts of ευ,αυ,and ου - stems\\\"\\n57,Nominative form used as Vocative. See Smyth 233.\\n58,\\\"See Smyth 238,b\\\"\\n59,\\\"See Smyth 238,d\\\"\\n60,This (Feminine or Masculine) Form only Masculine when derived from ε- or ο- contraction\\n61,See Smyth Note 264 D.1 regarding Homer's use of Open Forms\\n62,See Smyth Note 269 for alternate i-stem and u-stem endings\\n63,See Smyth 214 D.2\\n64,See Smyth 268 D.1\"","module.exports = \"Ending,Number,Case,Declension,Gender,Type,Primary,Footnote\\nα,dual,accusative,1st,feminine,regular,primary,\\nά,dual,accusative,1st,feminine,regular,,\\nᾶ,dual,accusative,1st,feminine,regular,,2\\nαιν,dual,dative,1st,feminine,regular,primary,\\nαῖν,dual,dative,1st,feminine,regular,,\\nαιιν,dual,dative,1st,feminine,irregular,,\\nαιν,dual,genitive,1st,feminine,regular,primary,\\nαῖν,dual,genitive,1st,feminine,regular,,\\nαιιν,dual,genitive,1st,feminine,irregular,,\\nα,dual,nominative,1st,feminine,regular,primary,\\nά,dual,nominative,1st,feminine,regular,,\\nᾶ,dual,nominative,1st,feminine,regular,,2\\nα,dual,vocative,1st,feminine,regular,primary,\\nά,dual,vocative,1st,feminine,regular,,\\nᾶ,dual,vocative,1st,feminine,regular,,2\\nα,dual,accusative,1st,masculine,regular,primary,\\nά,dual,accusative,1st,masculine,regular,,\\nᾶ,dual,accusative,1st,masculine,regular,,2\\nαιν,dual,dative,1st,masculine,regular,primary,\\nαῖν,dual,dative,1st,masculine,regular,,\\nαιιν,dual,dative,1st,masculine,irregular,,\\nαιν,dual,genitive,1st,masculine,regular,primary,\\nαῖν,dual,genitive,1st,masculine,regular,,\\nαιιν,dual,genitive,1st,masculine,irregular,,\\nα,dual,nominative,1st,masculine,regular,primary,\\nά,dual,nominative,1st,masculine,regular,,\\nᾶ,dual,nominative,1st,masculine,regular,,2\\nα,dual,vocative,1st,masculine,regular,primary,\\nά,dual,vocative,1st,masculine,regular,,\\nᾶ,dual,vocative,1st,masculine,regular,,2\\nας,plural,accusative,1st,feminine,regular,primary,\\nάς,plural,accusative,1st,feminine,regular,,\\nᾶς,plural,accusative,1st,feminine,regular,,2\\nανς,plural,accusative,1st,feminine,irregular,,\\nαις,plural,accusative,1st,feminine,irregular,,\\nαις,plural,dative,1st,feminine,regular,primary,\\nαῖς,plural,dative,1st,feminine,regular,,\\nῃσι,plural,dative,1st,feminine,irregular,,44\\nῃσιν,plural,dative,1st,feminine,irregular,,4 44\\nῃς,plural,dative,1st,feminine,irregular,,44\\nαισι,plural,dative,1st,feminine,irregular,,44\\nαισιν,plural,dative,1st,feminine,irregular,,4 44\\nῶν,plural,genitive,1st,feminine,regular,primary,\\nάων,plural,genitive,1st,feminine,irregular,,\\nέων,plural,genitive,1st,feminine,irregular,,\\nήων,plural,genitive,1st,feminine,irregular,,\\nᾶν,plural,genitive,1st,feminine,irregular,,\\nαι,plural,nominative,1st,feminine,regular,primary,\\nαί,plural,nominative,1st,feminine,regular,,\\nαῖ,plural,nominative,1st,feminine,regular,,2\\nαι,plural,vocative,1st,feminine,regular,primary,\\nαί,plural,vocative,1st,feminine,regular,,\\nαῖ,plural,vocative,1st,feminine,regular,,2\\nας,plural,accusative,1st,masculine,regular,primary,\\nάς,plural,accusative,1st,masculine,regular,,\\nᾶς,plural,accusative,1st,masculine,regular,,3\\nανς,plural,accusative,1st,masculine,irregular,,\\nαις,plural,accusative,1st,masculine,irregular,,\\nαις,plural,dative,1st,masculine,regular,primary,\\nαῖς,plural,dative,1st,masculine,regular,,\\nῃσι,plural,dative,1st,masculine,irregular,,44\\nῃσιν,plural,dative,1st,masculine,irregular,,4 44\\nῃς,plural,dative,1st,masculine,irregular,,44\\nαισι,plural,dative,1st,masculine,irregular,,44\\nαισιν,plural,dative,1st,masculine,irregular,,4 44\\nῶν,plural,genitive,1st,masculine,regular,primary,\\nάων,plural,genitive,1st,masculine,irregular,,\\nέων,plural,genitive,1st,masculine,irregular,,\\nήων,plural,genitive,1st,masculine,irregular,,\\nᾶν,plural,genitive,1st,masculine,irregular,,\\nαι,plural,nominative,1st,masculine,regular,primary,\\nαί,plural,nominative,1st,masculine,regular,,\\nαῖ,plural,nominative,1st,masculine,regular,,3\\nαι,plural,vocative,1st,masculine,regular,primary,\\nαί,plural,vocative,1st,masculine,regular,,\\nαῖ,plural,vocative,1st,masculine,regular,,3\\nαν,singular,accusative,1st,feminine,regular,primary,\\nην,singular,accusative,1st,feminine,regular,primary,\\nήν,singular,accusative,1st,feminine,regular,,\\nᾶν,singular,accusative,1st,feminine,regular,,2\\nῆν,singular,accusative,1st,feminine,regular,,2\\nάν,singular,accusative,1st,feminine,irregular,,63\\nᾳ,singular,dative,1st,feminine,regular,primary,\\nῃ,singular,dative,1st,feminine,regular,primary,\\nῇ,singular,dative,1st,feminine,regular,,2\\nᾷ,singular,dative,1st,feminine,regular,,2\\nηφι,singular,dative,1st,feminine,irregular,,45\\nηφιν,singular,dative,1st,feminine,irregular,,4 45\\nῆφι,singular,dative,1st,feminine,irregular,,45\\nῆφιv,singular,dative,1st,feminine,irregular,,4 45\\nας,singular,genitive,1st,feminine,regular,primary,\\nης,singular,genitive,1st,feminine,regular,primary,\\nῆs,singular,genitive,1st,feminine,regular,,\\nᾶs,singular,genitive,1st,feminine,regular,,2\\nηφι,singular,genitive,1st,feminine,irregular,,45\\nηφιν,singular,genitive,1st,feminine,irregular,,4 45\\nῆφι,singular,genitive,1st,feminine,irregular,,45\\nῆφιv,singular,genitive,1st,feminine,irregular,,4 45\\nα,singular,nominative,1st,feminine,regular,primary,\\nη,singular,nominative,1st,feminine,regular,primary,1\\nή,singular,nominative,1st,feminine,regular,,\\nᾶ,singular,nominative,1st,feminine,regular,,2\\nῆ,singular,nominative,1st,feminine,regular,,2\\nά,singular,nominative,1st,feminine,irregular,,63\\nα,singular,vocative,1st,feminine,regular,primary,\\nη,singular,vocative,1st,feminine,regular,primary,\\nή,singular,vocative,1st,feminine,regular,,\\nᾶ,singular,vocative,1st,feminine,regular,,2\\nῆ,singular,vocative,1st,feminine,regular,,2\\nά,singular,vocative,1st,feminine,irregular,,63\\nαν,singular,accusative,1st,masculine,regular,primary,\\nην,singular,accusative,1st,masculine,regular,primary,3\\nήν,singular,accusative,1st,masculine,regular,,\\nᾶν,singular,accusative,1st,masculine,regular,,3\\nῆν,singular,accusative,1st,masculine,regular,,3\\nεα,singular,accusative,1st,masculine,irregular,,\\nᾳ,singular,dative,1st,masculine,regular,primary,\\nῃ,singular,dative,1st,masculine,regular,primary,\\nῇ,singular,dative,1st,masculine,regular,,\\nᾷ,singular,dative,1st,masculine,regular,,3\\nῆ,singular,dative,1st,masculine,regular,,3\\nηφι,singular,dative,1st,masculine,irregular,,45\\nηφιν,singular,dative,1st,masculine,irregular,,4 45\\nῆφι,singular,dative,1st,masculine,irregular,,45\\nῆφιv,singular,dative,1st,masculine,irregular,,4 45\\nου,singular,genitive,1st,masculine,regular,primary,\\nοῦ,singular,genitive,1st,masculine,regular,,\\nαο,singular,genitive,1st,masculine,irregular,,\\nεω,singular,genitive,1st,masculine,irregular,,\\nηφι,singular,genitive,1st,masculine,irregular,,45\\nηφιν,singular,genitive,1st,masculine,irregular,,4 45\\nῆφι,singular,genitive,1st,masculine,irregular,,45\\nῆφιv,singular,genitive,1st,masculine,irregular,,4 45\\nω,singular,genitive,1st,masculine,irregular,,\\nα,singular,genitive,1st,masculine,irregular,,\\nας,singular,nominative,1st,masculine,regular,primary,\\nης,singular,nominative,1st,masculine,regular,primary,\\nής,singular,nominative,1st,masculine,regular,,\\nᾶs,singular,nominative,1st,masculine,regular,,3\\nῆs,singular,nominative,1st,masculine,regular,,3\\nα,singular,vocative,1st,masculine,regular,primary,\\nη,singular,vocative,1st,masculine,regular,primary,\\nά,singular,vocative,1st,masculine,regular,,\\nᾶ,singular,vocative,1st,masculine,regular,,3\\nῆ,singular,vocative,1st,masculine,regular,,3\\nω,dual,accusative,2nd,masculine feminine,regular,primary,\\nώ,dual,accusative,2nd,masculine feminine,regular,,5\\nοιν,dual,dative,2nd,masculine feminine,regular,primary,\\nοῖν,dual,dative,2nd,masculine feminine,regular,,5\\nοιιν,dual,dative,2nd,masculine feminine,irregular,,\\nῴν,dual,dative,2nd,masculine feminine,irregular,,7\\nοιν,dual,genitive,2nd,masculine feminine,regular,primary,\\nοῖν,dual,genitive,2nd,masculine feminine,regular,,5\\nοιιν,dual,genitive,2nd,masculine feminine,irregular,,\\nῴν,dual,genitive,2nd,masculine feminine,irregular,,7\\nω,dual,nominative,2nd,masculine feminine,regular,primary,60\\nώ,dual,nominative,2nd,masculine feminine,regular,,60\\nω,dual,vocative,2nd,masculine feminine,regular,primary,\\nώ,dual,vocative,2nd,masculine feminine,regular,,5\\nω,dual,accusative,2nd,neuter,regular,primary,\\nώ,dual,accusative,2nd,neuter,regular,,6\\nοιν,dual,dative,2nd,neuter,regular,primary,\\nοῖν,dual,dative,2nd,neuter,regular,,6\\nοιιν,dual,dative,2nd,neuter,irregular,,\\nοιν,dual,genitive,2nd,neuter,regular,primary,\\nοῖν,dual,genitive,2nd,neuter,regular,,6\\nοιιν,dual,genitive,2nd,neuter,irregular,,\\nω,dual,nominative,2nd,neuter,regular,primary,\\nώ,dual,nominative,2nd,neuter,regular,,6\\nω,dual,vocative,2nd,neuter,regular,primary,\\nώ,dual,vocative,2nd,neuter,regular,,6\\nους,plural,accusative,2nd,masculine feminine,regular,primary,\\nούς,plural,accusative,2nd,masculine feminine,regular,,41\\nοῦς,plural,accusative,2nd,masculine feminine,regular,,5\\nονς,plural,accusative,2nd,masculine feminine,irregular,,\\nος,plural,accusative,2nd,masculine feminine,irregular,,\\nως,plural,accusative,2nd,masculine feminine,irregular,,\\nοις,plural,accusative,2nd,masculine feminine,irregular,,\\nώς,plural,accusative,2nd,masculine feminine,irregular,,7\\nοις,plural,dative,2nd,masculine feminine,regular,primary,\\nοῖς,plural,dative,2nd,masculine feminine,regular,,5\\nοισι,plural,dative,2nd,masculine feminine,irregular,,\\nοισιν,plural,dative,2nd,masculine feminine,irregular,,4\\nῴς,plural,dative,2nd,masculine feminine,irregular,,7\\nόφι,plural,dative,2nd,masculine feminine,irregular,,45\\nόφιv,plural,dative,2nd,masculine feminine,irregular,,4 45\\nων,plural,genitive,2nd,masculine feminine,regular,primary,\\nῶν,plural,genitive,2nd,masculine feminine,regular,,5\\nών,plural,genitive,2nd,masculine feminine,irregular,,7\\nόφι,plural,genitive,2nd,masculine feminine,irregular,,45\\nόφιv,plural,genitive,2nd,masculine feminine,irregular,,4 45\\nοι,plural,nominative,2nd,masculine feminine,regular,primary,\\nοί,plural,nominative,2nd,masculine feminine,regular,,41\\nοῖ,plural,nominative,2nd,masculine feminine,regular,,5\\nῴ,plural,nominative,2nd,masculine feminine,irregular,,7\\nοι,plural,vocative,2nd,masculine feminine,regular,primary,\\nοί,plural,vocative,2nd,masculine feminine,regular,,41\\nοῖ,plural,vocative,2nd,masculine feminine,regular,,5\\nα,plural,accusative,2nd,neuter,regular,primary,\\nᾶ,plural,accusative,2nd,neuter,regular,,6\\nοις,plural,dative,2nd,neuter,regular,primary,\\nοῖς,plural,dative,2nd,neuter,regular,,6\\nοισι,plural,dative,2nd,neuter,irregular,,\\nοισιν,plural,dative,2nd,neuter,irregular,,4\\nόφι,plural,dative,2nd,neuter,irregular,,45\\nόφιv,plural,dative,2nd,neuter,irregular,,4 45\\nων,plural,genitive,2nd,neuter,regular,primary,\\nῶν,plural,genitive,2nd,neuter,regular,,6\\nόφι,plural,genitive,2nd,neuter,irregular,,45\\nόφιv,plural,genitive,2nd,neuter,irregular,,4 45\\nα,plural,nominative,2nd,neuter,regular,primary,\\nᾶ,plural,nominative,2nd,neuter,regular,,6\\nα,plural,vocative,2nd,neuter,regular,primary,\\nᾶ,plural,vocative,2nd,neuter,regular,,6\\nον,singular,accusative,2nd,masculine feminine,regular,primary,\\nόν,singular,accusative,2nd,masculine feminine,regular,primary,41\\nουν,singular,accusative,2nd,masculine feminine,regular,,5\\nοῦν,singular,accusative,2nd,masculine feminine,regular,,5\\nω,singular,accusative,2nd,masculine feminine,irregular,,7 5\\nωv,singular,accusative,2nd,masculine feminine,irregular,,7 59\\nώ,singular,accusative,2nd,masculine feminine,irregular,,7 42 59\\nών,singular,accusative,2nd,masculine feminine,irregular,,7 59\\nῳ,singular,dative,2nd,masculine feminine,regular,primary,\\nῷ,singular,dative,2nd,masculine feminine,regular,,5\\nῴ,singular,dative,2nd,masculine feminine,irregular,,7\\nόφι,singular,dative,2nd,masculine feminine,irregular,,45\\nόφιv,singular,dative,2nd,masculine feminine,irregular,,4 45\\nου,singular,genitive,2nd,masculine feminine,regular,primary,\\nοῦ,singular,genitive,2nd,masculine feminine,regular,,5\\nοιο,singular,genitive,2nd,masculine feminine,irregular,,\\nοο,singular,genitive,2nd,masculine feminine,irregular,,\\nω,singular,genitive,2nd,masculine feminine,irregular,,\\nώ,singular,genitive,2nd,masculine feminine,irregular,,7\\nόφι,singular,genitive,2nd,masculine feminine,irregular,,45\\nόφιv,singular,genitive,2nd,masculine feminine,irregular,,4 45\\nος,singular,nominative,2nd,masculine feminine,regular,primary,\\nους,singular,nominative,2nd,masculine feminine,regular,,5\\noῦς,singular,nominative,2nd,masculine feminine,regular,,5\\nός,singular,nominative,2nd,masculine feminine,regular,,\\nώς,singular,nominative,2nd,masculine feminine,irregular,,7 42\\nως,singular,nominative,2nd,masculine feminine,irregular,,\\nε,singular,vocative,2nd,masculine feminine,regular,primary,\\nέ,singular,vocative,2nd,masculine feminine,regular,,\\nοu,singular,vocative,2nd,masculine feminine,regular,,5\\nοῦ,singular,vocative,2nd,masculine feminine,regular,,42\\nός,singular,vocative,2nd,masculine feminine,irregular,,57\\nον,singular,accusative,2nd,neuter,regular,primary,\\nοῦν,singular,accusative,2nd,neuter,regular,,6\\nῳ,singular,dative,2nd,neuter,regular,primary,\\nῷ,singular,dative,2nd,neuter,regular,,6\\nόφι,singular,dative,2nd,neuter,irregular,,45\\nόφιv,singular,dative,2nd,neuter,irregular,,4 45\\nου,singular,genitive,2nd,neuter,regular,primary,\\nοῦ,singular,genitive,2nd,neuter,regular,,6\\nοο,singular,genitive,2nd,neuter,irregular,,\\nοιο,singular,genitive,2nd,neuter,irregular,,\\nω,singular,genitive,2nd,neuter,irregular,,\\nόφι,singular,genitive,2nd,neuter,irregular,,45\\nόφιv,singular,genitive,2nd,neuter,irregular,,4 45\\nον,singular,nominative,2nd,neuter,regular,primary,\\nοῦν,singular,nominative,2nd,neuter,regular,,6\\nον,singular,vocative,2nd,neuter,regular,primary,\\nοῦν,singular,vocative,2nd,neuter,regular,,6\\nε,dual,accusative,3rd,masculine feminine,regular,primary,\\nει,dual,accusative,3rd,masculine feminine,regular,,\\nῆ,dual,accusative,3rd,masculine feminine,regular,,18\\nω,dual,accusative,3rd,masculine feminine,irregular,,32\\nῖ,dual,accusative,3rd,masculine feminine,irregular,,33\\nεε,dual,accusative,3rd,masculine feminine,irregular,,16 55 61\\nοιν,dual,dative,3rd,masculine feminine,regular,primary,\\nοῖν,dual,dative,3rd,masculine feminine,regular,,\\nοιιν,dual,dative,3rd,masculine feminine,irregular,,54\\nσι,dual,dative,3rd,masculine feminine,irregular,,33 37\\nεσσι,dual,dative,3rd,masculine feminine,irregular,,33\\nεσι,dual,dative,3rd,masculine feminine,irregular,,33\\nέοιν,dual,dative,3rd,masculine feminine,irregular,,16 61\\nῳν,dual,dative,3rd,masculine feminine,irregular,,49\\nοιν,dual,genitive,3rd,masculine feminine,regular,primary,\\nοῖν,dual,genitive,3rd,masculine feminine,regular,,\\nοιιν,dual,genitive,3rd,masculine feminine,irregular,,54\\nέοιν,dual,genitive,3rd,masculine feminine,irregular,,16 61\\nῳν,dual,genitive,3rd,masculine feminine,irregular,,49\\nε,dual,nominative,3rd,masculine feminine,regular,primary,\\nει,dual,nominative,3rd,masculine feminine,regular,,\\nῆ,dual,nominative,3rd,masculine feminine,regular,,18\\nω,dual,nominative,3rd,masculine feminine,irregular,,32\\nῖ,dual,nominative,3rd,masculine feminine,irregular,,33\\nεε,dual,nominative,3rd,masculine feminine,irregular,,16 55 61\\nε,dual,vocative,3rd,masculine feminine,regular,primary,\\nει,dual,vocative,3rd,masculine feminine,regular,,\\nῆ,dual,vocative,3rd,masculine feminine,regular,,18\\nω,dual,vocative,3rd,masculine feminine,irregular,,32\\nῖ,dual,vocative,3rd,masculine feminine,irregular,,33\\nεε,dual,vocative,3rd,masculine feminine,irregular,,16 55 61\\nε,dual,accusative,3rd,neuter,regular,primary,\\nει,dual,accusative,3rd,neuter,regular,,\\nα,dual,accusative,3rd,neuter,regular,,\\nεε,dual,accusative,3rd,neuter,irregular,,16 61\\nαε,dual,accusative,3rd,neuter,irregular,,16 61\\nοιν,dual,dative,3rd,neuter,regular,primary,\\nῷν,dual,dative,3rd,neuter,regular,,\\nοις,dual,dative,3rd,neuter,irregular,,33 38\\nοισι,dual,dative,3rd,neuter,irregular,,33 38\\nοισι(ν),dual,dative,3rd,neuter,irregular,,4 33 38\\nοιιν,dual,dative,3rd,neuter,irregular,,\\nέοιν,dual,dative,3rd,neuter,irregular,,16 61\\nάοιν,dual,dative,3rd,neuter,irregular,,16 61\\nοιν,dual,genitive,3rd,neuter,regular,primary,\\nῷν,dual,genitive,3rd,neuter,regular,,\\nων,dual,genitive,3rd,neuter,irregular,,33 38\\nοιιν,dual,genitive,3rd,neuter,irregular,,\\nέοιν,dual,genitive,3rd,neuter,irregular,,16 61\\nάοιν,dual,genitive,3rd,neuter,irregular,,16 61\\nε,dual,nominative,3rd,neuter,regular,primary,\\nει,dual,nominative,3rd,neuter,regular,,\\nα,dual,nominative,3rd,neuter,regular,,\\nεε,dual,nominative,3rd,neuter,irregular,,16 61\\nαε,dual,nominative,3rd,neuter,irregular,,16 61\\nε,dual,vocative,3rd,neuter,regular,primary,\\nει,dual,vocative,3rd,neuter,regular,,\\nα,dual,vocative,3rd,neuter,regular,,\\nεε,dual,vocative,3rd,neuter,irregular,,16 61\\nαε,dual,vocative,3rd,neuter,irregular,,16 61\\nᾰς,plural,accusative,3rd,masculine feminine,regular,primary,\\nας,plural,accusative,3rd,masculine feminine,regular,primary,\\nεις,plural,accusative,3rd,masculine feminine,regular,,17 41\\nες,plural,accusative,3rd,masculine feminine,regular,,\\nς,plural,accusative,3rd,masculine feminine,regular,,\\nῦς,plural,accusative,3rd,masculine feminine,regular,,17 18 48\\nως,plural,accusative,3rd,masculine feminine,regular,,30\\nῆς,plural,accusative,3rd,masculine feminine,irregular,,56\\nέας,plural,accusative,3rd,masculine feminine,irregular,,\\nέος,plural,accusative,3rd,masculine feminine,irregular,,\\nῆος,plural,accusative,3rd,masculine feminine,irregular,,\\nῆες,plural,accusative,3rd,masculine feminine,irregular,,\\nῆας,plural,accusative,3rd,masculine feminine,irregular,,\\nους,plural,accusative,3rd,masculine feminine,irregular,,32\\nούς,plural,accusative,3rd,masculine feminine,irregular,,32\\nεῖς,plural,accusative,3rd,masculine feminine,irregular,,31 41\\nεες,plural,accusative,3rd,masculine feminine,irregular,,55 61\\nις,plural,accusative,3rd,masculine feminine,irregular,,\\nινς,plural,accusative,3rd,masculine feminine,irregular,,\\nῶς,plural,accusative,3rd,masculine feminine,irregular,,48\\nσι,plural,dative,3rd,masculine feminine,regular,primary,\\nσιν,plural,dative,3rd,masculine feminine,regular,primary,4\\nσί,plural,dative,3rd,masculine feminine,regular,,41\\nσίν,plural,dative,3rd,masculine feminine,regular,,4 41\\nεσι,plural,dative,3rd,masculine feminine,regular,,41\\nεσιν,plural,dative,3rd,masculine feminine,regular,,4 41\\nέσι,plural,dative,3rd,masculine feminine,regular,,\\nέσιν,plural,dative,3rd,masculine feminine,regular,,4\\nψι,plural,dative,3rd,masculine feminine,regular,,\\nψιν,plural,dative,3rd,masculine feminine,regular,,4\\nψί,plural,dative,3rd,masculine feminine,regular,,\\nψίν,plural,dative,3rd,masculine feminine,regular,,4\\nξι,plural,dative,3rd,masculine feminine,regular,,\\nξιν,plural,dative,3rd,masculine feminine,regular,,4\\nξί,plural,dative,3rd,masculine feminine,regular,,\\nξίν,plural,dative,3rd,masculine feminine,regular,,4\\nφι,plural,dative,3rd,masculine feminine,irregular,,45\\nφιν,plural,dative,3rd,masculine feminine,irregular,,4 45\\nηφι,plural,dative,3rd,masculine feminine,irregular,,45\\nηφιv,plural,dative,3rd,masculine feminine,irregular,,4 45\\nῆφι,plural,dative,3rd,masculine feminine,irregular,,45\\nῆφιν,plural,dative,3rd,masculine feminine,irregular,,4 45\\nόφι,plural,dative,3rd,masculine feminine,irregular,,45\\nόφιν,plural,dative,3rd,masculine feminine,irregular,,4 45\\nαις,plural,dative,3rd,masculine feminine,irregular,,33 41\\nοῖσι,plural,dative,3rd,masculine feminine,irregular,,33\\nοῖσιv,plural,dative,3rd,masculine feminine,irregular,,4 33\\nεσσι,plural,dative,3rd,masculine feminine,irregular,,16 61\\nεσσιv,plural,dative,3rd,masculine feminine,irregular,,4 16 61\\nυσσι,plural,dative,3rd,masculine feminine,irregular,,54\\nυσσιv,plural,dative,3rd,masculine feminine,irregular,,4 54\\nσσί,plural,dative,3rd,masculine feminine,irregular,,54\\nσσίv,plural,dative,3rd,masculine feminine,irregular,,4 54\\nων,plural,genitive,3rd,masculine feminine,regular,primary,\\nῶν,plural,genitive,3rd,masculine feminine,regular,,\\n-,plural,genitive,3rd,masculine feminine,irregular,,41\\nφι,plural,genitive,3rd,masculine feminine,irregular,,45\\nφιν,plural,genitive,3rd,masculine feminine,irregular,,4 45\\nηφι,plural,genitive,3rd,masculine feminine,irregular,,45\\nηφιv,plural,genitive,3rd,masculine feminine,irregular,,4 45\\nῆφι,plural,genitive,3rd,masculine feminine,irregular,,45\\nῆφιν,plural,genitive,3rd,masculine feminine,irregular,,4 45\\nόφι,plural,genitive,3rd,masculine feminine,irregular,,45\\nόφιν,plural,genitive,3rd,masculine feminine,irregular,,4 45\\nέων,plural,genitive,3rd,masculine feminine,irregular,,16 61\\nες,plural,nominative,3rd,masculine feminine,regular,primary,\\nως,plural,nominative,3rd,masculine feminine,regular,,30\\nεις,plural,nominative,3rd,masculine feminine,regular,,17\\nεῖς,plural,nominative,3rd,masculine feminine,regular,,18\\nοί,plural,nominative,3rd,masculine feminine,irregular,,32\\nαί,plural,nominative,3rd,masculine feminine,irregular,,33\\nῆς,plural,nominative,3rd,masculine feminine,irregular,,18\\nῄς,plural,nominative,3rd,masculine feminine,irregular,,31 41\\nεες,plural,nominative,3rd,masculine feminine,irregular,,16 55 61\\nοι,plural,nominative,3rd,masculine feminine,irregular,,33\\nες,plural,vocative,3rd,masculine feminine,regular,primary,\\nεις,plural,vocative,3rd,masculine feminine,regular,,17\\nεῖς,plural,vocative,3rd,masculine feminine,regular,,18\\nῆς,plural,vocative,3rd,masculine feminine,regular,,18\\nως,plural,vocative,3rd,masculine feminine,regular,,30\\nεες,plural,vocative,3rd,masculine feminine,irregular,,16 55 61\\nα,plural,accusative,3rd,neuter,regular,primary,\\nη,plural,accusative,3rd,neuter,regular,,\\nς,plural,accusative,3rd,neuter,regular,,\\nά,plural,accusative,3rd,neuter,irregular,,33\\nαα,plural,accusative,3rd,neuter,irregular,,16 61\\nεα,plural,accusative,3rd,neuter,irregular,,16 61\\nσι,plural,dative,3rd,neuter,regular,primary,\\nσιν,plural,dative,3rd,neuter,regular,primary,4\\nσί,plural,dative,3rd,neuter,regular,,\\nσίv,plural,dative,3rd,neuter,regular,,4\\nασι,plural,dative,3rd,neuter,regular,,\\nασιν,plural,dative,3rd,neuter,regular,,4\\nεσι,plural,dative,3rd,neuter,regular,,\\nεσιν,plural,dative,3rd,neuter,regular,,4\\nέσι,plural,dative,3rd,neuter,regular,,\\nέσιv,plural,dative,3rd,neuter,regular,,4\\nεσσι,plural,dative,3rd,neuter,irregular,,54\\nεσσιν,plural,dative,3rd,neuter,irregular,,4 54\\nσσί,plural,dative,3rd,neuter,irregular,,54\\nσσίv,plural,dative,3rd,neuter,irregular,,4 54\\nασσι,plural,dative,3rd,neuter,irregular,,54\\nασσιν,plural,dative,3rd,neuter,irregular,,4 54\\nφι,plural,dative,3rd,neuter,irregular,,45\\nφιν,plural,dative,3rd,neuter,irregular,,4 45\\nηφι,plural,dative,3rd,neuter,irregular,,45\\nηφιv,plural,dative,3rd,neuter,irregular,,4 45\\nῆφι,plural,dative,3rd,neuter,irregular,,45\\nῆφιν,plural,dative,3rd,neuter,irregular,,4 45\\nόφι,plural,dative,3rd,neuter,irregular,,45\\nόφιν,plural,dative,3rd,neuter,irregular,,4 45\\nων,plural,genitive,3rd,neuter,regular,primary,\\nῶν,plural,genitive,3rd,neuter,regular,primary,\\nφι,plural,genitive,3rd,neuter,irregular,,\\nφιν,plural,genitive,3rd,neuter,irregular,,4 45\\nηφι,plural,genitive,3rd,neuter,irregular,,45\\nηφιv,plural,genitive,3rd,neuter,irregular,,4 45\\nῆφι,plural,genitive,3rd,neuter,irregular,,45\\nῆφιν,plural,genitive,3rd,neuter,irregular,,4 45\\nόφι,plural,genitive,3rd,neuter,irregular,,45\\nόφιν,plural,genitive,3rd,neuter,irregular,,4 45\\nέων,plural,genitive,3rd,neuter,irregular,,16 61\\nάων,plural,genitive,3rd,neuter,irregular,,16 61\\nα,plural,nominative,3rd,neuter,regular,primary,\\nη,plural,nominative,3rd,neuter,regular,,\\nες,plural,nominative,3rd,neuter,regular,,\\nά,plural,nominative,3rd,neuter,irregular,,33\\nεα,plural,nominative,3rd,neuter,irregular,,16 61\\nαα,plural,nominative,3rd,neuter,irregular,,16 61\\nα,plural,vocative,3rd,neuter,regular,primary,\\nη,plural,vocative,3rd,neuter,regular,,\\nες,plural,vocative,3rd,neuter,regular,,\\nαα,plural,vocative,3rd,neuter,irregular,,16 61\\nεα,plural,vocative,3rd,neuter,irregular,,16 61\\nᾰ,singular,accusative,3rd,masculine feminine,regular,primary,\\nα,singular,accusative,3rd,masculine feminine,regular,primary,\\nη,singular,accusative,3rd,masculine feminine,regular,,16\\nν,singular,accusative,3rd,masculine feminine,regular,,\\nιν,singular,accusative,3rd,masculine feminine,regular,,41\\nῦν,singular,accusative,3rd,masculine feminine,regular,,18\\nῶ,singular,accusative,3rd,masculine feminine,regular,,23\\nυν,singular,accusative,3rd,masculine feminine,regular,,\\nῦν,singular,accusative,3rd,masculine feminine,regular,,17\\nύν,singular,accusative,3rd,masculine feminine,regular,,17\\nέα,singular,accusative,3rd,masculine feminine,regular,,20\\nην,singular,accusative,3rd,masculine feminine,regular,,24\\nώ,singular,accusative,3rd,masculine feminine,regular,,19 41\\nω,singular,accusative,3rd,masculine feminine,regular,,23\\nεῖν,singular,accusative,3rd,masculine feminine,irregular,,31 41\\nων,singular,accusative,3rd,masculine feminine,irregular,,33 41 49\\nαν,singular,accusative,3rd,masculine feminine,irregular,,33 41\\nον,singular,accusative,3rd,masculine feminine,irregular,,39\\nῖς,singular,accusative,3rd,masculine feminine,irregular,,33\\nεα,singular,accusative,3rd,masculine feminine,irregular,,61\\nι,singular,dative,3rd,masculine feminine,regular,primary,\\nί,singular,dative,3rd,masculine feminine,regular,,\\nϊ,singular,dative,3rd,masculine feminine,regular,,17\\nΐ,singular,dative,3rd,masculine feminine,regular,,40\\nει,singular,dative,3rd,masculine feminine,regular,,16 17\\nεῖ,singular,dative,3rd,masculine feminine,regular,,18\\nαι,singular,dative,3rd,masculine feminine,regular,,\\noῖ,singular,dative,3rd,masculine feminine,regular,,28 41\\nῖ,singular,dative,3rd,masculine feminine,irregular,,33 46\\nῆι,singular,dative,3rd,masculine feminine,irregular,,18\\nᾳ,singular,dative,3rd,masculine feminine,irregular,,25\\nῳ,singular,dative,3rd,masculine feminine,irregular,,33 34\\nῷ,singular,dative,3rd,masculine feminine,irregular,,33\\nιί,singular,dative,3rd,masculine feminine,irregular,,62\\nυί,singular,dative,3rd,masculine feminine,irregular,,62\\nέϊ,singular,dative,3rd,masculine feminine,irregular,,18 61\\nος,singular,genitive,3rd,masculine feminine,regular,primary,\\nός,singular,genitive,3rd,masculine feminine,regular,,\\nους,singular,genitive,3rd,masculine feminine,regular,,16\\nοῦς,singular,genitive,3rd,masculine feminine,regular,,19 46\\nως,singular,genitive,3rd,masculine feminine,regular,,17 18\\nώς,singular,genitive,3rd,masculine feminine,regular,,17 18 41\\nῶς,singular,genitive,3rd,masculine feminine,regular,,47\\nεως,singular,genitive,3rd,masculine feminine,regular,,17\\nέως,singular,genitive,3rd,masculine feminine,regular,,\\nεώς,singular,genitive,3rd,masculine feminine,regular,,\\nέους,singular,genitive,3rd,masculine feminine,regular,,20\\nω,singular,genitive,3rd,masculine feminine,irregular,,\\nεος,singular,genitive,3rd,masculine feminine,irregular,,61\\nΰς,singular,genitive,3rd,masculine feminine,irregular,,41 48\\nῦς,singular,genitive,3rd,masculine feminine,irregular,,48\\nνος,singular,genitive,3rd,masculine feminine,irregular,,22\\nοῦ,singular,genitive,3rd,masculine feminine,irregular,,33\\nηος,singular,genitive,3rd,masculine feminine,irregular,,55\\nιός,singular,genitive,3rd,masculine feminine,irregular,,62\\nuός,singular,genitive,3rd,masculine feminine,irregular,,62\\nς,singular,nominative,3rd,masculine feminine,regular,primary,\\n-,singular,nominative,3rd,masculine feminine,regular,primary,\\nηρ,singular,nominative,3rd,masculine feminine,regular,,41\\nις,singular,nominative,3rd,masculine feminine,regular,,\\nϊς,singular,nominative,3rd,masculine feminine,regular,,\\nώ,singular,nominative,3rd,masculine feminine,regular,,41\\nψ,singular,nominative,3rd,masculine feminine,regular,,\\nξ,singular,nominative,3rd,masculine feminine,regular,,\\nρ,singular,nominative,3rd,masculine feminine,regular,,\\nήρ,singular,nominative,3rd,masculine feminine,regular,,\\nήν,singular,nominative,3rd,masculine feminine,regular,,50\\nν,singular,nominative,3rd,masculine feminine,regular,,\\nωρ,singular,nominative,3rd,masculine feminine,regular,,\\nων,singular,nominative,3rd,masculine feminine,regular,,\\nών,singular,nominative,3rd,masculine feminine,regular,,\\nης,singular,nominative,3rd,masculine feminine,regular,,\\nῆς,singular,nominative,3rd,masculine feminine,regular,,\\nυς,singular,nominative,3rd,masculine feminine,regular,,\\nῦς,singular,nominative,3rd,masculine feminine,regular,,\\nεῦς,singular,nominative,3rd,masculine feminine,regular,,\\nύς,singular,nominative,3rd,masculine feminine,regular,,\\nής,singular,nominative,3rd,masculine feminine,regular,,33\\nας,singular,nominative,3rd,masculine feminine,irregular,,\\nῴ,singular,nominative,3rd,masculine feminine,irregular,,29 41\\nώς,singular,nominative,3rd,masculine feminine,irregular,,27 41\\nϋς,singular,nominative,3rd,masculine feminine,irregular,,41\\nῄς,singular,nominative,3rd,masculine feminine,irregular,,31 41\\nῖς,singular,nominative,3rd,masculine feminine,irregular,,\\nεῖς,singular,nominative,3rd,masculine feminine,irregular,,31 41\\nῶς,singular,nominative,3rd,masculine feminine,irregular,,48\\nος,singular,nominative,3rd,masculine feminine,irregular,,33\\n-,singular,vocative,3rd,masculine feminine,regular,primary,52\\nς,singular,vocative,3rd,masculine feminine,regular,,30\\nι,singular,vocative,3rd,masculine feminine,regular,,41\\nῦ,singular,vocative,3rd,masculine feminine,regular,,15 17 18\\nοῖ,singular,vocative,3rd,masculine feminine,regular,,19 41\\nψ,singular,vocative,3rd,masculine feminine,regular,,\\nξ,singular,vocative,3rd,masculine feminine,regular,,\\nν,singular,vocative,3rd,masculine feminine,regular,,\\nρ,singular,vocative,3rd,masculine feminine,regular,,\\nων,singular,vocative,3rd,masculine feminine,regular,,50\\nών,singular,vocative,3rd,masculine feminine,regular,,\\nήν,singular,vocative,3rd,masculine feminine,regular,,\\nερ,singular,vocative,3rd,masculine feminine,regular,,\\nες,singular,vocative,3rd,masculine feminine,regular,,\\nί,singular,vocative,3rd,masculine feminine,regular,,\\nως,singular,vocative,3rd,masculine feminine,regular,,\\nἶ,singular,vocative,3rd,masculine feminine,regular,,\\nούς,singular,vocative,3rd,masculine feminine,regular,,51\\nύ,singular,vocative,3rd,masculine feminine,regular,,15\\nυ,singular,vocative,3rd,masculine feminine,regular,,51\\nεις,singular,vocative,3rd,masculine feminine,regular,,20\\nαν,singular,vocative,3rd,masculine feminine,regular,,\\nώς,singular,vocative,3rd,masculine feminine,irregular,,27 41 46\\nον,singular,vocative,3rd,masculine feminine,irregular,,\\nυς,singular,vocative,3rd,masculine feminine,irregular,,33\\nα,singular,accusative,3rd,neuter,regular,primary,15\\n-,singular,accusative,3rd,neuter,regular,,33\\nος,singular,accusative,3rd,neuter,regular,,\\nας,singular,accusative,3rd,neuter,regular,,\\nαρ,singular,accusative,3rd,neuter,regular,,21\\nυ,singular,accusative,3rd,neuter,regular,,\\nι,singular,dative,3rd,neuter,regular,primary,\\nει,singular,dative,3rd,neuter,regular,,16\\nαι,singular,dative,3rd,neuter,regular,,16 21\\nϊ,singular,dative,3rd,neuter,irregular,,17\\nᾳ,singular,dative,3rd,neuter,irregular,,25 33\\nυϊ,singular,dative,3rd,neuter,irregular,,17\\nαϊ,singular,dative,3rd,neuter,irregular,,21 61\\nος,singular,genitive,3rd,neuter,regular,primary,\\nους,singular,genitive,3rd,neuter,regular,,16\\nως,singular,genitive,3rd,neuter,regular,,16\\nεως,singular,genitive,3rd,neuter,regular,,17\\nυς,singular,genitive,3rd,neuter,irregular,,26\\nου,singular,genitive,3rd,neuter,irregular,,33\\nαος,singular,genitive,3rd,neuter,irregular,,21 61\\nα,singular,nominative,3rd,neuter,regular,primary,\\n-,singular,nominative,3rd,neuter,regular,,33\\nος,singular,nominative,3rd,neuter,regular,,\\nαρ,singular,nominative,3rd,neuter,regular,,\\nας,singular,nominative,3rd,neuter,regular,,16 21\\nυ,singular,nominative,3rd,neuter,regular,,\\nον,singular,nominative,3rd,neuter,irregular,,33\\nα,singular,vocative,3rd,neuter,regular,primary,15\\n-,singular,vocative,3rd,neuter,regular,,\\nος,singular,vocative,3rd,neuter,regular,,\\nας,singular,vocative,3rd,neuter,regular,,\\nαρ,singular,vocative,3rd,neuter,regular,,21\\nυ,singular,vocative,3rd,neuter,regular,,\"","module.exports = \"Index,Text\\n1,\\\"See Smyth 349, g. The cardinals from 5 to 199 are indeclinable except for the first (units) numeral in 13 and 14  (3 and 4 respectively). Cardinals 200 and up (and all Ordinal #'s) follow the 1st and 2nd Declension Adjective Tables.\\\"\\n2,\\\"See Smyth 349, D.  for uses of  δύο, δυοῖν (and δυεῖν) with gen and dat plurals\\\"\\n3,\\\"See Smyth 349, D. for irregular uses of Cardinals as (Pro)nouns and as Adjectives\\\"\"","module.exports = \"Form,Headword,Number,Case,Gender,Type,Primary,Footnote\\nδύο,δύο (2),dual,accusative,masculine feminine neuter,regular,primary,3\\nδυοῖν,δύο (2),dual,dative,masculine feminine neuter,regular,primary,2 3\\nδυοῖν,δύο (2),dual,genitive,masculine feminine neuter,regular,primary,2 3\\nδύο,δύο (2),dual,nominative,masculine feminine neuter,regular,primary,\\nμίαν,εἱς - μία - ἑν (1),singular,accusative,feminine,regular,primary,\\nμιᾷ,εἱς - μία - ἑν (1),singular,dative,feminine,regular,primary,\\nμιᾶς,εἱς - μία - ἑν (1),singular,genitive,feminine,regular,primary,\\nμία,εἱς - μία - ἑν (1),singular,nominative,feminine,regular,primary,\\nἕνα,εἱς - μία - ἑν (1),singular,accusative,masculine,regular,primary,\\nἑνί,εἱς - μία - ἑν (1),singular,dative,masculine,regular,primary,\\nἑνός,εἱς - μία - ἑν (1),singular,genitive,masculine,regular,primary,\\nεἷς,εἱς - μία - ἑν (1),singular,nominative,masculine,regular,primary,\\nἕν,εἱς - μία - ἑν (1),singular,accusative,neuter,regular,primary,\\nἑνί,εἱς - μία - ἑν (1),singular,dative,neuter,regular,primary,\\nἑνός,εἱς - μία - ἑν (1),singular,genitive,neuter,regular,primary,\\nἑν,εἱς - μία - ἑν (1),singular,nominative,neuter,regular,primary,\\nτέτταρας,τέτταρες - τέτταρα (4),plural,accusative,masculine feminine,regular,primary,\\nτέτταρσι,τέτταρες - τέτταρα (4),plural,dative,masculine feminine,regular,primary,\\nτέτταρσιν,τέτταρες - τέτταρα (4),plural,dative,masculine feminine,regular,primary,\\nτεττάρων,τέτταρες - τέτταρα (4),plural,genitive,masculine feminine,regular,primary,\\nτέτταρες,τέτταρες - τέτταρα (4),plural,nominative,masculine feminine,regular,primary,\\nτέτταρα,τέτταρες - τέτταρα (4),plural,accusative,neuter,regular,primary,\\nτέτταρσι,τέτταρες - τέτταρα (4),plural,dative,neuter,regular,primary,\\nτέτταρσιν,τέτταρες - τέτταρα (4),plural,dative,neuter,regular,primary,\\nτεττάρων,τέτταρες - τέτταρα (4),plural,genitive,neuter,regular,primary,\\nτέτταρα,τέτταρες - τέτταρα (4),plural,nominative,neuter,regular,primary,\\nτρεῖς,τρεῖς - τρία (3),plural,accusative,masculine feminine,regular,primary,\\nτρισί,τρεῖς - τρία (3),plural,dative,masculine feminine,regular,primary,\\nτρισίν,τρεῖς - τρία (3),plural,dative,masculine feminine,regular,primary,\\nτριῶν,τρεῖς - τρία (3),plural,genitive,masculine feminine,regular,primary,\\nτρεῖς,τρεῖς - τρία (3),plural,nominative,masculine feminine,regular,primary,\\nτρία,τρεῖς - τρία (3),plural,accusative,neuter,regular,primary,\\nτρισί,τρεῖς - τρία (3),plural,dative,neuter,regular,primary,\\nτρισίν,τρεῖς - τρία (3),plural,dative,neuter,regular,primary,\\nτριῶν,τρεῖς - τρία (3),plural,genitive,neuter,regular,primary,\\nτρία,τρεῖς - τρία (3),plural,nominative,neuter,regular,primary,\"","module.exports = \"Index,Text\\n1,enclitic\\n2,not enclitic\\n3,enclitic\\n4,The reflexive pronouns are formed by compounding the stems of the personal pronouns with the oblique cases of αὐτός\\n5,\\\"The possessive pronouns, formed from the stems of the personal pronouns, are declined like ἀγαθός, ἄξιος (see Smyth 287)\\\"\\n\"","module.exports = \"Form,Headword,Class,Person,Number,Case,Gender,Type,Primary,Dialects,Footnote\\nτούτω,οὗτος,demonstrative,,dual,accusative,masculine feminine neuter,regular,primary,,\\nτούτοιν,οὗτος,demonstrative,,dual,dative,masculine feminine neuter,regular,primary,,\\nτούτοιν,οὗτος,demonstrative,,dual,genitive,masculine feminine neuter,regular,primary,,\\nτούτω,οὗτος,demonstrative,,dual,nominative,masculine feminine neuter,regular,primary,,\\nταύτᾱς,οὗτος,demonstrative,,plural,accusative,feminine,regular,primary,,\\nταύταις,οὗτος,demonstrative,,plural,dative,feminine,regular,primary,,\\nτούτων,οὗτος,demonstrative,,plural,genitive,feminine,regular,primary,,\\nαὗται,οὗτος,demonstrative,,plural,nominative,feminine,regular,primary,,\\nτούτους,οὗτος,demonstrative,,plural,accusative,masculine,regular,primary,,\\nτούτοις,οὗτος,demonstrative,,plural,dative,masculine,regular,primary,,\\nτούτων,οὗτος,demonstrative,,plural,genitive,masculine,regular,primary,,\\nοὗτοι,οὗτος,demonstrative,,plural,nominative,masculine,regular,primary,,\\nταῦτα,οὗτος,demonstrative,,plural,accusative,neuter,regular,primary,,\\nτούτοις,οὗτος,demonstrative,,plural,dative,neuter,regular,primary,,\\nτούτων,οὗτος,demonstrative,,plural,genitive,neuter,regular,primary,,\\nταῦτα,οὗτος,demonstrative,,plural,nominative,neuter,regular,primary,,\\nταύτην,οὗτος,demonstrative,,singular,accusative,feminine,regular,primary,,\\nταύτῃ,οὗτος,demonstrative,,singular,dative,feminine,regular,primary,,\\nταύτης,οὗτος,demonstrative,,singular,genitive,feminine,regular,primary,,\\nαὕτη,οὗτος,demonstrative,,singular,nominative,feminine,regular,primary,,\\nτοῦτον,οὗτος,demonstrative,,singular,accusative,masculine,regular,primary,,\\nτούτῳ,οὗτος,demonstrative,,singular,dative,masculine,regular,primary,,\\nτούτου,οὗτος,demonstrative,,singular,genitive,masculine,regular,primary,,\\nοὗτος,οὗτος,demonstrative,,singular,nominative,masculine,regular,primary,,\\nτοῦτο,οὗτος,demonstrative,,singular,accusative,neuter,regular,primary,,\\nτούτῳ,οὗτος,demonstrative,,singular,dative,neuter,regular,primary,,\\nτούτου,οὗτος,demonstrative,,singular,genitive,neuter,regular,primary,,\\nτοῦτο,οὗτος,demonstrative,,singular,nominative,neuter,regular,primary,,\\nἐκείνω,ἐκεῖνος,demonstrative,,dual,accusative,masculine feminine neuter,regular,primary,,\\nἐκείνοιν,ἐκεῖνος,demonstrative,,dual,dative,masculine feminine neuter,regular,primary,,\\nἐκείνοιν,ἐκεῖνος,demonstrative,,dual,genitive,masculine feminine neuter,regular,primary,,\\nἐκείνω,ἐκεῖνος,demonstrative,,dual,nominative,masculine feminine neuter,regular,primary,,\\nἐκείνᾱς,ἐκεῖνος,demonstrative,,plural,accusative,feminine,regular,primary,,\\nἐκείναις,ἐκεῖνος,demonstrative,,plural,dative,feminine,regular,primary,,\\nἐκείνων,ἐκεῖνος,demonstrative,,plural,genitive,feminine,regular,primary,,\\nἐκεῖναι,ἐκεῖνος,demonstrative,,plural,nominative,feminine,regular,primary,,\\nἐκείνους,ἐκεῖνος,demonstrative,,plural,accusative,masculine,regular,primary,,\\nἐκείνοις,ἐκεῖνος,demonstrative,,plural,dative,masculine,regular,primary,,\\nἐκείνων,ἐκεῖνος,demonstrative,,plural,genitive,masculine,regular,primary,,\\nἐκεῖνοι,ἐκεῖνος,demonstrative,,plural,nominative,masculine,regular,primary,,\\nἐκεῖνα,ἐκεῖνος,demonstrative,,plural,accusative,neuter,regular,primary,,\\nἐκείνοις,ἐκεῖνος,demonstrative,,plural,dative,neuter,regular,primary,,\\nἐκείνων,ἐκεῖνος,demonstrative,,plural,genitive,neuter,regular,primary,,\\nἐκεῖνα,ἐκεῖνος,demonstrative,,plural,nominative,neuter,regular,primary,,\\nἐκείνην,ἐκεῖνος,demonstrative,,singular,accusative,feminine,regular,primary,,\\nἐκείνῃ,ἐκεῖνος,demonstrative,,singular,dative,feminine,regular,primary,,\\nἐκείνης,ἐκεῖνος,demonstrative,,singular,genitive,feminine,regular,primary,,\\nἐκείνη,ἐκεῖνος,demonstrative,,singular,nominative,feminine,regular,primary,,\\nἐκεῖνον,ἐκεῖνος,demonstrative,,singular,accusative,masculine,regular,primary,,\\nἐκείνῳ,ἐκεῖνος,demonstrative,,singular,dative,masculine,regular,primary,,\\nἐκείνου,ἐκεῖνος,demonstrative,,singular,genitive,masculine,regular,primary,,\\nἐκεῖνος,ἐκεῖνος,demonstrative,,singular,nominative,masculine,regular,primary,,\\nἐκεῖνο,ἐκεῖνος,demonstrative,,singular,accusative,neuter,regular,primary,,\\nἐκείνῳ,ἐκεῖνος,demonstrative,,singular,dative,neuter,regular,primary,,\\nἐκείνου,ἐκεῖνος,demonstrative,,singular,genitive,neuter,regular,primary,,\\nἐκεῖνο,ἐκεῖνος,demonstrative,,singular,nominative,neuter,regular,primary,,\\nτώδε,ὅδε,demonstrative,,dual,accusative,masculine feminine neuter,regular,primary,,\\nτοῖνδε,ὅδε,demonstrative,,dual,dative,masculine feminine neuter,regular,primary,,\\nτοῖνδε,ὅδε,demonstrative,,dual,genitive,masculine feminine neuter,regular,primary,,\\nτώδε,ὅδε,demonstrative,,dual,nominative,masculine feminine neuter,regular,primary,,\\nτά̄σδε,ὅδε,demonstrative,,plural,accusative,feminine,regular,primary,,\\nταῖσδε,ὅδε,demonstrative,,plural,dative,feminine,regular,primary,,\\nτῶνδε,ὅδε,demonstrative,,plural,genitive,feminine,regular,primary,,\\nαἵδε,ὅδε,demonstrative,,plural,nominative,feminine,regular,primary,,\\nτούσδε,ὅδε,demonstrative,,plural,accusative,masculine,regular,primary,,\\nτοῖσδε,ὅδε,demonstrative,,plural,dative,masculine,regular,primary,,\\nτῶνδε,ὅδε,demonstrative,,plural,genitive,masculine,regular,primary,,\\nοἵδε,ὅδε,demonstrative,,plural,nominative,masculine,regular,primary,,\\nτάδε,ὅδε,demonstrative,,plural,accusative,neuter,regular,primary,,\\nτοῖσδε,ὅδε,demonstrative,,plural,dative,neuter,regular,primary,,\\nτῶνδε,ὅδε,demonstrative,,plural,genitive,neuter,regular,primary,,\\nτάδε,ὅδε,demonstrative,,plural,nominative,neuter,regular,primary,,\\nτήνδε,ὅδε,demonstrative,,singular,accusative,feminine,regular,primary,,\\nτῇδε,ὅδε,demonstrative,,singular,dative,feminine,regular,primary,,\\nτῆσδε,ὅδε,demonstrative,,singular,genitive,feminine,regular,primary,,\\nἥδε,ὅδε,demonstrative,,singular,nominative,feminine,regular,primary,,\\nτόνδε,ὅδε,demonstrative,,singular,accusative,masculine,regular,primary,,\\nτῷδε,ὅδε,demonstrative,,singular,dative,masculine,regular,primary,,\\nτοῦδε,ὅδε,demonstrative,,singular,genitive,masculine,regular,primary,,\\nὅδε,ὅδε,demonstrative,,singular,nominative,masculine,regular,primary,,\\nτόδε,ὅδε,demonstrative,,singular,accusative,neuter,regular,primary,,\\nτῷδε,ὅδε,demonstrative,,singular,dative,neuter,regular,primary,,\\nτοῦδε,ὅδε,demonstrative,,singular,genitive,neuter,regular,primary,,\\nτόδε,ὅδε,demonstrative,,singular,nominative,neuter,regular,primary,,\\nὥτινε,,general relative,,dual,accusative,masculine feminine neuter,regular,primary,,\\nοἷντινοιν,,general relative,,dual,dative,masculine feminine neuter,regular,primary,,\\nοἷντινοιν,,general relative,,dual,genitive,masculine feminine neuter,regular,primary,,\\nὥτινε,,general relative,,dual,nominative,masculine feminine neuter,regular,primary,,\\nἅ̄στινας,,general relative,,plural,accusative,feminine,regular,primary,,\\nαἷστισι,,general relative,,plural,dative,feminine,regular,primary,,\\nαἷστισιν,,general relative,,plural,dative,feminine,regular,primary,,\\nὁτέοισι,,general relative,,plural,dative,feminine,irregular,,\\\"Homer,Herodotus\\\",\\nὧντινων,,general relative,,plural,genitive,feminine,regular,primary,,\\nὅτεων,,general relative,,plural,genitive,feminine,irregular,,\\\"Homer,Herodotus\\\",\\nαἵτινες,,general relative,,plural,nominative,feminine,regular,primary,,\\nοὕστινας,,general relative,,plural,accusative,masculine,regular,primary,,\\nὅτινας,,general relative,,plural,accusative,masculine,irregular,,Homer,\\nοἷστισι,,general relative,,plural,dative,masculine,regular,primary,,\\nοἷστισιν,,general relative,,plural,dative,masculine,regular,primary,,\\nὅτοις,,general relative,,plural,dative,masculine,regular,primary,,\\nὧντινων,,general relative,,plural,genitive,masculine,regular,primary,,\\nὅτων,,general relative,,plural,genitive,masculine,regular,primary,,\\nοἵτινες,,general relative,,plural,nominative,masculine,regular,primary,,\\nἅτινα,,general relative,,plural,accusative,neuter,regular,primary,,\\nἅττα,,general relative,,plural,accusative,neuter,regular,primary,,\\nἅσσα,,general relative,,plural,accusative,neuter,irregular,,\\\"Homer,Herodotus\\\",\\nοἷστισι,,general relative,,plural,dative,neuter,regular,primary,,\\nοἷστισιν,,general relative,,plural,dative,neuter,regular,primary,,\\nὅτοις,,general relative,,plural,dative,neuter,regular,primary,,\\nὧντινων,,general relative,,plural,genitive,neuter,regular,primary,,\\nὅτων,,general relative,,plural,genitive,neuter,regular,primary,,\\nἅτινα,,general relative,,plural,nominative,neuter,regular,primary,,\\nἅττα,,general relative,,plural,nominative,neuter,regular,primary,,\\nἅσσα,,general relative,,plural,nominative,neuter,irregular,,\\\"Homer,Herodotus\\\",\\nἥντινα,,general relative,,singular,accusative,feminine,regular,primary,,\\nᾗτινι,,general relative,,singular,dative,feminine,regular,primary,,\\nὅτεῳ,,general relative,,singular,dative,feminine,irregular,,\\\"Homer,Herodotus\\\",\\nἧστινος,,general relative,,singular,genitive,feminine,regular,primary,,\\nὅττεο,,general relative,,singular,genitive,feminine,irregular,,Homer,\\nὅττευ,,general relative,,singular,genitive,feminine,irregular,,Homer,\\nὅτευ,,general relative,,singular,genitive,feminine,irregular,,\\\"Homer,Herodotus\\\",\\nἥτις,,general relative,,singular,nominative,feminine,regular,primary,,\\nὅντινα,,general relative,,singular,accusative,masculine,regular,primary,,\\nὅτινα,,general relative,,singular,accusative,masculine,irregular,,Homer,\\nᾧτινι,,general relative,,singular,dative,masculine,regular,primary,,\\nὅτῳ,,general relative,,singular,dative,masculine,regular,primary,,\\nοὗτινος,,general relative,,singular,genitive,masculine,regular,primary,,\\nὅτου,,general relative,,singular,genitive,masculine,regular,primary,,\\nὅστις,,general relative,,singular,nominative,masculine,regular,primary,,\\nὅτις,,general relative,,singular,nominative,masculine,irregular,,Homer,\\nὅ τι,,general relative,,singular,accusative,neuter,regular,primary,,\\nὅ ττι,,general relative,,singular,accusative,neuter,irregular,,Homer,\\nᾧτινι,,general relative,,singular,dative,neuter,regular,primary,,\\nὅτῳ,,general relative,,singular,dative,neuter,regular,primary,,\\nοὗτινος,,general relative,,singular,genitive,neuter,regular,primary,,\\nὅτου,,general relative,,singular,genitive,neuter,regular,primary,,\\nὅ τι,,general relative,,singular,nominative,neuter,regular,primary,,\\nὅ ττι,,general relative,,singular,nominative,neuter,irregular,,Homer,\\nτινέ,,indefinite,,dual,accusative,masculine feminine,regular,primary,,\\nτινοῖν,,indefinite,,dual,dative,masculine feminine,regular,primary,,\\nτινοῖν,,indefinite,,dual,genitive,masculine feminine,regular,primary,,\\nτινέ,,indefinite,,dual,nominative,masculine feminine,regular,primary,,\\nτινέ,,indefinite,,dual,vocative,masculine feminine,regular,primary,,\\nτινέ,,indefinite,,dual,accusative,neuter,regular,primary,,\\nτινοῖν,,indefinite,,dual,dative,neuter,regular,primary,,\\nτινοῖν,,indefinite,,dual,genitive,neuter,regular,primary,,\\nτινέ,,indefinite,,dual,nominative,neuter,regular,primary,,\\nτινέ,,indefinite,,dual,vocative,neuter,regular,primary,,\\nτινάς,,indefinite,,plural,accusative,masculine feminine,regular,primary,,\\nτισί,,indefinite,,plural,dative,masculine feminine,regular,primary,,\\nτισίν,,indefinite,,plural,dative,masculine feminine,regular,primary,,\\nτινῶν,,indefinite,,plural,genitive,masculine feminine,regular,primary,,\\nτινές,,indefinite,,plural,nominative,masculine feminine,regular,primary,,\\nτινά,,indefinite,,plural,accusative,neuter,regular,primary,,\\nἄττα,,indefinite,,plural,accusative,neuter,regular,,,2\\nτισί,,indefinite,,plural,dative,neuter,regular,primary,,\\nτισίν,,indefinite,,plural,dative,neuter,regular,primary,,\\nτινῶν,,indefinite,,plural,genitive,neuter,regular,primary,,\\nτινά,,indefinite,,plural,nominative,neuter,regular,primary,,\\nἄττα,,indefinite,,plural,nominative,neuter,regular,,,2\\nτινά,,indefinite,,singular,accusative,masculine feminine,regular,primary,,\\nἄττα,,indefinite,,singular,accusative,masculine feminine,regular,,,2\\nτινί,,indefinite,,singular,dative,masculine feminine,regular,primary,,\\nτῳ,,indefinite,,singular,dative,masculine feminine,regular,primary,,\\nτινός,,indefinite,,singular,genitive,masculine feminine,regular,primary,,\\nτου,,indefinite,,singular,genitive,masculine feminine,regular,primary,,\\nτις,,indefinite,,singular,nominative,masculine feminine,regular,primary,,\\nτι,,indefinite,,singular,accusative,neuter,regular,primary,,\\nτινί,,indefinite,,singular,dative,neuter,regular,primary,,\\nτῳ,,indefinite,,singular,dative,neuter,regular,primary,,\\nτινός,,indefinite,,singular,genitive,neuter,regular,primary,,\\nτου,,indefinite,,singular,genitive,neuter,regular,primary,,\\nτι,,indefinite,,singular,nominative,neuter,regular,primary,,\\nαὐτά,,intensive,,dual,accusative,feminine,regular,primary,,\\nαὐταῖν,,intensive,,dual,dative,feminine,regular,primary,,\\nαὐταῖν,,intensive,,dual,genitive,feminine,regular,primary,,\\nαὐτά,,intensive,,dual,nominative,feminine,regular,primary,,\\nαὐτώ,,intensive,,dual,accusative,masculine,regular,primary,,\\nαὐτοῖν,,intensive,,dual,dative,masculine,regular,primary,,\\nαὐτοῖν,,intensive,,dual,genitive,masculine,regular,primary,,\\nαὐτώ,,intensive,,dual,nominative,masculine,regular,primary,,\\nαὐτώ,,intensive,,dual,accusative,neuter,regular,primary,,\\nαὐτοῖν,,intensive,,dual,dative,neuter,regular,primary,,\\nαὐτοῖν,,intensive,,dual,genitive,neuter,regular,primary,,\\nαὐτώ,,intensive,,dual,nominative,neuter,regular,primary,,\\nαὐτά̄ς,,intensive,,plural,accusative,feminine,regular,primary,,\\nαὐταῖς,,intensive,,plural,dative,feminine,regular,primary,,\\nαὐτῶν,,intensive,,plural,genitive,feminine,regular,primary,,\\nαὐτέων,,intensive,,plural,genitive,feminine,irregular,,Herodotus,\\nαὐταί,,intensive,,plural,nominative,feminine,regular,primary,,\\nαὐτούς,,intensive,,plural,accusative,masculine,regular,primary,,\\nαὐτοῖς,,intensive,,plural,dative,masculine,regular,primary,,\\nαὐτῶν,,intensive,,plural,genitive,masculine,regular,primary,,\\nαὐτέων,,intensive,,plural,genitive,masculine,irregular,,Herodotus,\\nαὐτοί,,intensive,,plural,nominative,masculine,regular,primary,,\\nαὐτά,,intensive,,plural,accusative,neuter,regular,primary,,\\nαὐτοῖς,,intensive,,plural,dative,neuter,regular,primary,,\\nαὐτῶν,,intensive,,plural,genitive,neuter,regular,primary,,\\nαὐτέων,,intensive,,plural,genitive,neuter,irregular,,Herodotus,\\nαὐτά,,intensive,,plural,nominative,neuter,regular,primary,,\\nαὐτήν,,intensive,,singular,accusative,feminine,regular,primary,,\\nαὐτῇ,,intensive,,singular,dative,feminine,regular,primary,,\\nαὐτῆς,,intensive,,singular,genitive,feminine,regular,primary,,\\nαὐτή,,intensive,,singular,nominative,feminine,regular,primary,,\\nαὐτόν,,intensive,,singular,accusative,masculine,regular,primary,,\\nαὐτῷ,,intensive,,singular,dative,masculine,regular,primary,,\\nαὐτοῦ,,intensive,,singular,genitive,masculine,regular,primary,,\\nαὐτός,,intensive,,singular,nominative,masculine,regular,primary,,\\nαὐτό,,intensive,,singular,accusative,neuter,regular,primary,,\\nαὐτῷ,,intensive,,singular,dative,neuter,regular,primary,,\\nαὐτοῦ,,intensive,,singular,genitive,neuter,regular,primary,,\\nαὐτό,,intensive,,singular,nominative,neuter,regular,primary,,\\nτίνε,,interrogative,,dual,accusative,masculine feminine,regular,primary,,\\nτίνοιν,,interrogative,,dual,dative,masculine feminine,regular,primary,,\\nτίνοιν,,interrogative,,dual,genitive,masculine feminine,regular,primary,,\\nτίνε,,interrogative,,dual,nominative,masculine feminine,regular,primary,,\\nτίνε,,interrogative,,dual,vocative,masculine feminine,regular,primary,,\\nτίνε,,interrogative,,dual,accusative,neuter,regular,primary,,\\nτίνοιν,,interrogative,,dual,dative,neuter,regular,primary,,\\nτίνοιν,,interrogative,,dual,genitive,neuter,regular,primary,,\\nτίνε,,interrogative,,dual,nominative,neuter,regular,primary,,\\nτίνε,,interrogative,,dual,vocative,neuter,regular,primary,,\\nτίνας,,interrogative,,plural,accusative,masculine feminine,regular,primary,,\\nτίσι,,interrogative,,plural,dative,masculine feminine,regular,primary,,\\nτίσιv,,interrogative,,plural,dative,masculine feminine,regular,primary,,\\nτίνων,,interrogative,,plural,genitive,masculine feminine,regular,primary,,\\nτίνες,,interrogative,,plural,nominative,masculine feminine,regular,primary,,\\nτίνα,,interrogative,,plural,accusative,neuter,regular,primary,,\\nτίσι,,interrogative,,plural,dative,neuter,regular,primary,,\\nτίσιv,,interrogative,,plural,dative,neuter,regular,primary,,\\nτίνων,,interrogative,,plural,genitive,neuter,regular,primary,,\\nτίνα,,interrogative,,plural,nominative,neuter,regular,primary,,\\nτίνα,,interrogative,,singular,accusative,masculine feminine,regular,primary,,\\nτίνι,,interrogative,,singular,dative,masculine feminine,regular,primary,,\\nτῷ,,interrogative,,singular,dative,masculine feminine,regular,primary,,\\nτίνος,,interrogative,,singular,genitive,masculine feminine,regular,primary,,\\nτοῦ,,interrogative,,singular,genitive,masculine feminine,regular,primary,,\\nτίς,,interrogative,,singular,nominative,masculine feminine,regular,primary,,\\nτί,,interrogative,,singular,accusative,neuter,regular,primary,,\\nτίνι,,interrogative,,singular,dative,neuter,regular,primary,,\\nτῷ,,interrogative,,singular,dative,neuter,regular,primary,,\\nτίνος,,interrogative,,singular,genitive,neuter,regular,primary,,\\nτοῦ,,interrogative,,singular,genitive,neuter,regular,primary,,\\nτί,,interrogative,,singular,nominative,neuter,regular,primary,,\\nνώ,,personal,1st,dual,accusative,,regular,primary,,\\nνῷν,,personal,1st,dual,dative,,regular,primary,,\\nνῷν,,personal,1st,dual,genitive,,regular,primary,,\\nνώ,,personal,1st,dual,nominative,,regular,primary,,\\nσφώ,,personal,2nd,dual,accusative,,regular,primary,,\\nσφῷν,,personal,2nd,dual,dative,,regular,primary,,\\nσφῷν,,personal,2nd,dual,genitive,,regular,primary,,\\nσφώ,,personal,2nd,dual,nominative,,regular,primary,,\\nἡμᾶς,,personal,1st,plural,accusative,,regular,primary,,\\nἡμῖν,,personal,1st,plural,dative,,regular,primary,,\\nἡμῶν,,personal,1st,plural,genitive,,regular,primary,,\\nἡμεῖς,,personal,1st,plural,nominative,,regular,primary,,\\nὑμᾶς,,personal,2nd,plural,accusative,,regular,primary,,\\nὑμῖν,,personal,2nd,plural,dative,,regular,primary,,\\nὑμῶν,,personal,2nd,plural,genitive,,regular,primary,,\\nὑμεῖς,,personal,2nd,plural,nominative,,regular,primary,,\\nσφᾶς,,personal,3rd,plural,accusative,,regular,primary,,\\nσφίσι,,personal,3rd,plural,dative,,regular,primary,,\\nσφίσιν,,personal,3rd,plural,dative,,regular,primary,,\\nσφῶν,,personal,3rd,plural,genitive,,regular,primary,,\\nσφεῖς,,personal,3rd,plural,nominative,,regular,primary,,\\nἐμέ,,personal,1st,singular,accusative,,regular,primary,,\\nμε,,personal,1st,singular,accusative,,regular,primary,,3\\nἐμοί,,personal,1st,singular,dative,,regular,primary,,\\nμοι,,personal,1st,singular,dative,,regular,primary,,3\\nἐμοῦ,,personal,1st,singular,genitive,,regular,primary,,\\nμου,,personal,1st,singular,genitive,,regular,primary,,3\\nἐγώ,,personal,1st,singular,nominative,,regular,primary,,\\nσέ,,personal,2nd,singular,accusative,,regular,primary,,\\nσε,,personal,2nd,singular,accusative,,regular,primary,,3\\nσοί,,personal,2nd,singular,dative,,regular,primary,,\\nσοι,,personal,2nd,singular,dative,,regular,primary,,3\\nσοῦ,,personal,2nd,singular,genitive,,regular,primary,,\\nσου,,personal,2nd,singular,genitive,,regular,primary,,3\\nσύ,,personal,2nd,singular,nominative,,regular,primary,,\\nἕ,,personal,3rd,singular,accusative,,regular,primary,,\\nἑ,,personal,3rd,singular,accusative,,regular,primary,,3\\nοἷ,,personal,3rd,singular,dative,,regular,primary,,\\nοἱ,,personal,3rd,singular,dative,,regular,primary,,3\\nοὗ,,personal,3rd,singular,genitive,,regular,primary,,\\nοὑ,,personal,3rd,singular,genitive,,regular,primary,,3\\n-,,personal,3rd,singular,nominative,,regular,primary,,\\nἀλλήλᾱ,,reciprocal,,dual,accusative,feminine,regular,primary,,\\nἀλλήλαιν,,reciprocal,,dual,dative,feminine,regular,primary,,\\nἀλλήλαιν,,reciprocal,,dual,genitive,feminine,regular,primary,,\\nἀλλήλω,,reciprocal,,dual,accusative,masculine,regular,primary,,\\nἀλλήλοιν,,reciprocal,,dual,dative,masculine,regular,primary,,\\nἀλλήλοιν,,reciprocal,,dual,genitive,masculine,regular,primary,,\\nἀλλήλω,,reciprocal,,dual,accusative,neuter,regular,primary,,\\nἀλλήλοιν,,reciprocal,,dual,dative,neuter,regular,primary,,\\nἀλλήλοιν,,reciprocal,,dual,genitive,neuter,regular,primary,,\\nἀλλήλᾱς,,reciprocal,,plural,accusative,feminine,regular,primary,,\\nἀλλήλαις,,reciprocal,,plural,dative,feminine,regular,primary,,\\nἀλλήλων,,reciprocal,,plural,genitive,feminine,regular,primary,,\\nἀλλήλους,,reciprocal,,plural,accusative,masculine,regular,primary,,\\nἀλλήλοις,,reciprocal,,plural,dative,masculine,regular,primary,,\\nἀλλήλων,,reciprocal,,plural,genitive,masculine,regular,primary,,\\nἄλληλα,,reciprocal,,plural,accusative,neuter,regular,primary,,\\nἀλλήλοις,,reciprocal,,plural,dative,neuter,regular,primary,,\\nἀλλήλων,,reciprocal,,plural,genitive,neuter,regular,primary,,\\nἡμᾶς,,reflexive,1st,plural,accusative,feminine,regular,primary,,\\nαὐτά̄ς,,reflexive,1st,plural,accusative,feminine,regular,primary,,\\nἡμῖν,,reflexive,1st,plural,dative,feminine,regular,primary,,\\nαὐταῖς,,reflexive,1st,plural,dative,feminine,regular,primary,,\\nἡμῶν,,reflexive,1st,plural,genitive,feminine,regular,primary,,\\nαὐτῶν,,reflexive,1st,plural,genitive,feminine,regular,primary,,\\nὑ̄μᾶς,,reflexive,2nd,plural,accusative,feminine,regular,primary,,\\nαὐτά̄ς,,reflexive,2nd,plural,accusative,feminine,regular,primary,,\\nὑ̄μῖν,,reflexive,2nd,plural,dative,feminine,regular,primary,,\\nαὐταῖς,,reflexive,2nd,plural,dative,feminine,regular,primary,,\\nὑ̄μῶν,,reflexive,2nd,plural,genitive,feminine,regular,primary,,\\nαὐτῶν,,reflexive,2nd,plural,genitive,feminine,regular,primary,,\\nἑαυτά̄ς,,reflexive,3rd,plural,accusative,feminine,regular,primary,,\\nσφᾶς,,reflexive,3rd,plural,accusative,feminine,regular,primary,,\\nαὑτά̄ς,,reflexive,3rd,plural,accusative,feminine,regular,primary,,\\nἑαυταῖς,,reflexive,3rd,plural,dative,feminine,regular,primary,,\\nσφίσιν,,reflexive,3rd,plural,dative,feminine,regular,primary,,\\nαὑταῖς,,reflexive,3rd,plural,dative,feminine,regular,primary,,\\nἑαυτῶν,,reflexive,3rd,plural,genitive,feminine,regular,primary,,\\nσφῶν,,reflexive,3rd,plural,genitive,feminine,regular,primary,,\\nαὑτῶν,,reflexive,3rd,plural,genitive,feminine,regular,primary,,\\nἡμᾶς,,reflexive,1st,plural,accusative,masculine,regular,primary,,\\nαὐτούς,,reflexive,1st,plural,accusative,masculine,regular,primary,,\\nἡμῖν,,reflexive,1st,plural,dative,masculine,regular,primary,,\\nαὐτοῖς,,reflexive,1st,plural,dative,masculine,regular,primary,,\\nἡμῶν,,reflexive,1st,plural,genitive,masculine,regular,primary,,\\nαὐτῶν,,reflexive,1st,plural,genitive,masculine,regular,primary,,\\nὑ̄μᾶς,,reflexive,2nd,plural,accusative,masculine,regular,primary,,\\nαὐτούς,,reflexive,2nd,plural,accusative,masculine,regular,primary,,\\nὑ̄μῖν,,reflexive,2nd,plural,dative,masculine,regular,primary,,\\nαὐτοῖς,,reflexive,2nd,plural,dative,masculine,regular,primary,,\\nὑ̄μῶν,,reflexive,2nd,plural,genitive,masculine,regular,primary,,\\nαὐτῶν,,reflexive,2nd,plural,genitive,masculine,regular,primary,,\\nἑαυτούς,,reflexive,3rd,plural,accusative,masculine,regular,primary,,\\nσφᾶς,,reflexive,3rd,plural,accusative,masculine,regular,primary,,\\nαὑτούς,,reflexive,3rd,plural,accusative,masculine,regular,primary,,\\nἑαυτοῖς,,reflexive,3rd,plural,dative,masculine,regular,primary,,\\nσφίσιν,,reflexive,3rd,plural,dative,masculine,regular,primary,,\\nαὑτοῖς,,reflexive,3rd,plural,dative,masculine,regular,primary,,\\nἑαυτῶν,,reflexive,3rd,plural,genitive,masculine,regular,primary,,\\nσφῶν,,reflexive,3rd,plural,genitive,masculine,regular,primary,,\\nαὑτῶν,,reflexive,3rd,plural,genitive,masculine,regular,primary,,\\nἑαυτά,,reflexive,3rd,plural,accusative,neuter,regular,primary,,\\nσφέα,,reflexive,3rd,plural,accusative,neuter,regular,primary,,\\nαὑτά,,reflexive,3rd,plural,accusative,neuter,regular,primary,,\\nἑαυτοῖς,,reflexive,3rd,plural,dative,neuter,regular,primary,,\\nσφίσιν,,reflexive,3rd,plural,dative,neuter,regular,primary,,\\nαὑτοῖς,,reflexive,3rd,plural,dative,neuter,regular,primary,,\\nἑαυτῶν,,reflexive,3rd,plural,genitive,neuter,regular,primary,,\\nσφῶν,,reflexive,3rd,plural,genitive,neuter,regular,primary,,\\nαὑτῶν,,reflexive,3rd,plural,genitive,neuter,regular,primary,,\\nἐμαυτήν,,reflexive,1st,singular,accusative,feminine,regular,primary,,\\nἐμαυτῇ,,reflexive,1st,singular,dative,feminine,regular,primary,,\\nἐμαυτῆς,,reflexive,1st,singular,genitive,feminine,regular,primary,,\\nσεαυτήν,,reflexive,2nd,singular,accusative,feminine,regular,primary,,\\nσαυτήν,,reflexive,2nd,singular,accusative,feminine,regular,primary,,\\nσεαυτῇ,,reflexive,2nd,singular,dative,feminine,regular,primary,,\\nσαυτῇ,,reflexive,2nd,singular,dative,feminine,regular,primary,,\\nσεαυτῆς,,reflexive,2nd,singular,genitive,feminine,regular,primary,,\\nσαυτῆς,,reflexive,2nd,singular,genitive,feminine,regular,primary,,\\nἑαυτήν,,reflexive,3rd,singular,accusative,feminine,regular,primary,,\\nαὑτήν,,reflexive,3rd,singular,accusative,feminine,regular,primary,,\\nἑαυτῇ,,reflexive,3rd,singular,dative,feminine,regular,primary,,\\nαὑτῇ,,reflexive,3rd,singular,dative,feminine,regular,primary,,\\nἑαυτῆς,,reflexive,3rd,singular,genitive,feminine,regular,primary,,\\nαὑτῆς,,reflexive,3rd,singular,genitive,feminine,regular,primary,,\\nἐμαυτόν,,reflexive,1st,singular,accusative,masculine,regular,primary,,\\nἐμαυτῷ,,reflexive,1st,singular,dative,masculine,regular,primary,,\\nἐμαυτοῦ,,reflexive,1st,singular,genitive,masculine,regular,primary,,\\nσεαυτόν,,reflexive,2nd,singular,accusative,masculine,regular,primary,,\\nσαυτόν,,reflexive,2nd,singular,accusative,masculine,regular,primary,,\\nσεαυτῷ,,reflexive,2nd,singular,dative,masculine,regular,primary,,\\nσαυτῷ,,reflexive,2nd,singular,dative,masculine,regular,primary,,\\nσεαυτοῦ,,reflexive,2nd,singular,genitive,masculine,regular,primary,,\\nσαυτοῦ,,reflexive,2nd,singular,genitive,masculine,regular,primary,,\\nἑαυτόν,,reflexive,3rd,singular,accusative,masculine,regular,primary,,\\nαὑτόν,,reflexive,3rd,singular,accusative,masculine,regular,primary,,\\nἑαυτῷ,,reflexive,3rd,singular,dative,masculine,regular,primary,,\\nαὑτῷ,,reflexive,3rd,singular,dative,masculine,regular,primary,,\\nἑαυτοῦ,,reflexive,3rd,singular,genitive,masculine,regular,primary,,\\nαὑτοῦ,,reflexive,3rd,singular,genitive,masculine,regular,primary,,\\nἑαυτό,,reflexive,3rd,singular,accusative,neuter,regular,primary,,\\nαὑτό,,reflexive,3rd,singular,accusative,neuter,regular,primary,,\\nἑαυτῷ,,reflexive,3rd,singular,dative,neuter,regular,primary,,\\nαὑτῷ,,reflexive,3rd,singular,dative,neuter,regular,primary,,\\nἑαυτοῦ,,reflexive,3rd,singular,genitive,neuter,regular,primary,,\\nαὑτοῦ,,reflexive,3rd,singular,genitive,neuter,regular,primary,,\\nὥ,,relative,,dual,accusative,feminine,regular,primary,,\\nἅ̄,,relative,,dual,accusative,feminine,irregular,,Attic,\\nοἷν,,relative,,dual,dative,feminine,regular,primary,,\\nαἷν,,relative,,dual,dative,feminine,irregular,,Attic,\\nοἷν,,relative,,dual,genitive,feminine,regular,primary,,\\nαἷν,,relative,,dual,genitive,feminine,irregular,,Attic,\\nὥ,,relative,,dual,nominative,feminine,regular,primary,,\\nἅ̄,,relative,,dual,nominative,feminine,irregular,,Attic,\\nὥ,,relative,,dual,accusative,masculine,regular,primary,,\\nοἷν,,relative,,dual,dative,masculine,regular,primary,,\\nοἷν,,relative,,dual,genitive,masculine,regular,primary,,\\nὥ,,relative,,dual,nominative,masculine,regular,primary,,\\nὥ,,relative,,dual,accusative,neuter,regular,primary,,\\nοἷν,,relative,,dual,dative,neuter,regular,primary,,\\nοἷν,,relative,,dual,genitive,neuter,regular,primary,,\\nὥ,,relative,,dual,nominative,neuter,regular,primary,,\\nἅ̄ς,,relative,,plural,accusative,feminine,regular,primary,,\\nαἷς,,relative,,plural,dative,feminine,regular,primary,,\\nὧν,,relative,,plural,genitive,feminine,regular,primary,,\\nαἵ,,relative,,plural,nominative,feminine,regular,primary,,\\nοὕς,,relative,,plural,accusative,masculine,regular,primary,,\\nοἷς,,relative,,plural,dative,masculine,regular,primary,,\\nὧν,,relative,,plural,genitive,masculine,regular,primary,,\\nοἵ,,relative,,plural,nominative,masculine,regular,primary,,\\nἅ,,relative,,plural,accusative,neuter,regular,primary,,\\nοἷς,,relative,,plural,dative,neuter,regular,primary,,\\nὧν,,relative,,plural,genitive,neuter,regular,primary,,\\nἅ,,relative,,plural,nominative,neuter,regular,primary,,\\nἥν,,relative,,singular,accusative,feminine,regular,primary,,\\nᾗ,,relative,,singular,dative,feminine,regular,primary,,\\nἧς,,relative,,singular,genitive,feminine,regular,primary,,\\nἥ,,relative,,singular,nominative,feminine,regular,primary,,\\nὅν,,relative,,singular,accusative,masculine,regular,primary,,\\nᾧ,,relative,,singular,dative,masculine,regular,primary,,\\nοὗ,,relative,,singular,genitive,masculine,regular,primary,,\\nὅς,,relative,,singular,nominative,masculine,regular,primary,,\\nὅ,,relative,,singular,accusative,neuter,regular,primary,,\\nᾧ,,relative,,singular,dative,neuter,regular,primary,,\\nοὗ,,relative,,singular,genitive,neuter,regular,primary,,\\nὅ,,relative,,singular,nominative,neuter,regular,primary,,\"","module.exports = \"ID ref,Match order,Part of speech,Stem type,Voice,Mood,Tense,Lemma,Morph flags,Dialect\\nverbpdgm54,13,verb_participle,w_stem,active,,,,,\\nverbpdgm54,12,verb_participle,reg_fut,,,,,,\\nverbpdgm54,12,verb_participle,evw_pr,,,,,,\\nverbpdgm55,12,verb_participle,ww_pr,,,,,,\\nverbpdgm55,12,verb_participle,ew_fut,,,,,,\\nverbpdgm55,12,verb_participle,ew_pr,,,,,,\\nverbpdgm55,12,verb_participle,ow_pr,,,,,,\\nverbpdgm56,12,verb_participle,aw_pr,,,,,,\\nverbpdgm56,12,verb_participle,ajw_pr,,,,,,\\nverbpdgm56,12,verb_participle,aw_fut,,,,,,\\nverbpdgm57,12,verb_participle,aor2,,,,,,\\nverbpdgm57,14,verb_participle,irreg_mi,,,present,εἰμί,,\\nverbpdgm57,14,verb_participle,irreg_mi,,,present,εἶμι,,\\nverbpdgm58,12,verb_participle,aor1,,,,,,\\nverbpdgm59,12,verb_participle,ami_pr,,,,,,\\nverbpdgm59,12,verb_participle,ath_h_aor,,,,,,\\nverbpdgm59,12,verb_participle,ami_aor,,,,,,\\nverbpdgm59,12,verb_participle,irreg_mi,,,,,,\\nverbpdgm60,12,verb_participle,emi_pr,,,,,,\\nverbpdgm60,13,verb_participle,emi_aor,active,,,,,\\nverbpdgm60,12,verb_participle,aor_pass,,,,,,\\nverbpdgm60,11,verb_participle,aor2_pass,,,,,,\\nverbpdgm60,13,verb_participle,irreg_mi,active,,,,,\\nverbpdgm61,12,verb_participle,omi_pr,,,,,,\\nverbpdgm61,12,verb_participle,omi_aor,,,,,,\\nverbpdgm61,12,verb_participle,ath_w_aor,,,,,,\\nverbpdgm62,12,verb_participle,umi_pr,,,,,,\\nverbpdgm62,12,verb_participle,ath_u_aor,,,,,,\\nverbpdgm63,12,verb_participle,perf_act,,,,,,\\nverbpdgm64,12,verb_participle,perf2_act,,,,,,\\nverbpdgm65,13,verb_participle,w_stem,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,w_stem,middle,,,,,\\nverbpdgm65,13,verb_participle,aor2,middle,,,,,\\nverbpdgm65,13,verb_participle,aor1,middle,,,,,\\nverbpdgm65,13,verb_participle,reg_fut,middle,,,,,\\nverbpdgm65,13,verb_participle,ew_fut,middle,,,,,\\nverbpdgm65,12,verb_participle,fut_perf,,,,,,\\nverbpdgm65,13,verb_participle,ow_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,ow_pr,middle,,,,,\\nverbpdgm65,13,verb_participle,ew_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,ew_pr,middle,,,,,\\nverbpdgm65,13,verb_participle,evw_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,evw_pr,middle,,,,,\\nverbpdgm65,13,verb_participle,aw_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,aw_pr,middle,,,,,\\nverbpdgm65,13,verb_participle,ajw_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,ajw_pr,middle,,,,,\\nverbpdgm65,13,verb_participle,ow_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,ow_pr,middle,,,,,\\nverbpdgm65,13,verb_participle,emi_pr,middle,,,,,\\nverbpdgm65,13,verb_participle,emi_pr,passive,,,,,\\nverbpdgm65,13,verb_participle,emi_aor,middle,,,,,\\nverbpdgm65,13,verb_participle,irreg_mi,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,irreg_mi,middle,,,,,\\nverbpdgm65,13,verb_participle,omi_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,omi_pr,midle,,,,,\\nverbpdgm65,13,verb_participle,omi_aor,middle,,,,,\\nverbpdgm65,13,verb_participle,ami_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,ami_pr,middle,,,,,\\nverbpdgm65,13,verb_participle,ami_short,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,ami_short,middle,,,,,\\nverbpdgm65,13,verb_participle,ami_aor,middle,,,,,\\nverbpdgm65,13,verb_participle,umi_pr,mediopassive,,,,,\\nverbpdgm65,13,verb_participle,umi_pr,middle,,,,,\\nverbpdgm66,12,verb_participle,perfp_vow,,,,,,\\nverbpdgm66,12,verb_participle,perfp_d,,,,,,\\nverbpdgm66,12,verb_participle,perfp_mp,,,,,,\\nverbpdgm66,12,verb_participle,perfp_g,,,,,,\\nverbpdgm66,12,verb_participle,perfp_l,,,,,,\\nverbpdgm66,12,verb_participle,perfp_gx,,,,,,\\nverbpdgm66,12,verb_participle,perfp_p,,,,,,\\nverbpdgm66,12,verb_participle,perfp_n,,,,,,\\nverbpdgm66,12,verb_participle,perfp_un,,,,,,\\n\"","module.exports = \"Index,Text\\n1,\\\"With neuter plural subject, periphrastic forms are sometimes found in the indicative, but more commonly the 3rd singular form is used instead.\\\"\\n2,\\\"thus is late Greek with a neuter plural subject, but in classical Attic the 3rd singular form is used with neuter plural subject.\\\"\"","module.exports = \"ID ref,Match order,Part of speech,Stem type,Voice,Mood,Tense,Lemma,Morph flags,Dialect\\nverbpdgm1,2,verb,w_stem,active,,,,,\\nverbpdgm2,2,verb,w_stem,mediopassive,,,,,\\nverbpdgm2,2,verb,w_stem,middle,,,,,\\nverbpdgm3,1,verb,reg_fut,,,,,,\\nverbpdgm4,3,verb,reg_fut,,,,,contr,\\nverbpdgm3,1,verb,aw_fut,,,,,,\\nverbpdgm4,2,verb,aw_fut,,,,,contr,\\nverbpdgm3,1,verb,ew_fut,,,,,,\\nverbpdgm4,2,verb,ew_fut,,,,,contr,\\nverbpdgm5,3,verb,aw_fut,,,,,contr,doric\\nverbpdgm5,3,verb,aw_fut,,,,,contr,aeolic\\nverbpdgm6,1,verb,aor2,active,,,,,\\nverbpdgm7,1,verb,aor2,middle,,,,,\\nverbpdgm8,1,verb,aor1,active,,,,,\\nverbpdgm9,1,verb,aor1,middle,,,,,\\nverbpdgm10,1,verb,aor_pass,,,,,,\\nverbpdgm10,1,verb,aor2_pass,,,,,,\\nverbpdgm3,3,verb,aor_pass,passive,,future,,,\\nverbpdgm11,1,verb,perf_act,,,,,,\\nverbpdgm15,3,verb,perf_act,active,,pluperfect,,,\\nverbpdgm12,1,verb,,mediopassive,indicative,perfect,,,\\nverbpdgm12,1,verb,,mediopassive,infinitive,perfect,,,\\nverbpdgm13,1,verb,,mediopassive,subjunctive,perfect,,,\\nverbpdgm13,1,verb,,middle,subjunctive,perfect,,,\\nverbpdgm13,1,verb,,mediopassive,optative,perfect,,,\\nverbpdgm13,1,verb,,middle,optative,perfect,,,\\nverbpdgm13,1,verb,,mediopassive,imperative,perfect,,,\\nverbpdgm13,1,verb,,middle,imperative,perfect,,,\\nverbpdgm14,1,verb,,mediopassive,subjunctive,perfect,,,\\nverbpdgm14,1,verb,,middle,subjunctive,perfect,,,\\nverbpdgm14,1,verb,,mediopassive,optative,perfect,,,\\nverbpdgm14,1,verb,,middle,optative,perfect,,,\\nverbpdgm14,1,verb,,mediopassive,imperative,perfect,,,\\nverbpdgm14,1,verb,,middle,imperative,perfect,,,\\nverbpdgm15,1,verb,,mediopassive,indicative,pluperfect,,,\\nverbpdgm16,1,verb,fut_perf,,,,,,\\nverbpdgm17,1,verb,perf2_act,,,,,,\\nverbpdgm18,1,verb,ew_pr,active,,,,,\\nverbpdgm20,1,verb,ew_pr,mediopassive,,,,,\\nverbpdgm20,1,verb,ew_pr,middle,,,,,\\nverbpdgm19,1,verb,evw_pr,,,,,,\\nverbpdgm21,2,verb,evw_pr,mediopassive,,,,,\\nverbpdgm21,2,verb,evw_pr,middle,,,,,\\nverbpdgm22,2,verb,aw_pr,,,,,,\\nverbpdgm23,1,verb,ajw_pr,,,,,,\\nverbpdgm24,2,verb,aw_pr,mediopassive,,,,,\\nverbpdgm24,2,verb,aw_pr,middle,,,,,\\nverbpdgm25,2,verb,ajw_pr,mediopassive,,,,,\\nverbpdgm25,2,verb,ajw_pr,middle,,,,,\\nverbpdgm26,2,verb,ow_pr,active,,,,,\\nverbpdgm27,2,verb,ow_pr,mediopassive,,,,,\\nverbpdgm27,2,verb,ow_pr,middle,,,,,\\nverbpdgm26,2,verb,ww_pr,active,,,,,\\nverbpdgm27,2,verb,ww_pr,mediopassive,,,,,\\nverbpdgm27,2,verb,ww_pr,middle,,,,,\\nverbpdgm28,2,verb,emi_pr,active,,,,,\\nverbpdgm29,2,verb,emi_pr,mediopassive,,,,,\\nverbpdgm29,2,verb,emi_pr,middle,,,,,\\nverbpdgm30,2,verb,emi_or,active,,,,,\\nverbpdgm31,2,verb,emi_or,middle,,,,,\\nverbpdgm32,2,verb,,active,,,ἵημι,,\\nverbpdgm33,2,verb,,mediopassive,,,ἵημι,,\\nverbpdgm33,2,verb,,middle,,,ἵημι,,\\nverbpdgm34,3,verb,,acive,,aorist,ἵημι,,\\nverbpdgm35,3,verb,,middle,,aorist,ἵημι,,\\nverbpdgm35,3,verb,,middle,,aorist,ἵημι,,\\nverbpdgm36,2,verb,omi_pr,active,,,,,\\nverbpdgm37,2,verb,omi_pr,mediopassive,,,,,\\nverbpdgm37,2,verb,omi_pr,middle,,,,,\\nverbpdgm38,2,verb,omi_aor,active,,,,,\\nverbpdgm39,2,verb,omi_aor,middle,,,,,\\nverbpdgm40,2,verb,ami_pr,active,,,,,\\nverbpdgm41,2,verb,ami_pr,mediopassive,,,,,\\nverbpdgm41,2,verb,ami_pr,middle,,,,,\\nverbpdgm42,2,verb,ami_aor,active,,,,,\\nverbpdgm43,1,verb,ami_short,,,,,,\\nverbpdgm44,2,verb,umi_pr,active,,,,,\\nverbpdgm45,2,verb,umi_pr,mediopassive,,,,,\\nverbpdgm45,2,verb,umi_pr,middle,,,,,\\nverbpdgm46,2,verb,irreg_mi,,,,εἰμί,,\\nverbpdgm47,2,verb,irreg_mi,,,,εἶμι,,\\nverbpdgm48,2,verb,ath_primary,active,,present,,,\\nverbpdgm48,2,verb,ath_primary,active,,imperfect,,,\\nverbpdgm49,1,verb,ath_h_aor,,,,,,\\nverbpdgm50,1,verb,ath_w_aor,,,,,,\\nverbpdgm51,1,verb,ath_w_aor,,,,,,\\nverbpdgm52,1,verb,ath_u_aor,,,,,,\\nverbpdgm53,2,verb,ath_primary,,,perfect,,,\\nverbpdgm53,3,verb,perf_act,active,,pluperfect,,,\"","/*\n * Greek language data module\n */\nimport { Constants, Feature, Lemma, FeatureImporter } from 'alpheios-data-models'\n\nimport LanguageDataset from '@lib/language-dataset.js'\nimport ExtendedGreekData from '@lib/extended-greek-data'\nimport Suffix from '@lib/suffix.js'\nimport Form from '@lib/form.js'\nimport Paradigm from '@lib/paradigm.js'\nimport nounSuffixesCSV from '@lib/lang/greek/data/noun/suffixes.csv'\nimport nounFootnotesCSV from '@lib/lang/greek/data/noun/footnotes.csv'\n\nimport adjectiveSuffixesCSV from '@lib/lang/greek/data/adjective/suffixes.csv'\nimport adjectiveFootnotesCSV from '@lib/lang/greek/data/adjective/footnotes.csv'\n\nimport articleFormsCSV from '@lib/lang/greek/data/article/forms.csv'\n\nimport numeralFormsCSV from '@lib/lang/greek/data/numeral/forms.csv'\nimport numeralFootnotesCSV from '@lib/lang/greek/data/numeral/footnotes.csv'\n\nimport pronounFormsCSV from '@lib/lang/greek/data/pronoun/forms.csv'\nimport pronounFootnotesCSV from '@lib/lang/greek/data/pronoun/footnotes.csv'\n\n// import GroupFeatureType from '@views/lib/group-feature-type.js'\n\n/* import adjectiveSuffixesCSV from './data/adjective/suffixes.csv';\nimport adjectiveFootnotesCSV from './data/adjective/footnotes.csv';\nimport verbSuffixesCSV from './data/verb/suffixes.csv';\nimport verbFootnotesCSV from './data/verb/footnotes.csv'; */\n\n// Verb paradigm tables\nimport paradigm01 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-01.json'\nimport paradigm02 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-02.json'\nimport paradigm03 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-03.json'\nimport paradigm04 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-04.json'\nimport paradigm05 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-05.json'\nimport paradigm06 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-06.json'\nimport paradigm07 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-07.json'\nimport paradigm08 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-08.json'\nimport paradigm09 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-09.json'\nimport paradigm10 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-10.json'\nimport paradigm11 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-11.json'\nimport paradigm12 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-12.json'\nimport paradigm13 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-13.json'\nimport paradigm14 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-14.json'\nimport paradigm15 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-15.json'\nimport paradigm16 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-16.json'\nimport paradigm17 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-17.json'\nimport paradigm18 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-18.json'\nimport paradigm19 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-19.json'\nimport paradigm20 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-20.json'\nimport paradigm21 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-21.json'\nimport paradigm22 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-22.json'\nimport paradigm23 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-23.json'\nimport paradigm24 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-24.json'\nimport paradigm25 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-25.json'\nimport paradigm26 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-26.json'\nimport paradigm27 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-27.json'\nimport paradigm28 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-28.json'\nimport paradigm29 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-29.json'\nimport paradigm30 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-30.json'\nimport paradigm31 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-31.json'\nimport paradigm32 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-32.json'\nimport paradigm33 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-33.json'\nimport paradigm34 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-34.json'\nimport paradigm35 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-35.json'\nimport paradigm36 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-36.json'\nimport paradigm37 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-37.json'\nimport paradigm38 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-38.json'\nimport paradigm39 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-39.json'\nimport paradigm40 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-40.json'\nimport paradigm41 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-41.json'\nimport paradigm42 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-42.json'\nimport paradigm43 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-43.json'\nimport paradigm44 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-44.json'\nimport paradigm45 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-45.json'\nimport paradigm46 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-46.json'\nimport paradigm47 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-47.json'\nimport paradigm48 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-48.json'\nimport paradigm49 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-49.json'\nimport paradigm50 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-50.json'\nimport paradigm51 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-51.json'\nimport paradigm52 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-52.json'\nimport paradigm53 from '@lib/lang/greek/data/verb/paradigm/tables/paradigm-53.json'\n// Verb paradigm rules and footnotes\nimport verbParadigmRulesCSV from '@lib/lang/greek/data/verb/paradigm/rules.csv'\nimport verbParadigmFootnotesCSV from '@lib/lang/greek/data/verb/paradigm/footnotes.csv'\n\n// Verb participle paradigm tables\nimport paradigm54 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-54.json'\nimport paradigm55 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-55.json'\nimport paradigm56 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-56.json'\nimport paradigm57 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-57.json'\nimport paradigm58 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-58.json'\nimport paradigm59 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-59.json'\nimport paradigm60 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-60.json'\nimport paradigm61 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-61.json'\nimport paradigm62 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-62.json'\nimport paradigm63 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-63.json'\nimport paradigm64 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-64.json'\nimport paradigm65 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-65.json'\nimport paradigm66 from '@lib/lang/greek/data/verb-participle/paradigm/tables/paradigm-66.json'\n// Verb participle rules\nimport verbParticipleParadigmRulesCSV from '@lib/lang/greek/data/verb-participle/paradigm/rules.csv'\n\nimport papaparse from 'papaparse'\n\n// region Definition of grammatical features\n/*\n Define grammatical features of a language. Those grammatical features definitions will also be used by morphological\n analyzer's language modules as well.\n */\n\n// endregion Definition of grammatical features\n\nexport default class GreekLanguageDataset extends LanguageDataset {\n  constructor () {\n    super(GreekLanguageDataset.languageID)\n\n    this.typeFeatures = this.model.typeFeatures\n    this.typeFeatures.set(Feature.types.footnote, new Feature(Feature.types.footnote, [], GreekLanguageDataset.languageID))\n    this.typeFeatures.set(Feature.types.fullForm, new Feature(Feature.types.fullForm, [], GreekLanguageDataset.languageID))\n    this.typeFeatures.set(Feature.types.hdwd, new Feature(Feature.types.hdwd, [], GreekLanguageDataset.languageID))\n    this.typeFeatures.set(Feature.types.dialect, new Feature(Feature.types.dialect, [], GreekLanguageDataset.languageID))\n\n    // Create an importer with default values for every feature\n    for (let feature of this.typeFeatures.values()) {\n      feature.addImporter(new FeatureImporter(feature.values, true))\n    }\n\n    // Custom importers for Greek-specific feature values\n    this.typeFeatures.get(Feature.types.gender).getImporter()\n      .map(this.constructor.constants.GEND_MASCULINE_FEMININE, [Constants.GEND_MASCULINE, Constants.GEND_FEMININE])\n      .map(this.constructor.constants.GEND_MASCULINE_FEMININE_NEUTER, [Constants.GEND_MASCULINE, Constants.GEND_FEMININE, Constants.GEND_NEUTER])\n  }\n\n  static get languageID () {\n    return Constants.LANG_GREEK\n  }\n\n  static get constants () {\n    // TODO: Shall we move it to constants in data models?\n    return {\n      GEND_MASCULINE_FEMININE: 'masculine feminine',\n      GEND_MASCULINE_FEMININE_NEUTER: 'masculine feminine neuter'\n    }\n  }\n\n  // For noun and adjectives\n  addSuffixes (partOfSpeech, data, pofsFootnotes) {\n    // An order of columns in a data CSV file\n    const n = {\n      suffix: 0,\n      number: 1,\n      grmCase: 2,\n      declension: 3,\n      gender: 4,\n      type: 5,\n      primary: 6,\n      footnote: 7\n    }\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n    let footnotes = []\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      let item = data[i]\n      let suffixValue = item[n.suffix]\n      // Handle special suffix values\n      if (suffixValue === noSuffixValue) {\n        suffixValue = null\n      }\n\n      let primary = false\n      let features = [partOfSpeech,\n        this.typeFeatures.get(Feature.types.number).createFromImporter(item[n.number]),\n        this.typeFeatures.get(Feature.types.grmCase).createFromImporter(item[n.grmCase]),\n        this.typeFeatures.get(Feature.types.declension).createFromImporter(item[n.declension]),\n        this.typeFeatures.get(Feature.types.gender).createFromImporter(item[n.gender]),\n        this.typeFeatures.get(Feature.types.type).createFromImporter(item[n.type])]\n      if (item[n.primary] === 'primary') {\n        primary = true\n      }\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.typeFeatures.get(Feature.types.footnote).createFeatures(indexes))\n        footnotes = pofsFootnotes.filter(f => indexes.includes(f.index))\n      }\n\n      let extendedGreekData = new ExtendedGreekData()\n      extendedGreekData.primary = primary\n      let extendedLangData = {\n        [Constants.STR_LANG_CODE_GRC]: extendedGreekData\n      }\n\n      this.addInflectionData(partOfSpeech.value, Suffix, suffixValue, features, footnotes, extendedLangData)\n    }\n  }\n\n  addArticleForms (partOfSpeech, data) {\n    // An order of columns in a data CSV file\n    const n = {\n      form: 0,\n      number: 1,\n      grmCase: 2,\n      gender: 3,\n      type: 4,\n      primary: 5\n    }\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      let item = data[i]\n      let formValue = item[n.form]\n\n      let primary = false\n      let features = [partOfSpeech,\n        this.typeFeatures.get(Feature.types.number).createFromImporter(item[n.number]),\n        this.typeFeatures.get(Feature.types.grmCase).createFromImporter(item[n.grmCase]),\n        this.typeFeatures.get(Feature.types.gender).createFromImporter(item[n.gender]),\n        this.typeFeatures.get(Feature.types.type).createFromImporter(item[n.type])]\n      if (item[n.primary] === 'primary') {\n        primary = true\n      }\n\n      let extendedGreekData = new ExtendedGreekData()\n      extendedGreekData.primary = primary\n      let extendedLangData = {\n        [Constants.STR_LANG_CODE_GRC]: extendedGreekData\n      }\n\n      this.addInflectionData(partOfSpeech.value, Form, formValue, features, [], extendedLangData)\n    }\n  }\n\n  // For numerals\n  addNumeralForms (partOfSpeech, data, pofsFootnotes) {\n    // An order of columns in a data CSV file\n    // this.numeralGroupingLemmas = ['εἱς - μία - ἑν (1)', 'δύο (2)', 'τρεῖς - τρία (3)', 'τέτταρες - τέτταρα (4)']\n    this.numeralGroupingLemmas = []\n\n    const n = {\n      form: 0,\n      hdwd: 1,\n      number: 2,\n      grmCase: 3,\n      gender: 4,\n      type: 5,\n      primary: 6,\n      footnote: 7\n    }\n    let footnotes = []\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      let item = data[i]\n      let form = item[n.form]\n\n      let features = [\n        partOfSpeech,\n        this.typeFeatures.get(Feature.types.fullForm).createFromImporter(form)\n      ]\n\n      if (item[n.hdwd]) {\n        features.push(this.typeFeatures.get(Feature.types.hdwd).createFromImporter(item[n.hdwd]))\n\n        if (this.numeralGroupingLemmas.indexOf(item[n.hdwd]) === -1) { this.numeralGroupingLemmas.push(item[n.hdwd]) }\n      }\n\n      if (item[n.number]) { features.push(this.typeFeatures.get(Feature.types.number).createFromImporter(item[n.number])) }\n      if (item[n.grmCase]) { features.push(this.typeFeatures.get(Feature.types.grmCase).createFromImporter(item[n.grmCase])) }\n      if (item[n.gender]) { features.push(this.typeFeatures.get(Feature.types.gender).createFromImporter(item[n.gender])) }\n      if (item[n.type]) { features.push(this.typeFeatures.get(Feature.types.type).createFromImporter(item[n.type])) }\n\n      let primary = (item[n.primary] === 'primary')\n\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.typeFeatures.get(Feature.types.footnote).createFeatures(indexes))\n        footnotes = pofsFootnotes.filter(f => indexes.includes(f.index))\n      }\n\n      let extendedGreekData = new ExtendedGreekData()\n      extendedGreekData.primary = primary\n      let extendedLangData = {\n        [Constants.STR_LANG_CODE_GRC]: extendedGreekData\n      }\n\n      this.numeralGroupingLemmas.sort((a, b) => {\n        let aN = parseInt(a.match(/[0-9]+/g)[0])\n        let bN = parseInt(b.match(/[0-9]+/g)[0])\n        return aN - bN\n      })\n\n      this.addInflectionData(partOfSpeech.value, Form, form, features, footnotes, extendedLangData)\n    }\n  }\n\n  // For pronoun\n  addPronounForms (partOfSpeech, data, pofsFootnotes) {\n    this.pronounGroupingLemmas = new Map([\n      ['demonstrative', ['ὅδε', 'οὗτος', 'ἐκεῖνος']]\n    ])\n\n    // An order of columns in a data CSV file\n    const n = {\n      form: 0,\n      hdwd: 1,\n      grmClass: 2,\n      person: 3,\n      number: 4,\n      grmCase: 5,\n      gender: 6,\n      type: 7,\n      primary: 8,\n      dialect: 9,\n      footnote: 10\n    }\n    let footnotes = []\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      let item = data[i]\n      let form = item[n.form]\n\n      let features = [\n        partOfSpeech,\n        this.typeFeatures.get(Feature.types.fullForm).createFromImporter(form)\n      ]\n\n      if (item[n.hdwd]) {\n        features.push(this.typeFeatures.get(Feature.types.hdwd).createFromImporter(item[n.hdwd]))\n      }\n      if (item[n.grmClass]) { features.push(this.typeFeatures.get(Feature.types.grmClass).createFromImporter(item[n.grmClass])) }\n      if (item[n.person]) { features.push(this.typeFeatures.get(Feature.types.person).createFromImporter(item[n.person])) }\n      if (item[n.number]) { features.push(this.typeFeatures.get(Feature.types.number).createFromImporter(item[n.number])) }\n      if (item[n.grmCase]) { features.push(this.typeFeatures.get(Feature.types.grmCase).createFromImporter(item[n.grmCase])) }\n      if (item[n.gender]) { features.push(this.typeFeatures.get(Feature.types.gender).createFromImporter(item[n.gender])) }\n      if (item[n.type]) { features.push(this.typeFeatures.get(Feature.types.type).createFromImporter(item[n.type])) }\n\n      let primary = (item[n.primary] === 'primary')\n\n      // Dialects could have multiple values\n      let dialects = item[n.dialect].split(',')\n      if (item[n.dialect] && dialects && dialects.length > 0) {\n        features.push(this.typeFeatures.get(Feature.types.dialect).createFeatures(dialects))\n      }\n\n      // Footnotes. There can be multiple footnote indexes separated by commas\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.typeFeatures.get(Feature.types.footnote).createFeatures(indexes))\n        footnotes = pofsFootnotes.filter(f => indexes.includes(f.index))\n      }\n\n      let extendedGreekData = new ExtendedGreekData()\n      extendedGreekData.primary = primary\n      let extendedLangData = {\n        [Constants.STR_LANG_CODE_GRC]: extendedGreekData\n      }\n      this.addInflectionData(partOfSpeech.value, Form, form, features, footnotes, extendedLangData)\n    }\n  }\n\n  static get verbParadigmTables () {\n    const partOfSpeech = Constants.POFS_VERB\n    return new Map([\n      ['verbpdgm1', new Paradigm(this.languageID, partOfSpeech, paradigm01)],\n      ['verbpdgm2', new Paradigm(this.languageID, partOfSpeech, paradigm02)],\n      ['verbpdgm3', new Paradigm(this.languageID, partOfSpeech, paradigm03)],\n      ['verbpdgm4', new Paradigm(this.languageID, partOfSpeech, paradigm04)],\n      ['verbpdgm5', new Paradigm(this.languageID, partOfSpeech, paradigm05)],\n      ['verbpdgm6', new Paradigm(this.languageID, partOfSpeech, paradigm06)],\n      ['verbpdgm7', new Paradigm(this.languageID, partOfSpeech, paradigm07)],\n      ['verbpdgm8', new Paradigm(this.languageID, partOfSpeech, paradigm08)],\n      ['verbpdgm9', new Paradigm(this.languageID, partOfSpeech, paradigm09)],\n      ['verbpdgm10', new Paradigm(this.languageID, partOfSpeech, paradigm10)],\n      ['verbpdgm11', new Paradigm(this.languageID, partOfSpeech, paradigm11)],\n      ['verbpdgm12', new Paradigm(this.languageID, partOfSpeech, paradigm12)],\n      ['verbpdgm13', new Paradigm(this.languageID, partOfSpeech, paradigm13)],\n      ['verbpdgm14', new Paradigm(this.languageID, partOfSpeech, paradigm14)],\n      ['verbpdgm15', new Paradigm(this.languageID, partOfSpeech, paradigm15)],\n      ['verbpdgm16', new Paradigm(this.languageID, partOfSpeech, paradigm16)],\n      ['verbpdgm17', new Paradigm(this.languageID, partOfSpeech, paradigm17)],\n      ['verbpdgm18', new Paradigm(this.languageID, partOfSpeech, paradigm18)],\n      ['verbpdgm19', new Paradigm(this.languageID, partOfSpeech, paradigm19)],\n      ['verbpdgm20', new Paradigm(this.languageID, partOfSpeech, paradigm20)],\n      ['verbpdgm21', new Paradigm(this.languageID, partOfSpeech, paradigm21)],\n      ['verbpdgm22', new Paradigm(this.languageID, partOfSpeech, paradigm22)],\n      ['verbpdgm23', new Paradigm(this.languageID, partOfSpeech, paradigm23)],\n      ['verbpdgm24', new Paradigm(this.languageID, partOfSpeech, paradigm24)],\n      ['verbpdgm25', new Paradigm(this.languageID, partOfSpeech, paradigm25)],\n      ['verbpdgm26', new Paradigm(this.languageID, partOfSpeech, paradigm26)],\n      ['verbpdgm27', new Paradigm(this.languageID, partOfSpeech, paradigm27)],\n      ['verbpdgm28', new Paradigm(this.languageID, partOfSpeech, paradigm28)],\n      ['verbpdgm29', new Paradigm(this.languageID, partOfSpeech, paradigm29)],\n      ['verbpdgm30', new Paradigm(this.languageID, partOfSpeech, paradigm30)],\n      ['verbpdgm31', new Paradigm(this.languageID, partOfSpeech, paradigm31)],\n      ['verbpdgm32', new Paradigm(this.languageID, partOfSpeech, paradigm32)],\n      ['verbpdgm33', new Paradigm(this.languageID, partOfSpeech, paradigm33)],\n      ['verbpdgm34', new Paradigm(this.languageID, partOfSpeech, paradigm34)],\n      ['verbpdgm35', new Paradigm(this.languageID, partOfSpeech, paradigm35)],\n      ['verbpdgm36', new Paradigm(this.languageID, partOfSpeech, paradigm36)],\n      ['verbpdgm37', new Paradigm(this.languageID, partOfSpeech, paradigm37)],\n      ['verbpdgm38', new Paradigm(this.languageID, partOfSpeech, paradigm38)],\n      ['verbpdgm39', new Paradigm(this.languageID, partOfSpeech, paradigm39)],\n      ['verbpdgm40', new Paradigm(this.languageID, partOfSpeech, paradigm40)],\n      ['verbpdgm41', new Paradigm(this.languageID, partOfSpeech, paradigm41)],\n      ['verbpdgm42', new Paradigm(this.languageID, partOfSpeech, paradigm42)],\n      ['verbpdgm43', new Paradigm(this.languageID, partOfSpeech, paradigm43)],\n      ['verbpdgm44', new Paradigm(this.languageID, partOfSpeech, paradigm44)],\n      ['verbpdgm45', new Paradigm(this.languageID, partOfSpeech, paradigm45)],\n      ['verbpdgm46', new Paradigm(this.languageID, partOfSpeech, paradigm46)],\n      ['verbpdgm47', new Paradigm(this.languageID, partOfSpeech, paradigm47)],\n      ['verbpdgm48', new Paradigm(this.languageID, partOfSpeech, paradigm48)],\n      ['verbpdgm49', new Paradigm(this.languageID, partOfSpeech, paradigm49)],\n      ['verbpdgm50', new Paradigm(this.languageID, partOfSpeech, paradigm50)],\n      ['verbpdgm51', new Paradigm(this.languageID, partOfSpeech, paradigm51)],\n      ['verbpdgm52', new Paradigm(this.languageID, partOfSpeech, paradigm52)],\n      ['verbpdgm53', new Paradigm(this.languageID, partOfSpeech, paradigm53)]\n    ])\n  }\n\n  static get verbParticipleParadigmTables () {\n    const partOfSpeech = Constants.POFS_VERB_PARTICIPLE\n    return new Map([\n      ['verbpdgm54', new Paradigm(this.languageID, partOfSpeech, paradigm54)],\n      ['verbpdgm55', new Paradigm(this.languageID, partOfSpeech, paradigm55)],\n      ['verbpdgm56', new Paradigm(this.languageID, partOfSpeech, paradigm56)],\n      ['verbpdgm57', new Paradigm(this.languageID, partOfSpeech, paradigm57)],\n      ['verbpdgm58', new Paradigm(this.languageID, partOfSpeech, paradigm58)],\n      ['verbpdgm59', new Paradigm(this.languageID, partOfSpeech, paradigm59)],\n      ['verbpdgm60', new Paradigm(this.languageID, partOfSpeech, paradigm60)],\n      ['verbpdgm61', new Paradigm(this.languageID, partOfSpeech, paradigm61)],\n      ['verbpdgm62', new Paradigm(this.languageID, partOfSpeech, paradigm62)],\n      ['verbpdgm63', new Paradigm(this.languageID, partOfSpeech, paradigm63)],\n      ['verbpdgm64', new Paradigm(this.languageID, partOfSpeech, paradigm64)],\n      ['verbpdgm65', new Paradigm(this.languageID, partOfSpeech, paradigm65)],\n      ['verbpdgm66', new Paradigm(this.languageID, partOfSpeech, paradigm66)]\n    ])\n  }\n\n  setParadigmData (partOfSpeech, paradigms, rulesData, suppParadigmTables) {\n    // An order of columns in a data CSV file\n    const n = {\n      id: 0,\n      matchOrder: 1,\n      partOfSpeech: 2, // Ignored, an argument value will be used\n      stemtype: 3,\n      voice: 4,\n      mood: 5,\n      tense: 6,\n      lemma: 7,\n      morphFlags: 8,\n      dialect: 9\n    }\n\n    // First row contains headers\n    for (let i = 1; i < rulesData.length; i++) {\n      let item = rulesData[i]\n      let id = item[n.id]\n      let matchOrder = Number.parseInt(item[n.matchOrder])\n\n      let features = [partOfSpeech]\n\n      if (item[n.stemtype]) { features.push(this.typeFeatures.get(Feature.types.stemtype).createFromImporter(item[n.stemtype])) }\n      if (item[n.voice]) { features.push(this.typeFeatures.get(Feature.types.voice).createFromImporter(item[n.voice])) }\n      if (item[n.mood]) { features.push(this.typeFeatures.get(Feature.types.mood).createFromImporter(item[n.mood])) }\n      if (item[n.tense]) { features.push(this.typeFeatures.get(Feature.types.tense).createFromImporter(item[n.tense])) }\n      if (item[n.dialect]) { features.push(this.typeFeatures.get(Feature.types.dialect).createFromImporter(item[n.dialect])) }\n\n      let lemma\n      if (item[n.lemma]) {\n        lemma = new Lemma(item[n.lemma], this.constructor.languageID)\n      }\n\n      let morphFlags = ''\n      if (item[n.morphFlags]) {\n        morphFlags = item[n.morphFlags]\n      }\n\n      if (paradigms.has(id)) {\n        paradigms.get(id).addRule(matchOrder, features, lemma, morphFlags)\n      } else {\n        console.warn(`Cannot find a paradigm table for \"${id}\" index`)\n      }\n    }\n    for (let paradigm of paradigms.values()) {\n      paradigm.sortRules()\n      paradigm.addSuppTables(suppParadigmTables)\n    }\n    return Array.from(paradigms.values())\n  }\n\n  addFootnotes (partOfSpeech, classType, data) {\n    let footnotes = []\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const footnote = this.addFootnote(partOfSpeech.value, classType, data[i][0], data[i][1])\n      footnotes.push(footnote)\n    }\n    return footnotes\n  }\n\n  loadData () {\n    let partOfSpeech\n    let suffixes\n    let forms\n    let paradigms\n    let pofsFootnotes\n    let footnotes\n\n    // Nouns\n    partOfSpeech = this.typeFeatures.get(Feature.types.part).createFeature(Constants.POFS_NOUN)\n    pofsFootnotes = papaparse.parse(nounFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Suffix, pofsFootnotes.data)\n    suffixes = papaparse.parse(nounSuffixesCSV, { skipEmptyLines: true })\n    this.addSuffixes(partOfSpeech, suffixes.data, footnotes)\n\n    // Adjective\n    partOfSpeech = this.typeFeatures.get(Feature.types.part).createFeature(Constants.POFS_ADJECTIVE)\n    pofsFootnotes = papaparse.parse(adjectiveFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Suffix, pofsFootnotes.data)\n    suffixes = papaparse.parse(adjectiveSuffixesCSV, { skipEmptyLines: true })\n    this.addSuffixes(partOfSpeech, suffixes.data, footnotes)\n\n    // Articles\n    partOfSpeech = this.typeFeatures.get(Feature.types.part).createFeature(Constants.POFS_ARTICLE)\n    forms = papaparse.parse(articleFormsCSV, { skipEmptyLines: true })\n    this.addArticleForms(partOfSpeech, forms.data)\n\n    // Pronouns\n    partOfSpeech = this.typeFeatures.get(Feature.types.part).createFeature(Constants.POFS_PRONOUN)\n    pofsFootnotes = papaparse.parse(pronounFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Form, pofsFootnotes.data)\n    forms = papaparse.parse(pronounFormsCSV, { skipEmptyLines: true })\n    this.addPronounForms(partOfSpeech, forms.data, footnotes)\n\n    // Numerals\n    partOfSpeech = this.typeFeatures.get(Feature.types.part).createFeature(Constants.POFS_NUMERAL)\n    pofsFootnotes = papaparse.parse(numeralFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Form, pofsFootnotes.data)\n    forms = papaparse.parse(numeralFormsCSV, { skipEmptyLines: true })\n    this.addNumeralForms(partOfSpeech, forms.data, footnotes)\n\n    // Verbs\n    // Paradigms\n    const verbParadigmTables = this.constructor.verbParadigmTables\n    const verbParticipleParadigmTables = this.constructor.verbParticipleParadigmTables\n    const verbAndParticipleParadigmTables = new Map([...verbParadigmTables, ...verbParticipleParadigmTables])\n\n    partOfSpeech = this.typeFeatures.get(Feature.types.part).createFeature(Constants.POFS_VERB)\n    paradigms = this.setParadigmData(\n      partOfSpeech, verbParadigmTables,\n      papaparse.parse(verbParadigmRulesCSV, { skipEmptyLines: true }).data, verbAndParticipleParadigmTables)\n    this.addParadigms(partOfSpeech, paradigms)\n    this.addFootnotes(partOfSpeech, Paradigm, papaparse.parse(verbParadigmFootnotesCSV, { skipEmptyLines: true }).data)\n\n    // Verb Participles\n    // Paradigms\n    partOfSpeech = this.typeFeatures.get(Feature.types.part).createFeature(Constants.POFS_VERB_PARTICIPLE)\n    paradigms = this.setParadigmData(\n      partOfSpeech, verbParticipleParadigmTables,\n      papaparse.parse(verbParticipleParadigmRulesCSV, { skipEmptyLines: true }).data, verbAndParticipleParadigmTables)\n    this.addParadigms(partOfSpeech, paradigms)\n\n    this.dataLoaded = true\n    return this\n  }\n\n  isIrregular (inflection) {\n    // All pronouns are irregular right now\n    return inflection[Feature.types.part].value === Constants.POFS_PRONOUN\n  }\n\n  /**\n   * Returns an array of lemmas that are used to group values within inflection tables,\n   * such as for demonstrative pronouns\n   * @param {string} grammarClass - A name of a pronoun class\n   * @return {string[]} An array of lemma values\n   */\n  getPronounGroupingLemmas (grammarClass) {\n    return this.pronounGroupingLemmas.has(grammarClass) ? this.pronounGroupingLemmas.get(grammarClass) : []\n  }\n\n  getPronounGroupingLemmaFeatures (grammarClass) {\n    return this.getPronounGroupingLemmas(grammarClass).map(lemma => new Feature(Feature.types.hdwd, lemma, GreekLanguageDataset.languageID))\n  }\n\n  getNumeralGroupingLemmas () {\n    return this.numeralGroupingLemmas\n  }\n\n  getNumeralGroupingLemmaFeatures () {\n    return this.numeralGroupingLemmas.map(lemma => new Feature(Feature.types.hdwd, lemma, GreekLanguageDataset.languageID))\n  }\n\n  static getObligatoryMatchList (inflection) {\n    if (inflection.hasFeatureValue(Feature.types.part, Constants.POFS_PRONOUN)) {\n      // If it is a pronoun, it must match a grammatical class\n      return [Feature.types.part, Feature.types.grmClass]\n    } else if ([Constants.POFS_NUMERAL, Constants.POFS_ARTICLE].includes(inflection[Feature.types.part].value)) {\n      // If it is a numeral, it must match a part of speach\n      return [Feature.types.part]\n    } else if (inflection.constraints.fullFormBased) {\n      // Not a pronoun, but the other form-based word\n      return [Feature.types.part, Feature.types.fullForm]\n    } else {\n      // Default value for suffix matching\n      return [Feature.types.part]\n    }\n  }\n\n  static getOptionalMatchList (inflection) {\n    let featureOptions = []\n\n    if ([Constants.POFS_PRONOUN, Constants.POFS_NUMERAL, Constants.POFS_ARTICLE].includes(inflection[Feature.types.part].value)) {\n      featureOptions = [\n        Feature.types.grmCase,\n        Feature.types.gender,\n        Feature.types.number\n      ]\n    } else if (inflection.hasFeatureValue(Feature.types.part, Constants.POFS_ADJECTIVE)) {\n      featureOptions = [\n        Feature.types.grmCase,\n        Feature.types.gender,\n        Feature.types.number,\n        Feature.types.declension\n      ]\n    } else {\n      featureOptions = [\n        Feature.types.grmCase,\n        Feature.types.declension,\n        Feature.types.gender,\n        Feature.types.number,\n        Feature.types.voice,\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.person\n      ]\n    }\n\n    return featureOptions.filter(f => inflection[f])\n  }\n\n  /**\n   * Returns a list of features that should be the same for the morphology match.\n   * @param {Inflection} inflection - An inflection for which a list needs to be built.\n   * @return {string[]} An array of feature names.\n   */\n  static getMorphologyMatchList (inflection) {\n    let featureOptions = []\n\n    if ([Constants.POFS_PRONOUN, Constants.POFS_NUMERAL, Constants.POFS_ARTICLE].includes(inflection[Feature.types.part].value)) {\n      featureOptions = [\n        Feature.types.grmCase,\n        Feature.types.gender,\n        Feature.types.number,\n        Feature.types.person\n\n      ]\n    } else if (inflection.hasFeatureValue(Feature.types.part, Constants.POFS_ADJECTIVE)) {\n      featureOptions = [\n        Feature.types.grmCase,\n        Feature.types.gender,\n        Feature.types.number,\n        Feature.types.declension\n      ]\n    } else {\n      featureOptions = [\n        Feature.types.grmCase,\n        Feature.types.declension,\n        Feature.types.gender,\n        Feature.types.number,\n        Feature.types.voice,\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.person\n      ]\n    }\n\n    return featureOptions.filter(f => inflection[f])\n  }\n}\n","module.exports = \"Index,Text\\n1,\\\"Adjectives agree with the noun they modify in gender, number and case.\\\"\\n2,Adjectives are inflected according to either\\n3,\\\"Only nullus, sōlus, alius (alia, aliud), tōtus, ūllus, ūnus, alter, neuter (neutra,\\n            neutrum) and uter (utra, utrum).\\\"\\n4,In a few adjectives of Greek origin.\\n5,\\\"The \\\"\\\"two-ending\\\"\\\" adjectives use \\\"\\\"-is\\\"\\\", for both masculine and feminine nominative\\n            singular.\\\"\\n6,\\\"The \\\"\\\"one-ending\\\"\\\" adjectives use the same consonant ending for all three genders in the\\n            nominative singular and the neuter accusative and vocative singular.\\\"\\n7,\\\"An ablative singular in \\\"\\\"e\\\"\\\" is common in one-ending adjectives, but is usually confined to\\n            poetry in three and two-ending adjectives.\\\"\\n8,\\\"In comparatives, poetry and some one-ending adjectives.\\\"\\n9,Chiefly in comparatives.\"","module.exports = \"Ending,Number,Case,Declension,Gender,Type,Footnote\\na,singular,nominative,1st 2nd,feminine,regular,\\nus,singular,nominative,1st 2nd,masculine,regular,\\n-,singular,nominative,1st 2nd,masculine,regular,\\num,singular,nominative,1st 2nd,neuter,regular,\\nis,singular,nominative,3rd,feminine,regular,\\n-,singular,nominative,3rd,feminine,irregular,6\\n-,singular,nominative,3rd,masculine,regular,\\nis,singular,nominative,3rd,masculine,irregular,5\\ne,singular,nominative,3rd,neuter,regular,\\n-,singular,nominative,3rd,neuter,irregular,6\\nae,singular,genitive,1st 2nd,feminine,regular,\\nīus,singular,genitive,1st 2nd,feminine,irregular,3\\nī,singular,genitive,1st 2nd,masculine,regular,\\nīus,singular,genitive,1st 2nd,masculine,irregular,3\\nī,singular,genitive,1st 2nd,neuter,regular,\\nīus,singular,genitive,1st 2nd,neuter,irregular,3\\nis,singular,genitive,3rd,feminine,regular,\\nis,singular,genitive,3rd,masculine,regular,\\nis,singular,genitive,3rd,neuter,regular,\\nae,singular,dative,1st 2nd,feminine,regular,\\nī,singular,dative,1st 2nd,feminine,irregular,3\\nō,singular,dative,1st 2nd,masculine,regular,\\nī,singular,dative,1st 2nd,masculine,irregular,3\\nō,singular,dative,1st 2nd,neuter,regular,\\nī,singular,dative,1st 2nd,neuter,irregular,3\\nī,singular,dative,3rd,feminine,regular,\\nī,singular,dative,3rd,masculine,regular,\\nī,singular,dative,3rd,neuter,regular,\\nam,singular,accusative,1st 2nd,feminine,regular,\\num,singular,accusative,1st 2nd,masculine,regular,\\num,singular,accusative,1st 2nd,neuter,regular,\\nem,singular,accusative,3rd,feminine,regular,\\nem,singular,accusative,3rd,masculine,regular,\\ne,singular,accusative,3rd,neuter,regular,\\n-,singular,accusative,3rd,neuter,irregular,6\\nā,singular,ablative,1st 2nd,feminine,regular,\\nō,singular,ablative,1st 2nd,feminine,irregular,4\\nō,singular,ablative,1st 2nd,masculine,regular,\\nō,singular,ablative,1st 2nd,neuter,regular,\\nī,singular,ablative,3rd,feminine,regular,\\ne,singular,ablative,3rd,feminine,irregular,7\\nī,singular,ablative,3rd,masculine,regular,\\ne,singular,ablative,3rd,masculine,irregular,7\\nī,singular,ablative,3rd,neuter,regular,\\nae,singular,locative,1st 2nd,feminine,regular,\\nī,singular,locative,1st 2nd,masculine,regular,\\nī,singular,locative,1st 2nd,neuter,regular,\\nī,singular,locative,3rd,feminine,regular,\\ne,singular,locative,3rd,feminine,irregular,7\\nī,singular,locative,3rd,masculine,regular,\\nī,singular,locative,3rd,neuter,regular,\\na,singular,vocative,1st 2nd,feminine,regular,\\ne,singular,vocative,1st 2nd,masculine,regular,\\nī,singular,vocative,1st 2nd,masculine,irregular,\\n-,singular,vocative,1st 2nd,masculine,regular,\\num,singular,vocative,1st 2nd,neuter,regular,\\nis,singular,vocative,3rd,feminine,regular,\\n-,singular,vocative,3rd,masculine,regular,\\ne,singular,vocative,3rd,neuter,regular,\\n-,singular,vocative,3rd,neuter,irregular,6\\nae,plural,nominative,1st 2nd,feminine,regular,\\nī,plural,nominative,1st 2nd,masculine,regular,\\na,plural,nominative,1st 2nd,neuter,regular,\\nēs,plural,nominative,3rd,feminine,regular,\\nēs,plural,nominative,3rd,masculine,regular,\\nia,plural,nominative,3rd,neuter,regular,\\nārum,plural,genitive,1st 2nd,feminine,regular,\\nōrum,plural,genitive,1st 2nd,masculine,regular,\\nōrum,plural,genitive,1st 2nd,neuter,regular,\\nium,plural,genitive,3rd,feminine,regular,\\num,plural,genitive,3rd,feminine,irregular,8\\nium,plural,genitive,3rd,masculine,regular,\\num,plural,genitive,3rd,masculine,irregular,8\\nium,plural,genitive,3rd,neuter,regular,\\num,plural,genitive,3rd,neuter,irregular,8\\nīs,plural,dative,1st 2nd,feminine,regular,\\nīs,plural,dative,1st 2nd,masculine,regular,\\nīs,plural,dative,1st 2nd,neuter,regular,\\nibus,plural,dative,3rd,feminine,regular,\\nibus,plural,dative,3rd,masculine,regular,\\nibus,plural,dative,3rd,neuter,regular,\\nās,plural,accusative,1st 2nd,feminine,regular,\\nōs,plural,accusative,1st 2nd,masculine,regular,\\na,plural,accusative,1st 2nd,neuter,regular,\\nīs,plural,accusative,3rd,feminine,regular,\\nēs,plural,accusative,3rd,feminine,irregular,9\\nīs,plural,accusative,3rd,masculine,regular,\\nēs,plural,accusative,3rd,masculine,irregular,9\\nia,plural,accusative,3rd,neuter,regular,\\nīs,plural,ablative,1st 2nd,feminine,regular,\\nīs,plural,ablative,1st 2nd,masculine,regular,\\nīs,plural,ablative,1st 2nd,neuter,regular,\\nibus,plural,ablative,3rd,feminine,regular,\\nibus,plural,ablative,3rd,masculine,regular,\\nibus,plural,ablative,3rd,neuter,regular,\\nīs,plural,locative,1st 2nd,feminine,regular,\\nīs,plural,locative,1st 2nd,masculine,regular,\\nīs,plural,locative,1st 2nd,neuter,regular,\\nibus,plural,locative,3rd,feminine,regular,\\nibus,plural,locative,3rd,masculine,regular,\\nibus,plural,locative,3rd,neuter,regular,\\nae,plural,vocative,1st 2nd,feminine,regular,\\nī,plural,vocative,1st 2nd,masculine,regular,\\na,plural,vocative,1st 2nd,neuter,regular,\\nēs,plural,vocative,3rd,feminine,regular,\\nēs,plural,vocative,3rd,masculine,regular,\\nia,plural,vocative,3rd,neuter,regular,\\n\"","module.exports = \"Index,Text\\n1,Old forms.\\n2,Alternate forms.\\n3,\\\"The original forms of ferrem and ferre are fer-sēm and fer-se, respectively.\\\"\\n4,Gerundive (Future Passive Participle)\\n5,singular\\n6,\\\"The verbs nōlō and malō are compounds of volo. They therefore attach nō- or mā- to the beginning of each verb, in place of vo- or vu-. Exceptions to this are found in the present tense: nōlō nōlumus mālō mālumus nōn vīs nōn vultis māvīs māvultis nōn vult nōlunt māvult mālunt In addition, nōlō is the only verb of the three that has present and future tense imperative forms of the verb: nōlī, nōlīte, and nōlītō, nōlītōte, respectively.\\\"\\n7,An earlier form.\\n8,\\\"The perfect passive participle ending will change according to its subject's gender, number and case. Endings shown here are the masculine, feminine and neuter nominative singular.\\\"\\n9,A passive form of the verb that is used impersonally is itum est.\\n10,\\\"While the perfect form of this verb is regular, ii usually contracts to i when it is followed by an s. Thus, īstī, īstis and īsse\\\"\\n11,It is rare that the “v” appear as a form.\\n12,Used by early writers.\"","module.exports = \"Lemma,PrincipalParts,Form,Case,Footnote\\nfero,ferre_tuli_latus,ferendī,genitive,5\\nfero,ferre_tuli_latus,ferendō,dative,\\nfero,ferre_tuli_latus,ferendum,accusative,\\nfero,ferre_tuli_latus,ferendō,ablative,\\neo,ire_ivi(ii)_itus,eundī,genitive,5\\neo,ire_ivi(ii)_itus,eundō,dative,\\neo,ire_ivi(ii)_itus,eundum,accusative,\\neo,ire_ivi(ii)_itus,eundō,ablative,\"","module.exports = \"Index,Text\\n1,archaic (final s and m of os and om may be omitted in inscriptions)\\n2,only in familiās\\n3,especially in Greek patronymics and compounds in -gena and -cola.\\n4,always in deābus and filiābus; rarely with other words to distinguish the female\\n5,archaic\\n6,rare\\n7,\\\"may occur in words of Greek origin. The forms of many Greek nouns vary among the first, second and third declensions.\\\"\\n8,proper names in ius and filius and genius\\n9,poetic\\n10,\\\"only pelagus, vīrus, and sometimes vulgus\\\"\\n11,may occur with i-stems\\n12,several nouns (most commonly domus) show forms of both second and fourth declensions\\n13,\\\"some nouns also have forms from the first declension (eg materia, saevitia) or the third declension (eg requiēs, satiēs, plēbēs, famēs)\\\"\\n14,\\\"Always in partus and tribus, usually in artus and lacus, sometimes in other words, eg portus and specus\\\"\\n15,Often in names of plants and trees and in nouns ending in -tus\\n16,When pronounced as one syllable\\n17,early\\n18,dies and meridies are masculine\"","module.exports = \"Ending,Number,Case,Declension,Gender,Type,Footnote\\na,singular,nominative,1st,feminine,regular,\\nē,singular,nominative,1st,feminine,irregular,\\nēs,singular,nominative,1st,feminine,irregular,\\nā,singular,nominative,1st,feminine,irregular,7\\nus,singular,nominative,2nd,masculine feminine,regular,\\ner,singular,nominative,2nd,masculine feminine,regular,\\nir,singular,nominative,2nd,masculine feminine,regular,\\n-,singular,nominative,2nd,masculine feminine,irregular,\\nos,singular,nominative,2nd,masculine feminine,irregular,1\\nōs,singular,nominative,2nd,masculine feminine,irregular,\\nō,singular,nominative,2nd,masculine feminine,irregular,7\\num,singular,nominative,2nd,neuter,regular,\\nus,singular,nominative,2nd,neuter,irregular,10\\non,singular,nominative,2nd,neuter,irregular,7\\n-,singular,nominative,3rd,masculine feminine,regular,\\nos,singular,nominative,3rd,masculine feminine,irregular,\\nōn,singular,nominative,3rd,masculine feminine,irregular,7\\n-,singular,nominative,3rd,neuter,regular,\\nus,singular,nominative,4th,masculine feminine,regular,\\nū,singular,nominative,4th,neuter,regular,\\nēs,singular,nominative,5th,feminine,regular,\\nae,singular,genitive,1st,feminine,regular,\\nāī,singular,genitive,1st,feminine,irregular,1\\nās,singular,genitive,1st,feminine,irregular,2\\nēs,singular,genitive,1st,feminine,irregular,7\\nī,singular,genitive,2nd,masculine feminine,regular,\\nō,singular,genitive,2nd,masculine feminine,irregular,7\\nī,singular,genitive,2nd,neuter,regular,\\nis,singular,genitive,3rd,masculine feminine,regular,\\nis,singular,genitive,3rd,neuter,regular,\\nūs,singular,genitive,4th,masculine feminine,regular,\\nuis,singular,genitive,4th,masculine feminine,irregular,1\\nuos,singular,genitive,4th,masculine feminine,irregular,1\\nī,singular,genitive,4th,masculine feminine,irregular,15\\nūs,singular,genitive,4th,neuter,regular,\\nēī,singular,genitive,5th,feminine,regular,\\neī,singular,genitive,5th,feminine,regular,\\nī,singular,genitive,5th,feminine,irregular,\\nē,singular,genitive,5th,feminine,irregular,\\nēs,singular,genitive,5th,feminine,irregular,6\\nae,singular,dative,1st,feminine,regular,\\nāī,singular,dative,1st,feminine,irregular,1\\nō,singular,dative,2nd,masculine feminine,regular,\\nō,singular,dative,2nd,neuter,regular,\\nī,singular,dative,3rd,masculine feminine,regular,\\ne,singular,dative,3rd,masculine feminine,irregular,17\\nī,singular,dative,3rd,neuter,regular,\\nūī,singular,dative,4th,masculine feminine,regular,\\nū,singular,dative,4th,masculine feminine,regular,\\nū,singular,dative,4th,neuter,regular,\\nēī,singular,dative,5th,feminine,regular,\\neī,singular,dative,5th,feminine,regular,\\nī,singular,dative,5th,feminine,irregular,\\nē,singular,dative,5th,feminine,irregular,6\\nam,singular,accusative,1st,feminine,regular,\\nēn,singular,accusative,1st,feminine,irregular,\\nān,singular,accusative,1st,feminine,irregular,7\\num,singular,accusative,2nd,masculine feminine,regular,\\nom,singular,accusative,2nd,masculine feminine,irregular,1\\nōn,singular,accusative,2nd,masculine feminine,irregular,7\\num,singular,accusative,2nd,neuter,regular,\\nus,singular,accusative,2nd,neuter,irregular,10\\non,singular,accusative,2nd,neuter,irregular,7\\nem,singular,accusative,3rd,masculine feminine,regular,\\nim,singular,accusative,3rd,masculine feminine,irregular,11\\na,singular,accusative,3rd,masculine feminine,irregular,7\\n-,singular,accusative,3rd,neuter,regular,\\num,singular,accusative,4th,masculine feminine,regular,\\nū,singular,accusative,4th,neuter,regular,\\nem,singular,accusative,5th,feminine,regular,\\nā,singular,ablative,1st,feminine,regular,\\nād,singular,ablative,1st,feminine,irregular,5\\nē,singular,ablative,1st,feminine,irregular,7\\nō,singular,ablative,2nd,masculine feminine,regular,\\nōd,singular,ablative,2nd,masculine feminine,irregular,1\\nō,singular,ablative,2nd,neuter,regular,\\ne,singular,ablative,3rd,masculine feminine,regular,\\nī,singular,ablative,3rd,masculine feminine,irregular,11\\ne,singular,ablative,3rd,neuter,regular,\\nī,singular,ablative,3rd,neuter,irregular,11\\nū,singular,ablative,4th,masculine feminine,regular,\\nūd,singular,ablative,4th,masculine feminine,irregular,1\\nū,singular,ablative,4th,neuter,regular,\\nē,singular,ablative,5th,feminine,regular,\\nae,singular,locative,1st,feminine,regular,\\nō,singular,locative,2nd,masculine feminine,regular,\\nō,singular,locative,2nd,neuter,regular,\\ne,singular,locative,3rd,masculine feminine,regular,\\nī,singular,locative,3rd,masculine feminine,regular,\\nī,singular,locative,3rd,neuter,regular,\\nū,singular,locative,4th,masculine feminine,regular,\\nū,singular,locative,4th,neuter,regular,\\nē,singular,locative,5th,feminine,regular,\\na,singular,vocative,1st,feminine,regular,\\nē,singular,vocative,1st,feminine,irregular,\\nā,singular,vocative,1st,feminine,irregular,7\\ne,singular,vocative,2nd,masculine feminine,regular,\\ner,singular,vocative,2nd,masculine feminine,regular,\\nir,singular,vocative,2nd,masculine feminine,regular,\\n-,singular,vocative,2nd,masculine feminine,irregular,\\nī,singular,vocative,2nd,masculine feminine,irregular,8\\nōs,singular,vocative,2nd,masculine feminine,irregular,\\ne,singular,vocative,2nd,masculine feminine,irregular,7\\num,singular,vocative,2nd,neuter,regular,\\non,singular,vocative,2nd,neuter,irregular,7\\n-,singular,vocative,3rd,masculine feminine,regular,\\n-,singular,vocative,3rd,neuter,regular,\\nus,singular,vocative,4th,masculine feminine,regular,\\nū,singular,vocative,4th,neuter,regular,\\nēs,singular,vocative,5th,feminine,regular,\\nae,plural,nominative,1st,feminine,regular,\\nī,plural,nominative,2nd,masculine feminine,regular,\\noe,plural,nominative,2nd,masculine feminine,irregular,7 9\\na,plural,nominative,2nd,neuter,regular,\\nēs,plural,nominative,3rd,masculine feminine,regular,\\nes,plural,nominative,3rd,masculine feminine,irregular,7\\na,plural,nominative,3rd,neuter,regular,\\nia,plural,nominative,3rd,neuter,irregular,11\\nūs,plural,nominative,4th,masculine feminine,regular,\\nua,plural,nominative,4th,neuter,regular,\\nēs,plural,nominative,5th,feminine,regular,\\nārum,plural,genitive,1st,feminine,regular,\\num,plural,genitive,1st,feminine,irregular,3\\nōrum,plural,genitive,2nd,masculine feminine,regular,\\num,plural,genitive,2nd,masculine feminine,irregular,\\nom,plural,genitive,2nd,masculine feminine,irregular,8\\nōrum,plural,genitive,2nd,neuter,regular,\\num,plural,genitive,2nd,neuter,irregular,\\num,plural,genitive,3rd,masculine feminine,regular,\\nium,plural,genitive,3rd,masculine feminine,irregular,11\\nōn,plural,genitive,3rd,masculine feminine,irregular,7\\num,plural,genitive,3rd,neuter,regular,\\nium,plural,genitive,3rd,neuter,irregular,11\\nuum,plural,genitive,4th,masculine feminine,regular,\\num,plural,genitive,4th,masculine feminine,irregular,16\\nuom,plural,genitive,4th,masculine feminine,irregular,1\\nuum,plural,genitive,4th,neuter,regular,\\nērum,plural,genitive,5th,feminine,regular,\\nīs,plural,dative,1st,feminine,regular,\\nābus,plural,dative,1st,feminine,irregular,4\\neis,plural,dative,1st,feminine,irregular,6\\nīs,plural,dative,2nd,masculine feminine,regular,\\nīs,plural,dative,2nd,neuter,regular,\\nibus,plural,dative,3rd,masculine feminine,regular,\\nibus,plural,dative,3rd,neuter,regular,\\nibus,plural,dative,4th,masculine feminine,regular,\\nubus,plural,dative,4th,masculine feminine,irregular,14\\nibus,plural,dative,4th,neuter,regular,\\nēbus,plural,dative,5th,feminine,regular,\\nās,plural,accusative,1st,feminine,regular,\\nōs,plural,accusative,2nd,masculine feminine,regular,\\na,plural,accusative,2nd,neuter,regular,\\nēs,plural,accusative,3rd,masculine feminine,regular,\\nīs,plural,accusative,3rd,masculine feminine,irregular,11\\nas,plural,accusative,3rd,masculine feminine,irregular,7\\na,plural,accusative,3rd,neuter,regular,\\nia,plural,accusative,3rd,neuter,irregular,11\\nūs,plural,accusative,4th,masculine feminine,regular,\\nua,plural,accusative,4th,neuter,regular,\\nēs,plural,accusative,5th,feminine,regular,\\nīs,plural,ablative,1st,feminine,regular,\\nābus,plural,ablative,1st,feminine,irregular,4\\neis,plural,ablative,1st,feminine,irregular,6\\nīs,plural,ablative,2nd,masculine feminine,regular,\\nīs,plural,ablative,2nd,neuter,regular,\\nibus,plural,ablative,3rd,masculine feminine,regular,\\nibus,plural,ablative,3rd,neuter,regular,\\nibus,plural,ablative,4th,masculine feminine,regular,\\nubus,plural,ablative,4th,masculine feminine,irregular,14\\nibus,plural,ablative,4th,neuter,regular,\\nēbus,plural,ablative,5th,feminine,regular,\\nīs,plural,locative,1st,feminine,regular,\\nīs,plural,locative,2nd,masculine feminine,regular,\\nīs,plural,locative,2nd,neuter,regular,\\nibus,plural,locative,3rd,masculine feminine,regular,\\nibus,plural,locative,3rd,neuter,regular,\\nibus,plural,locative,4th,masculine feminine,regular,\\nibus,plural,locative,4th,neuter,regular,\\nēbus,plural,locative,5th,feminine,regular,\\nae,plural,vocative,1st,feminine,regular,\\nī,plural,vocative,2nd,masculine feminine,regular,\\na,plural,vocative,2nd,neuter,regular,\\nēs,plural,vocative,3rd,masculine feminine,regular,\\na,plural,vocative,3rd,neuter,regular,\\nia,plural,vocative,3rd,neuter,irregular,11\\nūs,plural,vocative,4th,masculine feminine,regular,\\nua,plural,vocative,4th,neuter,regular,\\nēs,plural,vocative,5th,feminine,regular,\"","module.exports = \"Index,Text\\n1,Old forms.\\n2,Alternate forms.\\n3,\\\"The original forms of ferrem and ferre are fer-sēm and fer-se, respectively.\\\"\\n4,Gerundive (Future Passive Participle)\\n5,singular\\n6,\\\"The verbs nōlō and malō are compounds of volo. They therefore attach nō- or mā- to the beginning of each verb, in place of vo- or vu-. Exceptions to this are found in the present tense: nōlō nōlumus mālō mālumus nōn vīs nōn vultis māvīs māvultis nōn vult nōlunt māvult mālunt In addition, nōlō is the only verb of the three that has present and future tense imperative forms of the verb: nōlī, nōlīte, and nōlītō, nōlītōte, respectively.\\\"\\n7,An earlier form.\\n8,\\\"The perfect passive participle ending will change according to its subject's gender, number and case. Endings shown here are the masculine, feminine and neuter nominative singular.\\\"\\n9,A passive form of the verb that is used impersonally is itum est.\\n10,\\\"While the perfect form of this verb is regular, ii usually contracts to i when it is followed by an s. Thus, īstī, īstis and īsse\\\"\\n11,It is rare that the “v” appear as a form.\\n12,Used by early writers.\\n13,Genitive\"","module.exports = \"Lemma,PrincipalParts,Form,Voice,Mood,Tense,Number,Person,Footnote\\nsum,esse_fui_futurus,futūrus,active,,future,,,\\nsum,esse_fui_futurus,-a,active,,future,,,\\nsum,esse_fui_futurus,-um,active,,future,,,\\nfero,ferre_tuli_latus,ferēns,active,,present,,,\\nfero,ferre_tuli_latus,-entis,active,,present,,,\\nfero,ferre_tuli_latus,latūrus,active,,future,,,\\nfero,ferre_tuli_latus,ferendus,passive,,future,,,4\\nfero,ferre_tuli_latus,lātus,passive,,perfect,,,8\\nfero,ferre_tuli_latus,lāta,passive,,perfect,,,8\\nfero,ferre_tuli_latus,lātum,passive,,perfect,,,8\\nvolo,velle_volui_-,volēns,active,,present,,,\\nvolo,velle_volui_-,-entis,active,,present,,,\\neo,ire_ivi(ii)_itus,iēns,active,,present,,,\\neo,ire_ivi(ii)_itus,euntis,active,,present,,,13\\neo,ire_ivi(ii)_itus,itūrus,active,,future,,,\\neo,ire_ivi(ii)_itus,eundum,passive,,future,,,4\\npossum,posse_potui_-,potēns,active,,present,,,\"","module.exports = \"Ending,Conjugation,Voice,Mood,Tense,Number,Person,Case,Type,Footnote\\nāns,1st,active,,present,,,,regular,\\nantis,1st,active,,present,,,,irregular,\\nēns,2nd,active,,present,,,,regular,\\nentis,2nd,active,,present,,,,irregular,\\nēns,3rd,active,,present,,,,regular,\\nentis,3rd,active,,present,,,,irregular,\\niēns,4th,active,,present,,,,regular,\\nientis,4th,active,,present,,,,irregular,\\n,1st,active,,perfect,,,,,\\n,2nd,active,,perfect,,,,,\\n,3rd,active,,perfect,,,,,\\n,4th,active,,perfect,,,,,\\nūrus,1st,active,,future,,,,regular,\\na,1st,active,,future,,,,irregular,\\num,1st,active,,future,,,,irregular,\\nūrus,2nd,active,,future,,,,regular,\\na,2nd,active,,future,,,,irregular,\\num,2nd,active,,future,,,,irregular,\\nūrus,3rd,active,,future,,,,regular,\\na,3rd,active,,future,,,,irregular,\\num,3rd,active,,future,,,,irregular,\\nūrus,4th,active,,future,,,,regular,\\na,4th,active,,future,,,,regular,\\num,4th,active,,future,,,,regular,\\n,1st,passive,,present,,,,,\\n,2nd,passive,,present,,,,,\\n,3rd,passive,,present,,,,,\\n,4th,passive,,present,,,,,\\nus,1st,passive,,perfect,,,,regular,\\na,1st,passive,,perfect,,,,irregular,\\num,1st,passive,,perfect,,,,irregular,\\nus,2nd,passive,,perfect,,,,regular,\\na,2nd,passive,,perfect,,,,irregular,\\num,2nd,passive,,perfect,,,,irregular,\\nus,3rd,passive,,perfect,,,,regular,\\na,3rd,passive,,perfect,,,,irregular,\\num,3rd,passive,,perfect,,,,irregular,\\nus,4th,passive,,perfect,,,,regular,\\na,4th,passive,,perfect,,,,irregular,\\num,4th,passive,,perfect,,,,irregular,\\nandus,1st,passive,,future,,,,regular,\\na,1st,passive,,future,,,,irregular,\\num,1st,passive,,future,,,,irregular,\\nendus,2nd,passive,,future,,,,regular,\\na,2nd,passive,,future,,,,irregular,\\num,2nd,passive,,future,,,,irregular,\\nendus,3rd,passive,,future,,,,regular,\\niendus,4th,passive,,future,,,,regular,\\na,4th,passive,,future,,,,irregular,\\num,4th,passive,,future,,,,irregular,\"","module.exports = \"Index,Text\\n1,\\\"tU is made emphatic by adding on the endings –te, –temet or –timet. \\n            The other forms of the personal pronoun (with the exception of the genitive plural) \\n            are made emphatic by the addition of –met to the original form. Early emphatic forms include mEpte and tEpte.\\\"\\n2,Enclitics –ce or –c are sometimes added to forms of hic. Common examples include huiusce and hIsce.\\n3,Earlier forms.\\n4,The plural forms of the Interrogatives are the same as the plural forms of the Relative.\"","module.exports = \"Form Set,Headwords,Class,Person,Number,Case,Type,Form,Footnote\\n1,,personal,1st,singular,nominative,regular,ego,\\n1,,personal,1st,singular,genitive,regular,meI,\\n1,,personal,1st,singular,genitive,irregular,mIs,1\\n1,,personal,1st,singular,dative,regular,mihi,\\n1,,personal,1st,singular,dative,irregular,mI,\\n1,,personal,1st,singular,accusative,regular,mE,\\n1,,personal,1st,singular,accusative,irregular,mEmE,\\n1,,personal,1st,singular,ablative,regular,mE,\\n1,,personal,1st,singular,ablative,irregular,mEmE,\\n1,,personal,1st,singular,vocative,,,\\n1,,personal,2nd,singular,nominative,regular,tU,\\n1,,personal,2nd,singular,genitive,regular,tuI,\\n1,,personal,2nd,singular,genitive,irregular,tIs,1\\n1,,personal,2nd,singular,dative,regular,tibi,\\n1,,personal,2nd,singular,accusative,regular,tE,\\n1,,personal,2nd,singular,accusative,irregular,tEtE,\\n1,,personal,2nd,singular,ablative,regular,tE,\\n1,,personal,2nd,singular,ablative,irregular,tEtE,\\n1,,personal,2nd,singular,vocative,regular,tU,\\n1,,personal,1st,plural,nominative,regular,nOs,\\n1,,personal,1st,plural,genitive,regular,nostrum,\\n1,,personal,1st,plural,dative,regular,nObIs,\\n1,,personal,1st,plural,accusative,regular,nOs,\\n1,,personal,1st,plural,ablative,regular,nObIs,\\n1,,personal,1st,plural,vocative,,,\\n1,,personal,2nd,plural,nominative,regular,vOs,\\n1,,personal,2nd,plural,genitive,regular,vestrum,\\n1,,personal,2nd,plural,genitive,regular,vestrI,\\n1,,personal,2nd,plural,genitive,irregular,vostrum,\\n1,,personal,2nd,plural,genitive,irregular,vostrI,\\n1,,personal,2nd,plural,dative,regular,vObIs,\\n1,,personal,2nd,plural,accusative,regular,vOs,\\n1,,personal,2nd,plural,ablative,regular,vObIs,\\n1,,personal,2nd,plural,vocative,regular,vOs,\\n2,,reflexive,3rd,singular,nominative,,,\\n2,,reflexive,3rd,singular,genitive,regular,suI,\\n2,,reflexive,3rd,singular,dative,regular,sibi,\\n2,,reflexive,3rd,singular,accusative,regular,sE,\\n2,,reflexive,3rd,singular,accusative,irregular,sEsE,\\n2,,reflexive,3rd,singular,ablative,regular,sE,\\n2,,reflexive,3rd,singular,ablative,irregular,sEsE,\\n2,,reflexive,3rd,singular,vocative,,,\\n2,,reflexive,3rd,plural,nominative,,,\\n2,,reflexive,3rd,plural,genitive,regular,suI,\\n2,,reflexive,3rd,plural,dative,regular,sibi,\\n2,,reflexive,3rd,plural,accusative,regular,sE,\\n2,,reflexive,3rd,plural,accusative,irregular,sEsE,\\n2,,reflexive,3rd,plural,ablative,regular,sE,\\n2,,reflexive,3rd,plural,ablative,irregular,sEsE,\\n2,,reflexive,3rd,plural,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,nominative,regular,meus,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,genitive,regular,meI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,dative,regular,meO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,accusative,regular,meum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,ablative,regular,meO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,vocative,regular,mI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,vocative,irregular,meus,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,nominative,regular,mea,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,genitive,regular,meae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,dative,regular,meae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,accusative,regular,meam,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,ablative,regular,meA,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,vocative,regular,mea,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,nominative,regular,meum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,genitive,regular,meI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,dative,regular,meO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,accusative,regular,meum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,ablative,regular,meO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,singular,vocative,regular,meum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,nominative,regular,tuus,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,genitive,regular,tuI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,dative,regular,tuO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,accusative,regular,tuum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,ablative,regular,tuO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,nominative,regular,tua,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,genitive,regular,tuae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,dative,regular,tuae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,accusative,regular,tuam,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,ablative,regular,tuA,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,nominative,regular,tuum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,genitive,regular,tuI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,dative,regular,tuO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,accusative,regular,tuum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,ablative,regular,tuO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,singular,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,nominative,regular,suus,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,genitive,regular,suI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,dative,regular,suO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,accusative,regular,suum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,ablative,regular,suO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,nominative,regular,sua,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,genitive,regular,suae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,dative,regular,suae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,accusative,regular,suam,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,ablative,regular,suA,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,nominative,regular,suum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,genitive,regular,suI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,dative,regular,suO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,accusative,regular,suum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,ablative,regular,suO,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,singular,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,nominative,regular,meI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,genitive,regular,meOrum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,dative,regular,meIs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,accusative,regular,meOs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,ablative,regular,meIs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,vocative,regular,meI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,nominative,regular,meae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,genitive,regular,meArum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,dative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,accusative,regular,meAs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,ablative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,vocative,regular,meae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,nominative,regular,mea,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,genitive,regular,meOrum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,dative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,accusative,regular,mea,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,ablative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,1st,plural,vocative,regular,mea,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,nominative,regular,tuI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,genitive,regular,tuOrum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,dative,regular,tuIs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,accusative,regular,tuOs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,ablative,regular,tuIs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,nominative,regular,tuae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,genitive,regular,tuArum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,dative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,accusative,regular,tuAs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,ablative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,nominative,regular,tua,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,genitive,regular,tuOrum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,dative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,accusative,regular,tua,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,ablative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,2nd,plural,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,nominative,regular,suI,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,genitive,regular,suOrum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,dative,regular,suIs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,accusative,regular,suOs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,ablative,regular,suIs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,nominative,regular,suae,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,genitive,regular,suArum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,dative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,accusative,regular,suAs,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,ablative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,vocative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,nominative,regular,sua,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,genitive,regular,suOrum,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,dative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,accusative,regular,sua,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,ablative,,,\\n3,\\\"meus,mea,meum;tuus,tua,tuum;suus,sua,suum\\\",possessive,3rd,plural,vocative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,nominative,regular,noster,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,genitive,regular,nostrI,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,dative,regular,nostrO,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,accusative,regular,nostrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,ablative,regular,nostrO,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,vocative,regular,noster,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,nominative,regular,nostra,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,genitive,regular,nostrae,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,dative,regular,nostrae,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,accusative,regular,nostram,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,ablative,regular,nostrA,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,vocative,regular,nostra,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,nominative,regular,nostrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,genitive,regular,nostrI,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,dative,regular,nostrO,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,accusative,regular,nostrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,ablative,regular,nostrO,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,singular,vocative,regular,nostrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,nominative,regular,vester,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,genitive,regular,vestrI,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,dative,regular,vestrO,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,accusative,regular,vestrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,ablative,regular,vestrO,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,vocative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,nominative,regular,vestra,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,genitive,regular,vestrae,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,dative,regular,vestrae,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,accusative,regular,vestram,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,ablative,regular,vestrA,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,vocative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,nominative,regular,vestum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,genitive,regular,vestrI,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,dative,regular,vestrO,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,accusative,regular,vestrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,ablative,regular,vestrO,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,singular,vocative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,nominative,regular,nostrI,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,genitive,regular,nostrOrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,dative,regular,nostrIs,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,accusative,regular,nostrOs,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,ablative,regular,nostrIs,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,vocative,regular,nostrI,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,nominative,regular,nostrae,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,genitive,regular,nostrArum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,dative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,accusative,regular,nostrAs,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,ablative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,vocative,regular,nostrae,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,nominative,regular,nostra,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,genitive,regular,nostrOrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,dative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,accusative,regular,nostra,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,ablative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,1st,plural,vocative,regular,nostra,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,nominative,regular,vestrI,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,genitive,regular,vestrOrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,dative,regular,vestrIs,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,accusative,regular,vestrOs,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,ablative,regular,vestrIs,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,vocative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,nominative,regular,vestrae,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,genitive,regular,vestrArum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,dative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,accusative,regular,vestrAs,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,ablative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,,vocative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,nominative,regular,vestra,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,genitive,regular,vestrOrum,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,dative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,accusative,regular,vestra,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,ablative,,,\\n4,\\\"noster,nostra,nostrum;vester,vestra,vestrum\\\",possessive,2nd,plural,vocative,,,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,nominative,regular,is,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,genitive,regular,eius,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,dative,regular,eI,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,accusative,regular,eum,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,ablative,regular,eO,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,nominative,regular,ea,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,genitive,,,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,dative,,,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,accusative,regular,eam,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,ablative,regular,eA,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,nominative,regular,id,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,genitive,,,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,dative,,,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,accusative,regular,id,\\n5,\\\"is,ea,id\\\",demonstrative,,singular,ablative,regular,eO,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,nominative,regular,eI,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,nominative,irregular,iI,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,nominative,irregular,I,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,genitive,regular,eOrum,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,dative,regular,eIs,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,dative,irregular,iIs,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,dative,irregular,Is,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,accusative,regular,eOs,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,ablative,regular,eIs,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,ablative,irregular,iIs,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,ablative,irregular,Is,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,nominative,regular,eae,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,genitive,regular,eArum,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,dative,,,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,accusative,regular,eAs,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,ablative,,,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,nominative,regular,ea,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,genitive,regular,eOrum,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,dative,,,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,accusative,regular,ea,\\n5,\\\"is,ea,id\\\",demonstrative,,plural,ablative,,,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,nominative,regular,ille,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,genitive,regular,illIus,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,dative,regular,illI,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,accusative,regular,illum,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,ablative,regular,illO,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,nominative,regular,illa,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,genitive,,,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,dative,,,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,accusative,regular,illam,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,ablative,regular,illA,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,nominative,regular,illud,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,genitive,,,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,dative,,,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,accusative,regular,illud,\\n6,\\\"ille,illa,illud\\\",demonstrative,,singular,ablative,regular,illO,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,nominative,regular,illI,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,genitive,regular,illOrum,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,dative,regular,illIs,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,accusative,regular,illOs,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,ablative,regular,illIs,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,nominative,regular,illae,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,genitive,regular,illArum,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,dative,,,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,accusative,regular,illAs,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,ablative,,,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,nominative,regular,Illa,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,genitive,regular,illOrum,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,dative,,,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,accusative,regular,illa,\\n6,\\\"ille,illa,illud\\\",demonstrative,,plural,ablative,,,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,nominative,regular,ipse,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,genitive,regular,ipsIus,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,dative,regular,ipsI,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,accusative,regular,ipsum,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,ablative,regular,ipsO,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,nominative,regular,ipsa,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,genitive,,,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,dative,,,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,accusative,regular,ipsam,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,ablative,regular,ipsA,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,nominative,regular,ipsum,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,genitive,,,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,dative,,,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,accusative,regular,ipsum,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,singular,ablative,regular,ipsO,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,nominative,regular,ipsI,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,genitive,regular,ipsOrum,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,dative,regular,ipsIs,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,accusative,regular,ipsOs,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,ablative,regular,ipsIs,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,nominative,regular,ipsae,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,genitive,regular,ipsArum,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,dative,,,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,accusative,regular,ipsAs,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,ablative,,,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,nominative,regular,ipsa,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,genitive,regular,ipsOrum,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,dative,,,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,accusative,regular,ipsa,\\n7,\\\"ipse,ipsa,ipsum\\\",demonstrative,,plural,ablative,,,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,nominative,regular,iste,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,genitive,regular,istIus,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,dative,regular,istI,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,accusative,regular,istum,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,ablative,regular,istO,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,nominative,regular,ista,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,genitive,,,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,dative,,,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,accusative,regular,istam,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,ablative,regular,istA,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,nominative,regular,istud,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,genitive,,,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,dative,,,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,accusative,regular,istud,\\n8,\\\"iste,ista,istud\\\",demonstrative,,singular,ablative,regular,istO,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,nominative,regular,istI,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,genitive,regular,istOrum,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,dative,regular,istIs,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,accusative,regular,istOs,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,ablative,regular,istIs,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,nominative,regular,istae,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,genitive,regular,istArum,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,dative,,,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,accusative,regular,istAs,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,ablative,,,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,nominative,regular,ista,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,genitive,regular,istOrum,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,dative,,,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,accusative,regular,ista,\\n8,\\\"iste,ista,istud\\\",demonstrative,,plural,ablative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,nominative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,genitive,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,dative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,accusative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,ablative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,vocative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,nominative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,genitive,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,dative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,accusative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,ablative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,nominative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,genitive,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,dative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,accusative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,ablative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,singular,vocative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,nominative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,genitive,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,dative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,accusative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,ablative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,vocative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,nominative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,genitive,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,dative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,accusative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,ablative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,vocative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,nominative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,genitive,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,dative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,accusative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,ablative,,,\\n9,\\\"is,id,ea;Idem,eadem,idem;ille,illa,illud;ipse,ipsa,ipsum;iste,ista,istud\\\",demonstrative,,plural,vocative,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,nominative,regular,hIc,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,genitive,regular,huius,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,dative,regular,huic,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,accusative,regular,hunc,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,ablative,regular,hOc,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,vocative,regular,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,nominative,regular,haec,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,genitive,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,dative,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,accusative,regular,hanc,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,ablative,regular,hAc,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,vocative,regular,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,nominative,regular,hOc,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,genitive,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,dative,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,accusative,regular,hOc,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,ablative,regular,hOc,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,singular,vocative,regular,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,nominative,regular,hI,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,genitive,regular,hOrum,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,dative,regular,hIs,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,accusative,regular,hOs,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,ablative,regular,hIs,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,vocative,regular,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,nominative,regular,hae,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,genitive,regular,hArum,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,dative,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,accusative,regular,hAs,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,ablative,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,vocative,regular,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,nominative,regular,haec,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,genitive,regular,hOrum,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,dative,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,accusative,regular,haec,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,ablative,,,\\n10,\\\"hIc,haec,hOc\\\",demonstrative,,plural,vocative,regular,,\\n11,,relative,,singular,nominative,regular,quI,\\n11,,relative,,singular,genitive,regular,cuius,\\n11,,relative,,singular,genitive,irregular,quoius,3\\n11,,relative,,singular,dative,regular,cui,\\n11,,relative,,singular,dative,irregular,quoius,3\\n11,,relative,,singular,accusative,regular,quem,\\n11,,relative,,singular,ablative,regular,quO,\\n11,,relative,,singular,vocative,regular,,\\n11,,relative,,singular,nominative,regular,qua,\\n11,,relative,,singular,nominative,irregular,quae,\\n11,,relative,,singular,genitive,,,\\n11,,relative,,singular,dative,,,\\n11,,relative,,singular,accusative,regular,quam,\\n11,,relative,,singular,ablative,regular,quA,\\n11,,relative,,singular,vocative,regular,,\\n11,,relative,,singular,nominative,regular,quod,\\n11,,relative,,singular,genitive,,,\\n11,,relative,,singular,dative,,,\\n11,,relative,,singular,accusative,regular,quod,\\n11,,relative,,singular,ablative,regular,quO,\\n11,,relative,,singular,vocative,regular,,\\n11,,relative,,plural,nominative,regular,quI,\\n11,,relative,,plural,nominative,regular,quEs,3\\n11,,relative,,plural,genitive,regular,quOrum,\\n11,,relative,,plural,dative,regular,quibus,\\n11,,relative,,plural,dative,irregular,quIs,\\n11,,relative,,plural,accusative,regular,quOs,\\n11,,relative,,plural,ablative,regular,quibus,\\n11,,relative,,plural,ablative,irregular,quIs,\\n11,,relative,,plural,vocative,regular,,\\n11,,relative,,plural,nominative,regular,quae,\\n11,,relative,,plural,genitive,regular,quArum,\\n11,,relative,,plural,dative,,,\\n11,,relative,,plural,accusative,regular,quAs,\\n11,,relative,,plural,ablative,,,\\n11,,relative,,plural,vocative,regular,,\\n11,,relative,,plural,nominative,regular,quae,\\n11,,relative,,plural,genitive,regular,quorum,\\n11,,relative,,plural,dative,,,\\n11,,relative,,plural,accusative,regular,quae,\\n11,,relative,,plural,ablative,,,\\n11,,relative,,plural,vocative,regular,,\\n12,,interrogative,,singular,nominative,regular,quis,\\n12,,interrogative,,singular,genitive,regular,cuius,\\n12,,interrogative,,singular,dative,regular,cui,\\n12,,interrogative,,singular,accusative,regular,quem,\\n12,,interrogative,,singular,ablative,regular,quO,\\n12,,interrogative,,singular,vocative,regular,,\\n12,,interrogative,,singular,nominative,regular,quis,\\n12,,interrogative,,singular,genitive,regular,cuius,\\n12,,interrogative,,singular,dative,regular,cui,\\n12,,interrogative,,singular,accusative,regular,quem,\\n12,,interrogative,,singular,ablative,regular,quO,\\n12,,interrogative,,singular,vocative,regular,,\\n12,,interrogative,,singular,nominative,regular,quid,\\n12,,interrogative,,singular,genitive,,,\\n12,,interrogative,,singular,dative,,,\\n12,,interrogative,,singular,accusative,regular,quid,\\n12,,interrogative,,singular,ablative,regular,quO,\\n12,,interrogative,,singular,vocative,regular,,\\n12,,interrogative,,plural,nominative,regular,quI,\\n12,,interrogative,,plural,nominative,regular,quEs,3\\n12,,interrogative,,plural,genitive,regular,quOrum,\\n12,,interrogative,,plural,dative,regular,quibus,\\n12,,interrogative,,plural,dative,irregular,quIs,\\n12,,interrogative,,plural,accusative,regular,quOs,\\n12,,interrogative,,plural,ablative,regular,quibus,\\n12,,interrogative,,plural,ablative,irregular,quIs,\\n12,,interrogative,,plural,vocative,regular,,\\n12,,interrogative,,plural,nominative,regular,quae,\\n12,,interrogative,,plural,genitive,regular,quArum,\\n12,,interrogative,,plural,dative,,,\\n12,,interrogative,,plural,accusative,regular,quAs,\\n12,,interrogative,,plural,ablative,,,\\n12,,interrogative,,plural,vocative,regular,,\\n12,,interrogative,,plural,nominative,regular,quae,\\n12,,interrogative,,plural,genitive,regular,quorum,\\n12,,interrogative,,plural,dative,,,\\n12,,interrogative,,plural,accusative,regular,quae,\\n12,,interrogative,,plural,ablative,,,\\n12,,interrogative,,plural,vocative,regular,,\"","module.exports = \"Index,Text\\n1,Old forms.\\n2,Alternate forms.\\n3,\\\"The original forms of ferrem and ferre are fer-sēm and fer-se, respectively.\\\"\\n4,Gerundive (Future Passive Participle)\\n5,singular\\n6,\\\"The verbs nōlō and malō are compounds of volo. They therefore attach nō- or mā- to the beginning of each verb, in place of vo- or vu-. Exceptions to this are found in the present tense: nōlō nōlumus mālō mālumus nōn vīs nōn vultis māvīs māvultis nōn vult nōlunt māvult mālunt In addition, nōlō is the only verb of the three that has present and future tense imperative forms of the verb: nōlī, nōlīte, and nōlītō, nōlītōte, respectively.\\\"\\n7,An earlier form.\\n8,\\\"The perfect passive participle ending will change according to its subject's gender, number and case. Endings shown here are the masculine, feminine and neuter nominative singular.\\\"\\n9,A passive form of the verb that is used impersonally is itum est.\\n10,\\\"While the perfect form of this verb is regular, ii usually contracts to i when it is followed by an s. Thus, īstī, īstis and īsse\\\"\\n11,It is rare that the “v” appear as a form.\\n12,Used by early writers.\"","module.exports = \"Lemma,PrincipalParts,Form,Case,Footnote\\nfero,ferre_tuli_latus,lātum,accusative,5\\nfero,ferre_tuli_latus,lātū,dative,\\nfero,ferre_tuli_latus,lātū,ablative,\\neo,ire_ivi(ii)_itus,itum,accusative,5\\neo,ire_ivi(ii)_itus,itū,ablative,\\neo,ire_ivi(ii)_itus,itū,dative,\"","module.exports = \"Ending,Case,Footnote\\num,accusative,\\nū,ablative,\\n\"","module.exports = \"Index,Text\\r\\n2,Chiefly in poetry.\\r\\n3,\\\"In tenses based on the perfect stem (the perfect, pluperfect and future perfect of the Active voice) a v between two vowels is often lost with contraction of the two vowels, thus āvī to ā, ēvī to ē, ōvi to ō. Perfects in īvī often omit the v but rarely contract the vowels, except before ss or st, and sometimes in the third person. In addition to the use of v or u, the Active perfect stem can also be formed in a number of other ways, such as the addition of s to the root (eg carpsi), reduplication of the root (eg cecidi from cado), and simple lengthening of the vowel (eg vidī from video or legī from lego).\\\"\\r\\n4,\\\"Dic, duc, fac, and fer lack a final vowel in the imperative in classical Latin. The singular imperative of the verb sciō is always scītō, and the plural is usually scītōte.\\\"\\r\\n5,Common in epic poetry.\\r\\n6,Present in early Latin but chiefly confined to popular use until Livy and later writers.\\r\\n7,The verb fīō is a 4th conjugation verb that is irregular in only two forms: the present infinitive fierī and the imperfect subjunctive fierem.\"","module.exports = \"Index,Text\\r\\n1,Old forms.\\r\\n2,Alternate forms.\\r\\n3,\\\"The original forms of ferrem and ferre are fer-sēm and fer-se, respectively.\\\"\\r\\n4,Gerundive (Future Passive Participle)\\r\\n5,singular\\r\\n6,\\\"The verbs nōlō and malō are compounds of volo. They therefore attach nō- or mā- to the beginning of each verb, in place of vo- or vu-. Exceptions to this are found in the present tense: nōlō nōlumus mālō mālumus nōn vīs nōn vultis māvīs māvultis nōn vult nōlunt māvult mālunt In addition, nōlō is the only verb of the three that has present and future tense imperative forms of the verb: nōlī, nōlīte, and nōlītō, nōlītōte, respectively.\\\"\\r\\n7,An earlier form.\\r\\n8,\\\"The perfect passive participle ending will change according to its subject's gender, number and case. Endings shown here are the masculine, feminine and neuter nominative singular.\\\"\\r\\n9,A passive form of the verb that is used impersonally is itum est.\\r\\n10,\\\"While the perfect form of this verb is regular, ii usually contracts to i when it is followed by an s. Thus, īstī, īstis and īsse\\\"\\r\\n11,It is rare that the “v” appear as a form.\\r\\n12,Used by early writers.\"","module.exports = \"Lemma,PrincipalParts,Form,Voice,Mood,Tense,Number,Person,Footnote\\r\\nsum,esse_fui_futurus,sum,,indicative,present,singular,1st,\\r\\nsum,esse_fui_futurus,es,,indicative,present,singular,2nd,\\r\\nsum,esse_fui_futurus,est,,indicative,present,singular,3rd,\\r\\nsum,esse_fui_futurus,sumus,,indicative,present,plural,1st,\\r\\nsum,esse_fui_futurus,estis,,indicative,present,plural,2nd,\\r\\nsum,esse_fui_futurus,sunt,,indicative,present,plural,3rd,\\r\\nsum,esse_fui_futurus,sim,,subjunctive,present,singular,1st,\\r\\nsum,esse_fui_futurus,siem,,subjunctive,present,singular,1st,1\\r\\nsum,esse_fui_futurus,fuam,,subjunctive,present,singular,1st,1\\r\\nsum,esse_fui_futurus,sīs,,subjunctive,present,singular,2nd,\\r\\nsum,esse_fui_futurus,siēs,,subjunctive,present,singular,2nd,1\\r\\nsum,esse_fui_futurus,fuās,,subjunctive,present,singular,2nd,1\\r\\nsum,esse_fui_futurus,sit,,subjunctive,present,singular,3rd,\\r\\nsum,esse_fui_futurus,siet,,subjunctive,present,singular,3rd,1\\r\\nsum,esse_fui_futurus,fuat,,subjunctive,present,singular,3rd,1\\r\\nsum,esse_fui_futurus,sīmus,,subjunctive,present,plural,1st,\\r\\nsum,esse_fui_futurus,sītis,,subjunctive,present,plural,2nd,\\r\\nsum,esse_fui_futurus,sint,,subjunctive,present,plural,3rd,\\r\\nsum,esse_fui_futurus,sient,,subjunctive,present,plural,3rd,1\\r\\nsum,esse_fui_futurus,fuant,,subjunctive,present,plural,3rd,1\\r\\nsum,esse_fui_futurus,es,,imperative,present,singular,2nd,\\r\\nsum,esse_fui_futurus,este,,imperative,present,plural,2nd,\\r\\nsum,esse_fui_futurus,esse,,infinitive,present,,,\\r\\nsum,esse_fui_futurus,eram,,indicative,imperfect,singular,1st,\\r\\nsum,esse_fui_futurus,erās,,indicative,imperfect,singular,2nd,\\r\\nsum,esse_fui_futurus,erat,,indicative,imperfect,singular,3rd,\\r\\nsum,esse_fui_futurus,erāmus,,indicative,imperfect,plural,1st,\\r\\nsum,esse_fui_futurus,erātis,,indicative,imperfect,plural,2nd,\\r\\nsum,esse_fui_futurus,erant,,indicative,imperfect,plural,3rd,\\r\\nsum,esse_fui_futurus,essem,,subjunctive,imperfect,singular,1st,\\r\\nsum,esse_fui_futurus,forem,,subjunctive,imperfect,singular,1st,2\\r\\nsum,esse_fui_futurus,essēs,,subjunctive,imperfect,singular,2nd,\\r\\nsum,esse_fui_futurus,forēs,,subjunctive,imperfect,singular,2nd,2\\r\\nsum,esse_fui_futurus,esset,,subjunctive,imperfect,singular,3rd,\\r\\nsum,esse_fui_futurus,foret,,subjunctive,imperfect,singular,3rd,2\\r\\nsum,esse_fui_futurus,essēmus,,subjunctive,imperfect,plural,1st,\\r\\nsum,esse_fui_futurus,forēmus,,subjunctive,imperfect,plural,1st,2\\r\\nsum,esse_fui_futurus,essētis,,subjunctive,imperfect,plural,2nd,\\r\\nsum,esse_fui_futurus,forētis,,subjunctive,imperfect,plural,2nd,2\\r\\nsum,esse_fui_futurus,essent,,subjunctive,imperfect,plural,3rd,\\r\\nsum,esse_fui_futurus,forent,,subjunctive,imperfect,plural,3rd,2\\r\\nsum,esse_fui_futurus,erō,,indicative,future,singular,1st,\\r\\nsum,esse_fui_futurus,eris,,indicative,future,singular,2nd,\\r\\nsum,esse_fui_futurus,erit,,indicative,future,singular,3rd,\\r\\nsum,esse_fui_futurus,escit,,indicative,future,singular,3rd,1\\r\\nsum,esse_fui_futurus,erimus,,indicative,future,plural,1st,\\r\\nsum,esse_fui_futurus,eritis,,indicative,future,plural,2nd,\\r\\nsum,esse_fui_futurus,erunt,,indicative,future,plural,3rd,\\r\\nsum,esse_fui_futurus,escunt,,indicative,future,plural,3rd,1\\r\\nsum,esse_fui_futurus,estō,,imperative,future,singular,2nd,\\r\\nsum,esse_fui_futurus,estō,,imperative,future,singular,3rd,\\r\\nsum,esse_fui_futurus,estōte,,imperative,future,plural,2nd,\\r\\nsum,esse_fui_futurus,suntō,,imperative,future,plural,3rd,\\r\\nsum,esse_fui_futurus,futūrus esse,,infinitive,future,,,\\r\\nsum,esse_fui_futurus,fore,,infinitive,future,,,\\r\\nsum,esse_fui_futurus,fuī,,indicative,perfect,singular,1st,\\r\\nsum,esse_fui_futurus,fuistī,,indicative,perfect,singular,2nd,\\r\\nsum,esse_fui_futurus,fuit,,indicative,perfect,singular,3rd,\\r\\nsum,esse_fui_futurus,fuimus,,indicative,perfect,plural,1st,\\r\\nsum,esse_fui_futurus,fuistis,,indicative,perfect,plural,2nd,\\r\\nsum,esse_fui_futurus,fuērunt,,indicative,perfect,plural,3rd,\\r\\nsum,esse_fui_futurus,fuēre,,indicative,perfect,plural,3rd,\\r\\nsum,esse_fui_futurus,fuerim,,subjunctive,perfect,singular,1st,\\r\\nsum,esse_fui_futurus,fueris,,subjunctive,perfect,singular,2nd,\\r\\nsum,esse_fui_futurus,fuerit,,subjunctive,perfect,singular,3rd,\\r\\nsum,esse_fui_futurus,fuerimus,,subjunctive,perfect,plural,1st,\\r\\nsum,esse_fui_futurus,fūvimus,,subjunctive,perfect,plural,1st,\\r\\nsum,esse_fui_futurus,fueritis,,subjunctive,perfect,plural,2nd,\\r\\nsum,esse_fui_futurus,fuerint,,subjunctive,perfect,plural,3rd,\\r\\nsum,esse_fui_futurus,fuisse,,infinitive,perfect,,,\\r\\nsum,esse_fui_futurus,fueram,,indicative,pluperfect,singular,1st,\\r\\nsum,esse_fui_futurus,fuerās,,indicative,pluperfect,singular,2nd,\\r\\nsum,esse_fui_futurus,fuerat,,indicative,pluperfect,singular,3rd,\\r\\nsum,esse_fui_futurus,fuerāmus,,indicative,pluperfect,plural,1st,\\r\\nsum,esse_fui_futurus,fuerātis,,indicative,pluperfect,plural,2nd,\\r\\nsum,esse_fui_futurus,fuerant,,indicative,pluperfect,plural,3rd,\\r\\nsum,esse_fui_futurus,fuissem,,subjunctive,pluperfect,singular,1st,\\r\\nsum,esse_fui_futurus,fuissēs,,subjunctive,pluperfect,singular,2nd,\\r\\nsum,esse_fui_futurus,fuisset,,subjunctive,pluperfect,singular,3rd,\\r\\nsum,esse_fui_futurus,fūvisset,,subjunctive,pluperfect,singular,3rd,\\r\\nsum,esse_fui_futurus,fuissēmus,,subjunctive,pluperfect,plural,1st,\\r\\nsum,esse_fui_futurus,fuissētis,,subjunctive,pluperfect,plural,2nd,\\r\\nsum,esse_fui_futurus,fuissent,,subjunctive,pluperfect,plural,3rd,\\r\\nsum,esse_fui_futurus,fuerō,,indicative,future_perfect,singular,1st,\\r\\nsum,esse_fui_futurus,fueris,,indicative,future_perfect,singular,2nd,\\r\\nsum,esse_fui_futurus,fuerit,,indicative,future_perfect,singular,3rd,\\r\\nsum,esse_fui_futurus,fuerimus,,indicative,future_perfect,plural,1st,\\r\\nsum,esse_fui_futurus,fueritis,,indicative,future_perfect,plural,2nd,\\r\\nsum,esse_fui_futurus,fuerint,,indicative,future_perfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,ferō,active,indicative,present,singular,1st,\\r\\nfero,ferre_tuli_latus,fers,active,indicative,present,singular,2nd,\\r\\nfero,ferre_tuli_latus,fert,active,indicative,present,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferimus,active,indicative,present,plural,1st,\\r\\nfero,ferre_tuli_latus,fertis,active,indicative,present,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferunt,active,indicative,present,plural,3rd,\\r\\nfero,ferre_tuli_latus,feram,active,subjunctive,present,singular,1st,\\r\\nfero,ferre_tuli_latus,ferās,active,subjunctive,present,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferat,active,subjunctive,present,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferāmus,active,subjunctive,present,plural,1st,\\r\\nfero,ferre_tuli_latus,ferātis,active,subjunctive,present,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferant,active,subjunctive,present,plural,3rd,\\r\\nfero,ferre_tuli_latus,fer,active,imperative,present,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferte,active,imperative,present,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferre,active,infinitive,present,,,3\\r\\nfero,ferre_tuli_latus,feror,passive,indicative,present,singular,1st,\\r\\nfero,ferre_tuli_latus,ferris,passive,indicative,present,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferre,passive,indicative,present,singular,2nd,\\r\\nfero,ferre_tuli_latus,fertur,passive,indicative,present,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferimur,passive,indicative,present,plural,1st,\\r\\nfero,ferre_tuli_latus,feriminī,passive,indicative,present,plural,2nd,\\r\\nfero,ferre_tuli_latus,feruntur,passive,indicative,present,plural,3rd,\\r\\nfero,ferre_tuli_latus,ferar,passive,subjunctive,present,singular,1st,\\r\\nfero,ferre_tuli_latus,ferāris,passive,subjunctive,present,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferāre,passive,subjunctive,present,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferātur,passive,subjunctive,present,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferāmur,passive,subjunctive,present,plural,1st,\\r\\nfero,ferre_tuli_latus,ferāminī,passive,subjunctive,present,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferantur,passive,subjunctive,present,plural,3rd,\\r\\nfero,ferre_tuli_latus,ferre,passive,imperative,present,singular,2nd,\\r\\nfero,ferre_tuli_latus,feriminī,passive,imperative,present,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferrī,passive,infinitive,present,,,\\r\\nfero,ferre_tuli_latus,ferēbam,active,indicative,imperfect,singular,1st,\\r\\nfero,ferre_tuli_latus,ferēbās,active,indicative,imperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferēbat,active,indicative,imperfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferēbāmus,active,indicative,imperfect,plural,1st,\\r\\nfero,ferre_tuli_latus,ferēbātis,active,indicative,imperfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferēbant,active,indicative,imperfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,ferrem,active,subjunctive,imperfect,singular,1st,3\\r\\nfero,ferre_tuli_latus,ferrēs,active,subjunctive,imperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferret,active,subjunctive,imperfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferrēmus,active,subjunctive,imperfect,plural,1st,\\r\\nfero,ferre_tuli_latus,ferrētis,active,subjunctive,imperfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferrent,active,subjunctive,imperfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,ferēbar,passive,indicative,imperfect,singular,1st,\\r\\nfero,ferre_tuli_latus,ferēbāris,passive,indicative,imperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferēbāre,passive,indicative,imperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferēbātur,passive,indicative,imperfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferēbāmur,passive,indicative,imperfect,plural,1st,\\r\\nfero,ferre_tuli_latus,ferēbāminī,passive,indicative,imperfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferēbantur,passive,indicative,imperfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,ferrer,passive,subjunctive,imperfect,singular,1st,\\r\\nfero,ferre_tuli_latus,ferrēris,passive,subjunctive,imperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferrēre,passive,subjunctive,imperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferrētur,passive,subjunctive,imperfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferrēmur,passive,subjunctive,imperfect,plural,1st,\\r\\nfero,ferre_tuli_latus,ferrēminī,passive,subjunctive,imperfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferrentur,passive,subjunctive,imperfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,feram,active,indicative,future,singular,1st,\\r\\nfero,ferre_tuli_latus,ferēs,active,indicative,future,singular,2nd,\\r\\nfero,ferre_tuli_latus,feret,active,indicative,future,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferēmus,active,indicative,future,plural,1st,\\r\\nfero,ferre_tuli_latus,ferētis,active,indicative,future,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferent,active,indicative,future,plural,3rd,\\r\\nfero,ferre_tuli_latus,ferar,passive,indicative,future,singular,1st,\\r\\nfero,ferre_tuli_latus,ferēris,passive,indicative,future,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferēre,passive,indicative,future,singular,2nd,\\r\\nfero,ferre_tuli_latus,ferētur,passive,indicative,future,singular,3rd,\\r\\nfero,ferre_tuli_latus,ferēmur,passive,indicative,future,plural,1st,\\r\\nfero,ferre_tuli_latus,ferēminī,passive,indicative,future,plural,2nd,\\r\\nfero,ferre_tuli_latus,ferentur,passive,indicative,future,plural,3rd,\\r\\nfero,ferre_tuli_latus,fertō,active,imperative,future,singular,2nd,\\r\\nfero,ferre_tuli_latus,fertōte,active,imperative,future,singular,3rd,\\r\\nfero,ferre_tuli_latus,fertō,active,imperative,future,plural,2nd,\\r\\nfero,ferre_tuli_latus,feruntō,active,imperative,future,plural,3rd,\\r\\nfero,ferre_tuli_latus,fertor,passive,imperative,future,singular,2nd,\\r\\nfero,ferre_tuli_latus,fertor,passive,imperative,future,plural,2nd,\\r\\nfero,ferre_tuli_latus,feruntor,passive,imperative,future,plural,3rd,\\r\\nfero,ferre_tuli_latus,latūrus esse,active,infinitive,future,,,\\r\\nfero,ferre_tuli_latus,latūm īrī,passive,infinitive,future,,,\\r\\nfero,ferre_tuli_latus,tulī,active,indicative,perfect,singular,1st,\\r\\nfero,ferre_tuli_latus,tulistī,active,indicative,perfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,tulit,active,indicative,perfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,tulimus,active,indicative,perfect,plural,1st,\\r\\nfero,ferre_tuli_latus,tulistis,active,indicative,perfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,tulērunt,active,indicative,perfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,tulerim,active,subjunctive,perfect,singular,1st,\\r\\nfero,ferre_tuli_latus,tulerīs,active,subjunctive,perfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,tulerit,active,subjunctive,perfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,tulerimus,active,subjunctive,perfect,plural,1st,\\r\\nfero,ferre_tuli_latus,tuleritis,active,subjunctive,perfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,tulerint,active,subjunctive,perfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) sum\\\",passive,indicative,perfect,singular,1st,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) es\\\",passive,indicative,perfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) est\\\",passive,indicative,perfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) sumus\\\",passive,indicative,perfect,plural,1st,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) estis\\\",passive,indicative,perfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) sunt\\\",passive,indicative,perfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) sim\\\",passive,subjunctive,perfect,singular,1st,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) sīs\\\",passive,subjunctive,perfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um)sit\\\",passive,subjunctive,perfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) sīmus\\\",passive,subjunctive,perfect,plural,1st,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) sītis\\\",passive,subjunctive,perfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a)sint\\\",passive,subjunctive,perfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,tulisse,active,infinitive,perfect,,,\\r\\nfero,ferre_tuli_latus,lātus esse,passive,infinitive,perfect,,,\\r\\nfero,ferre_tuli_latus,tuleram,active,indicative,pluperfect,singular,1st,\\r\\nfero,ferre_tuli_latus,tulerās,active,indicative,pluperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,tulerat,active,indicative,pluperfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,tulerāmus,active,indicative,pluperfect,plural,1st,\\r\\nfero,ferre_tuli_latus,tulerātis,active,indicative,pluperfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,tulerant,active,indicative,pluperfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,tulissem,active,subjunctive,pluperfect,singular,1st,\\r\\nfero,ferre_tuli_latus,tulissēs,active,subjunctive,pluperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,tulisset,active,subjunctive,pluperfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,tulissēmus,active,subjunctive,pluperfect,plural,1st,\\r\\nfero,ferre_tuli_latus,tulissētis,active,subjunctive,pluperfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,tulissent,active,subjunctive,pluperfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) eram\\\",passive,indicative,pluperfect,singular,1st,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) erās\\\",passive,indicative,pluperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) erat\\\",passive,indicative,pluperfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, a) erāmus\\\",passive,indicative,pluperfect,plural,1st,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, a) erātis\\\",passive,indicative,pluperfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, a) erant\\\",passive,indicative,pluperfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) essem\\\",passive,subjunctive,pluperfect,singular,1st,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) essēs\\\",passive,subjunctive,pluperfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) esset\\\",passive,subjunctive,pluperfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) essēmus\\\",passive,subjunctive,pluperfect,plural,1st,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) essētis\\\",passive,subjunctive,pluperfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) essent\\\",passive,subjunctive,pluperfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,tulerō,active,indicative,future_perfect,singular,1st,\\r\\nfero,ferre_tuli_latus,tuleris,active,indicative,future_perfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,tulerit,active,indicative,future_perfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,tulerimus,active,indicative,future_perfect,plural,1st,\\r\\nfero,ferre_tuli_latus,tuleritis,active,indicative,future_perfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,tulerint,active,indicative,future_perfect,plural,3rd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) erō\\\",passive,indicative,future_perfect,singular,1st,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) eris\\\",passive,indicative,future_perfect,singular,2nd,\\r\\nfero,ferre_tuli_latus,\\\"lātus (-a, -um) erit\\\",passive,indicative,future_perfect,singular,3rd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) erimus\\\",passive,indicative,future_perfect,plural,1st,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) ēritis\\\",passive,indicative,future_perfect,plural,2nd,\\r\\nfero,ferre_tuli_latus,\\\"latī (-ae, -a) ērunt\\\",passive,indicative,future_perfect,plural,3rd,\\r\\nvolo,velle_volui_-,volō,,indicative,present,singular,1st,\\r\\nvolo,velle_volui_-,vīs,,indicative,present,singular,2nd,\\r\\nvolo,velle_volui_-,vult,,indicative,present,singular,3rd,\\r\\nvolo,velle_volui_-,volt,,indicative,present,singular,3rd,7\\r\\nvolo,velle_volui_-,volumus,,indicative,present,plural,1st,\\r\\nvolo,velle_volui_-,vultis,,indicative,present,plural,2nd,\\r\\nvolo,velle_volui_-,volunt,,indicative,present,plural,3rd,\\r\\nvolo,velle_volui_-,velim,,subjunctive,present,singular,1st,\\r\\nvolo,velle_volui_-,velīs,,subjunctive,present,singular,2nd,\\r\\nvolo,velle_volui_-,velit,,subjunctive,present,singular,3rd,\\r\\nvolo,velle_volui_-,velīmus,,subjunctive,present,plural,1st,\\r\\nvolo,velle_volui_-,velītis,,subjunctive,present,plural,2nd,\\r\\nvolo,velle_volui_-,velint,,subjunctive,present,plural,3rd,\\r\\nvolo,velle_volui_-,velle,,infinitive,present,,,\\r\\nvolo,velle_volui_-,volēbam,,indicative,imperfect,singular,1st,\\r\\nvolo,velle_volui_-,volēbās,,indicative,imperfect,singular,2nd,\\r\\nvolo,velle_volui_-,volēbat,,indicative,imperfect,singular,3rd,\\r\\nvolo,velle_volui_-,volēbāmus,,indicative,imperfect,plural,1st,\\r\\nvolo,velle_volui_-,volēbātis,,indicative,imperfect,plural,2nd,\\r\\nvolo,velle_volui_-,volēbant,,indicative,imperfect,plural,3rd,\\r\\nvolo,velle_volui_-,vellem,,subjunctive,imperfect,singular,1st,\\r\\nvolo,velle_volui_-,vellēs,,subjunctive,imperfect,singular,2nd,\\r\\nvolo,velle_volui_-,vellet,,subjunctive,imperfect,singular,3rd,\\r\\nvolo,velle_volui_-,vellēmus,,subjunctive,imperfect,plural,1st,\\r\\nvolo,velle_volui_-,vellētis,,subjunctive,imperfect,plural,2nd,\\r\\nvolo,velle_volui_-,vellent,,subjunctive,imperfect,plural,3rd,\\r\\nvolo,velle_volui_-,volam,,indicative,future,singular,1st,\\r\\nvolo,velle_volui_-,volēs,,indicative,future,singular,2nd,\\r\\nvolo,velle_volui_-,volet,,indicative,future,singular,3rd,\\r\\nvolo,velle_volui_-,volēmus,,indicative,future,plural,1st,\\r\\nvolo,velle_volui_-,volētis,,indicative,future,plural,2nd,\\r\\nvolo,velle_volui_-,volent,,indicative,future,plural,3rd,\\r\\nvolo,velle_volui_-,voluī,,indicative,perfect,singular,1st,\\r\\nvolo,velle_volui_-,voluistī,,indicative,perfect,singular,2nd,\\r\\nvolo,velle_volui_-,voluit,,indicative,perfect,singular,3rd,\\r\\nvolo,velle_volui_-,voluimus,,indicative,perfect,plural,1st,\\r\\nvolo,velle_volui_-,voluistis,,indicative,perfect,plural,2nd,\\r\\nvolo,velle_volui_-,voluērunt,,indicative,perfect,plural,3rd,\\r\\nvolo,velle_volui_-,voluerim,,subjunctive,perfect,singular,1st,\\r\\nvolo,velle_volui_-,voluerīs,,subjunctive,perfect,singular,2nd,\\r\\nvolo,velle_volui_-,voluerit,,subjunctive,perfect,singular,3rd,\\r\\nvolo,velle_volui_-,voluerīmus,,subjunctive,perfect,plural,1st,\\r\\nvolo,velle_volui_-,voluerītis,,subjunctive,perfect,plural,2nd,\\r\\nvolo,velle_volui_-,voluerint,,subjunctive,perfect,plural,3rd,\\r\\nvolo,velle_volui_-,voluisse,,infinitive,perfect,,,\\r\\nvolo,velle_volui_-,volueram,,indicative,pluperfect,singular,1st,\\r\\nvolo,velle_volui_-,voluerās,,indicative,pluperfect,singular,2nd,\\r\\nvolo,velle_volui_-,voluerat,,indicative,pluperfect,singular,3rd,\\r\\nvolo,velle_volui_-,voluerāmus,,indicative,pluperfect,plural,1st,\\r\\nvolo,velle_volui_-,voluerātis,,indicative,pluperfect,plural,2nd,\\r\\nvolo,velle_volui_-,voluerant,,indicative,pluperfect,plural,3rd,\\r\\nvolo,velle_volui_-,voluissem,,subjunctive,pluperfect,singular,1st,\\r\\nvolo,velle_volui_-,voluissēs,,subjunctive,pluperfect,singular,2nd,\\r\\nvolo,velle_volui_-,voluisset,,subjunctive,pluperfect,singular,3rd,\\r\\nvolo,velle_volui_-,voluissēmus,,subjunctive,pluperfect,plural,1st,\\r\\nvolo,velle_volui_-,voluissētis,,subjunctive,pluperfect,plural,2nd,\\r\\nvolo,velle_volui_-,voluissent,,subjunctive,pluperfect,plural,3rd,\\r\\nvolo,velle_volui_-,voluerō,,indicative,future_perfect,singular,1st,\\r\\nvolo,velle_volui_-,volueris,,indicative,future_perfect,singular,2nd,\\r\\nvolo,velle_volui_-,voluerit,,indicative,future_perfect,singular,3rd,\\r\\nvolo,velle_volui_-,voluerimus,,indicative,future_perfect,plural,1st,\\r\\nvolo,velle_volui_-,volueritis,,indicative,future_perfect,plural,2nd,\\r\\nvolo,velle_volui_-,voluerunt,,indicative,future_perfect,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,eō,,indicative,present,singular,1st,\\r\\neo,ire_ivi(ii)_itus,īs,,indicative,present,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,it,,indicative,present,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,īmus,,indicative,present,plural,1st,\\r\\neo,ire_ivi(ii)_itus,ītis,,indicative,present,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,eunt,,indicative,present,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,eam,,subjunctive,present,singular,1st,\\r\\neo,ire_ivi(ii)_itus,eās,,subjunctive,present,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,eat,,subjunctive,present,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,eāmus,,subjunctive,present,plural,1st,\\r\\neo,ire_ivi(ii)_itus,eātis,,subjunctive,present,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,eant,,subjunctive,present,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,ī,,imperative,present,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,īte,,imperative,present,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,īre,,infinitive,present,,,\\r\\neo,ire_ivi(ii)_itus,ībam,,indicative,imperfect,singular,1st,\\r\\neo,ire_ivi(ii)_itus,ības,,indicative,imperfect,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,ībat,,indicative,imperfect,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,ībāmus,,indicative,imperfect,plural,1st,\\r\\neo,ire_ivi(ii)_itus,ībātis,,indicative,imperfect,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,ībant,,indicative,imperfect,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,īrem,,subjunctive,imperfect,singular,1st,\\r\\neo,ire_ivi(ii)_itus,īrēs,,subjunctive,imperfect,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,īret,,subjunctive,imperfect,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,īrēmus,,subjunctive,imperfect,plural,1st,\\r\\neo,ire_ivi(ii)_itus,īrētis,,subjunctive,imperfect,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,īrent,,subjunctive,imperfect,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,ībō,,indicative,future,singular,1st,\\r\\neo,ire_ivi(ii)_itus,ībis,,indicative,future,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,ībit,,indicative,future,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,ībimus,,indicative,future,plural,1st,\\r\\neo,ire_ivi(ii)_itus,ībitis,,indicative,future,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,ībunt,,indicative,future,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,ītō,,imperative,future,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,ītō,,imperative,future,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,ītōte,,imperative,future,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,euntō,,imperative,future,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,itūrus esse,,infinitive,future,,,\\r\\neo,ire_ivi(ii)_itus,iī,,indicative,perfect,singular,1st,10\\r\\neo,ire_ivi(ii)_itus,īvī,,indicative,perfect,singular,1st,11\\r\\neo,ire_ivi(ii)_itus,īstī,,indicative,perfect,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,iit,,indicative,perfect,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,iimus,,indicative,perfect,plural,1st,\\r\\neo,ire_ivi(ii)_itus,īstis,,indicative,perfect,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,iērunt,,indicative,perfect,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,ierim,,subjunctive,perfect,singular,1st,\\r\\neo,ire_ivi(ii)_itus,ierīs,,subjunctive,perfect,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,ierit,,subjunctive,perfect,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,ierīmus,,subjunctive,perfect,plural,1st,\\r\\neo,ire_ivi(ii)_itus,ierītis,,subjunctive,perfect,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,ierint,,subjunctive,perfect,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,īsse,,infinitive,perfect,,,10\\r\\neo,ire_ivi(ii)_itus,īvisse,,infinitive,perfect,,,\\r\\neo,ire_ivi(ii)_itus,ieram,,indicative,pluperfect,singular,1st,\\r\\neo,ire_ivi(ii)_itus,īveram,,indicative,pluperfect,singular,1st,\\r\\neo,ire_ivi(ii)_itus,ierās,,indicative,pluperfect,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,ierat,,indicative,pluperfect,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,ierāmus,,indicative,pluperfect,plural,1st,\\r\\neo,ire_ivi(ii)_itus,ierātis,,indicative,pluperfect,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,ierant,,indicative,pluperfect,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,īssem,,subjunctive,pluperfect,singular,1st,\\r\\neo,ire_ivi(ii)_itus,īssēs,,subjunctive,pluperfect,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,īsset,,subjunctive,pluperfect,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,īssēmus,,subjunctive,pluperfect,plural,1st,\\r\\neo,ire_ivi(ii)_itus,īssētis,,subjunctive,pluperfect,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,īssent,,subjunctive,pluperfect,plural,3rd,\\r\\neo,ire_ivi(ii)_itus,ierō,,indicative,future_perfect,singular,1st,\\r\\neo,ire_ivi(ii)_itus,īverō,,indicative,future_perfect,singular,1st,\\r\\neo,ire_ivi(ii)_itus,ieris,,indicative,future_perfect,singular,2nd,\\r\\neo,ire_ivi(ii)_itus,ierit,,indicative,future_perfect,singular,3rd,\\r\\neo,ire_ivi(ii)_itus,ierimus,,indicative,future_perfect,plural,1st,\\r\\neo,ire_ivi(ii)_itus,ieritis,,indicative,future_perfect,plural,2nd,\\r\\neo,ire_ivi(ii)_itus,ierunt,,indicative,future_perfect,plural,3rd,\\r\\npossum,posse_potui_-,possum,,indicative,present,singular,1st,\\r\\npossum,posse_potui_-,\\\"potis, -e sum\\\",,indicative,present,singular,1st,12\\r\\npossum,posse_potui_-,potes,,indicative,present,singular,2nd,\\r\\npossum,posse_potui_-,\\\"potis, -e es\\\",,indicative,present,singular,2nd,12\\r\\npossum,posse_potui_-,potest,,indicative,present,singular,3rd,\\r\\npossum,posse_potui_-,\\\"potis, -e est\\\",,indicative,present,singular,3rd,12\\r\\npossum,posse_potui_-,possumus,,indicative,present,plural,1st,\\r\\npossum,posse_potui_-,\\\"potes, -ia sumus\\\",,indicative,present,plural,1st,12\\r\\npossum,posse_potui_-,potestis,,indicative,present,plural,2nd,\\r\\npossum,posse_potui_-,\\\"potes, -ia estis\\\",,indicative,present,plural,2nd,12\\r\\npossum,posse_potui_-,possunt,,indicative,present,plural,3rd,\\r\\npossum,posse_potui_-,\\\"potes, -ia sunt\\\",,indicative,present,plural,3rd,12\\r\\npossum,posse_potui_-,possim,,subjunctive,present,singular,1st,\\r\\npossum,posse_potui_-,possiem,,subjunctive,present,singular,1st,12\\r\\npossum,posse_potui_-,possīs,,subjunctive,present,singular,2nd,\\r\\npossum,posse_potui_-,possiēs,,subjunctive,present,singular,2nd,\\r\\npossum,posse_potui_-,possit,,subjunctive,present,singular,3rd,\\r\\npossum,posse_potui_-,postisit,,subjunctive,present,singular,3rd,12\\r\\npossum,posse_potui_-,possiet,,subjunctive,present,singular,3rd,\\r\\npossum,posse_potui_-,possīmus,,subjunctive,present,plural,1st,\\r\\npossum,posse_potui_-,possiemus,,subjunctive,present,plural,1st,\\r\\npossum,posse_potui_-,possītis,,subjunctive,present,plural,2nd,\\r\\npossum,posse_potui_-,possietis,,subjunctive,present,plural,2nd,\\r\\npossum,posse_potui_-,possint,,subjunctive,present,plural,3rd,\\r\\npossum,posse_potui_-,possient,,subjunctive,present,plural,3rd,\\r\\npossum,posse_potui_-,posse,,infinitive,present,,,\\r\\npossum,posse_potui_-,potesse,,infinitive,present,,,12\\r\\npossum,posse_potui_-,poteram,,indicative,imperfect,singular,1st,\\r\\npossum,posse_potui_-,poterās,,indicative,imperfect,singular,2nd,\\r\\npossum,posse_potui_-,poterat,,indicative,imperfect,singular,3rd,\\r\\npossum,posse_potui_-,poterāmus,,indicative,imperfect,plural,1st,\\r\\npossum,posse_potui_-,poterātis,,indicative,imperfect,plural,2nd,\\r\\npossum,posse_potui_-,poterant,,indicative,imperfect,plural,3rd,\\r\\npossum,posse_potui_-,possem,,subjunctive,imperfect,singular,1st,\\r\\npossum,posse_potui_-,possēs,,subjunctive,imperfect,singular,2nd,\\r\\npossum,posse_potui_-,posset,,subjunctive,imperfect,singular,3rd,\\r\\npossum,posse_potui_-,possēmus,,subjunctive,imperfect,plural,1st,\\r\\npossum,posse_potui_-,possētis,,subjunctive,imperfect,plural,2nd,\\r\\npossum,posse_potui_-,possent,,subjunctive,imperfect,plural,3rd,\\r\\npossum,posse_potui_-,poterō,,indicative,future,singular,1st,\\r\\npossum,posse_potui_-,poteris,,indicative,future,singular,2nd,\\r\\npossum,posse_potui_-,poterit,,indicative,future,singular,3rd,\\r\\npossum,posse_potui_-,poterimus,,indicative,future,plural,1st,\\r\\npossum,posse_potui_-,poteritis,,indicative,future,plural,2nd,\\r\\npossum,posse_potui_-,poterunt,,indicative,future,plural,3rd,\\r\\npossum,posse_potui_-,poterint,,indicative,future,plural,3rd,12\\r\\npossum,posse_potui_-,potuī,,indicative,perfect,singular,1st,\\r\\npossum,posse_potui_-,potuistī,,indicative,perfect,singular,2nd,\\r\\npossum,posse_potui_-,potuit,,indicative,perfect,singular,3rd,\\r\\npossum,posse_potui_-,potuimus,,indicative,perfect,plural,1st,\\r\\npossum,posse_potui_-,potuistis,,indicative,perfect,plural,2nd,\\r\\npossum,posse_potui_-,potuērunt,,indicative,perfect,plural,3rd,\\r\\npossum,posse_potui_-,potuerim,,subjunctive,perfect,singular,1st,\\r\\npossum,posse_potui_-,potuerīs,,subjunctive,perfect,singular,2nd,\\r\\npossum,posse_potui_-,potuerit,,subjunctive,perfect,singular,3rd,\\r\\npossum,posse_potui_-,potuerīmus,,subjunctive,perfect,plural,1st,\\r\\npossum,posse_potui_-,potuerītis,,subjunctive,perfect,plural,2nd,\\r\\npossum,posse_potui_-,potuerint,,subjunctive,perfect,plural,3rd,\\r\\npossum,posse_potui_-,potuisse,,infinitive,perfect,,,\\r\\npossum,posse_potui_-,potueram,,indicative,pluperfect,singular,1st,\\r\\npossum,posse_potui_-,potuerās,,indicative,pluperfect,singular,2nd,\\r\\npossum,posse_potui_-,potuerat,,indicative,pluperfect,singular,3rd,\\r\\npossum,posse_potui_-,potuerāmus,,indicative,pluperfect,plural,1st,\\r\\npossum,posse_potui_-,potuerātis,,indicative,pluperfect,plural,2nd,\\r\\npossum,posse_potui_-,potuerant,,indicative,pluperfect,plural,3rd,\\r\\npossum,posse_potui_-,potuissem,,subjunctive,pluperfect,singular,1st,\\r\\npossum,posse_potui_-,potuissēs,,subjunctive,pluperfect,singular,2nd,\\r\\npossum,posse_potui_-,potuisset,,subjunctive,pluperfect,singular,3rd,\\r\\npossum,posse_potui_-,potuissēmus,,subjunctive,pluperfect,plural,1st,\\r\\npossum,posse_potui_-,potuissētis,,subjunctive,pluperfect,plural,2nd,\\r\\npossum,posse_potui_-,potuissent,,subjunctive,pluperfect,plural,3rd,\\r\\npossum,posse_potui_-,potuerō,,indicative,future_perfect,singular,1st,\\r\\npossum,posse_potui_-,potueris,,indicative,future_perfect,singular,2nd,\\r\\npossum,posse_potui_-,potuerit,,indicative,future_perfect,singular,3rd,\\r\\npossum,posse_potui_-,potuerimus,,indicative,future_perfect,plural,1st,\\r\\npossum,posse_potui_-,potueritis,,indicative,future_perfect,plural,2nd,\\r\\npossum,posse_potui_-,potuerint,,indicative,future_perfect,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,prosum,,indicative,present,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,prodes,,indicative,present,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,prodest,,indicative,present,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,prosumus,,indicative,present,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,prodestis,,indicative,present,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,prosunt,,indicative,present,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,prosim,,subjunctive,present,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,prosiem,,subjunctive,present,singular,1st,1\\r\\nprosum,prodesse_profui_profuturus,profuam,,subjunctive,present,singular,1st,1\\r\\nprosum,prodesse_profui_profuturus,prosīs,,subjunctive,present,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,prosiēs,,subjunctive,present,singular,2nd,1\\r\\nprosum,prodesse_profui_profuturus,profuās,,subjunctive,present,singular,2nd,1\\r\\nprosum,prodesse_profui_profuturus,prosit,,subjunctive,present,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,prosiet,,subjunctive,present,singular,3rd,1\\r\\nprosum,prodesse_profui_profuturus,profuat,,subjunctive,present,singular,3rd,1\\r\\nprosum,prodesse_profui_profuturus,prosīmus,,subjunctive,present,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,prosītis,,subjunctive,present,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,prosint,,subjunctive,present,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,prosient,,subjunctive,present,plural,3rd,1\\r\\nprosum,prodesse_profui_profuturus,profuant,,subjunctive,present,plural,3rd,1\\r\\nprosum,prodesse_profui_profuturus,prodes,,imperative,present,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,prodeste,,imperative,present,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,prodesse,,infinitive,present,,,\\r\\nprosum,prodesse_profui_profuturus,proderam,,indicative,imperfect,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,proderās,,indicative,imperfect,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,proderat,,indicative,imperfect,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,proderāmus,,indicative,imperfect,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,proderātis,,indicative,imperfect,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,proderant,,indicative,imperfect,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,prodessem,,subjunctive,imperfect,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,proforem,,subjunctive,imperfect,singular,1st,2\\r\\nprosum,prodesse_profui_profuturus,prodessēs,,subjunctive,imperfect,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,proforēs,,subjunctive,imperfect,singular,2nd,2\\r\\nprosum,prodesse_profui_profuturus,prodesset,,subjunctive,imperfect,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,proforet,,subjunctive,imperfect,singular,3rd,2\\r\\nprosum,prodesse_profui_profuturus,prodessēmus,,subjunctive,imperfect,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,proforēmus,,subjunctive,imperfect,plural,1st,2\\r\\nprosum,prodesse_profui_profuturus,prodessētis,,subjunctive,imperfect,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,proforētis,,subjunctive,imperfect,plural,2nd,2\\r\\nprosum,prodesse_profui_profuturus,prodessent,,subjunctive,imperfect,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,proforent,,subjunctive,imperfect,plural,3rd,2\\r\\nprosum,prodesse_profui_profuturus,proderō,,indicative,future,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,proderis,,indicative,future,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,proderit,,indicative,future,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,prodescit,,indicative,future,singular,3rd,1\\r\\nprosum,prodesse_profui_profuturus,proderimus,,indicative,future,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,proderitis,,indicative,future,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,proderunt,,indicative,future,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,prodescunt,,indicative,future,plural,3rd,1\\r\\nprosum,prodesse_profui_profuturus,prodestō,,imperative,future,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,prodestō,,imperative,future,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,prodestōte,,imperative,future,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,prosuntō,,imperative,future,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,profutūrus esse,,infinitive,future,,,\\r\\nprosum,prodesse_profui_profuturus,profore,,infinitive,future,,,\\r\\nprosum,prodesse_profui_profuturus,profuī,,indicative,perfect,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,profuistī,,indicative,perfect,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuit,,indicative,perfect,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuimus,,indicative,perfect,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,profuistis,,indicative,perfect,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuērunt,,indicative,perfect,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuēre,,indicative,perfect,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuerim,,subjunctive,perfect,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,profueris,,subjunctive,perfect,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuerit,,subjunctive,perfect,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuerimus,,subjunctive,perfect,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,profūvimus,,subjunctive,perfect,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,profueritis,,subjunctive,perfect,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuerint,,subjunctive,perfect,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuisse,,infinitive,perfect,,,\\r\\nprosum,prodesse_profui_profuturus,profueram,,indicative,pluperfect,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,profuerās,,indicative,pluperfect,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuerat,,indicative,pluperfect,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuerāmus,,indicative,pluperfect,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,profuerātis,,indicative,pluperfect,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuerant,,indicative,pluperfect,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuissem,,subjunctive,pluperfect,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,profuissēs,,subjunctive,pluperfect,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuisset,,subjunctive,pluperfect,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,profūvisset,,subjunctive,pluperfect,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuissēmus,,subjunctive,pluperfect,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,profuissētis,,subjunctive,pluperfect,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuissent,,subjunctive,pluperfect,plural,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuerō,,indicative,future_perfect,singular,1st,\\r\\nprosum,prodesse_profui_profuturus,profueris,,indicative,future_perfect,singular,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuerit,,indicative,future_perfect,singular,3rd,\\r\\nprosum,prodesse_profui_profuturus,profuerimus,,indicative,future_perfect,plural,1st,\\r\\nprosum,prodesse_profui_profuturus,profueritis,,indicative,future_perfect,plural,2nd,\\r\\nprosum,prodesse_profui_profuturus,profuerint,,indicative,future_perfect,plural,3rd,\\r\\nabsum,abesse_afui_afuturus,absum,,indicative,present,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,abes,,indicative,present,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abest,,indicative,present,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,absumus,,indicative,present,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,abestis,,indicative,present,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,absunt,,indicative,present,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,absim,,subjunctive,present,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,absiem,,subjunctive,present,singular,1st,1\\r\\nabsum,abesse_abfui_abfuturus,abfuam,,subjunctive,present,singular,1st,1\\r\\nabsum,abesse_abfui_abfuturus,absīs,,subjunctive,present,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,absiēs,,subjunctive,present,singular,2nd,1\\r\\nabsum,abesse_abfui_abfuturus,abfuās,,subjunctive,present,singular,2nd,1\\r\\nabsum,abesse_abfui_abfuturus,absit,,subjunctive,present,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,absiet,,subjunctive,present,singular,3rd,1\\r\\nabsum,abesse_abfui_abfuturus,abfuat,,subjunctive,present,singular,3rd,1\\r\\nabsum,abesse_abfui_abfuturus,absīmus,,subjunctive,present,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,absītis,,subjunctive,present,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,absint,,subjunctive,present,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,absient,,subjunctive,present,plural,3rd,1\\r\\nabsum,abesse_abfui_abfuturus,abfuant,,subjunctive,present,plural,3rd,1\\r\\nabsum,abesse_abfui_abfuturus,abes,,imperative,present,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abeste,,imperative,present,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abesse,,infinitive,present,,,\\r\\nabsum,abesse_abfui_abfuturus,aberam,,indicative,imperfect,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,aberās,,indicative,imperfect,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,aberat,,indicative,imperfect,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,aberāmus,,indicative,imperfect,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,aberātis,,indicative,imperfect,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,aberant,,indicative,imperfect,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abessem,,subjunctive,imperfect,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,abforem,,subjunctive,imperfect,singular,1st,2\\r\\nabsum,abesse_abfui_abfuturus,abessēs,,subjunctive,imperfect,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abforēs,,subjunctive,imperfect,singular,2nd,2\\r\\nabsum,abesse_abfui_abfuturus,abesset,,subjunctive,imperfect,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abforet,,subjunctive,imperfect,singular,3rd,2\\r\\nabsum,abesse_abfui_abfuturus,abessēmus,,subjunctive,imperfect,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,abforēmus,,subjunctive,imperfect,plural,1st,2\\r\\nabsum,abesse_abfui_abfuturus,abessētis,,subjunctive,imperfect,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abforētis,,subjunctive,imperfect,plural,2nd,2\\r\\nabsum,abesse_abfui_abfuturus,abessent,,subjunctive,imperfect,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abforent,,subjunctive,imperfect,plural,3rd,2\\r\\nabsum,abesse_abfui_abfuturus,aberō,,indicative,future,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,aberis,,indicative,future,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,aberit,,indicative,future,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abescit,,indicative,future,singular,3rd,1\\r\\nabsum,abesse_abfui_abfuturus,aberimus,,indicative,future,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,aberitis,,indicative,future,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,aberunt,,indicative,future,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abescunt,,indicative,future,plural,3rd,1\\r\\nabsum,abesse_abfui_abfuturus,abestō,,imperative,future,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abestō,,imperative,future,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abestōte,,imperative,future,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,absuntō,,imperative,future,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfutūrus esse,,infinitive,future,,,\\r\\nabsum,abesse_abfui_abfuturus,abfore,,infinitive,future,,,\\r\\nabsum,abesse_abfui_abfuturus,abfuī,,indicative,perfect,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfuistī,,indicative,perfect,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuit,,indicative,perfect,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuimus,,indicative,perfect,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfuistis,,indicative,perfect,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuērunt,,indicative,perfect,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuēre,,indicative,perfect,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerim,,subjunctive,perfect,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfueris,,subjunctive,perfect,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerit,,subjunctive,perfect,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerimus,,subjunctive,perfect,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfūvimus,,subjunctive,perfect,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfueritis,,subjunctive,perfect,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerint,,subjunctive,perfect,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuisse,,infinitive,perfect,,,\\r\\nabsum,abesse_abfui_abfuturus,abfueram,,indicative,pluperfect,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfuerās,,indicative,pluperfect,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerat,,indicative,pluperfect,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerāmus,,indicative,pluperfect,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfuerātis,,indicative,pluperfect,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerant,,indicative,pluperfect,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuissem,,subjunctive,pluperfect,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfuissēs,,subjunctive,pluperfect,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuisset,,subjunctive,pluperfect,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfūvisset,,subjunctive,pluperfect,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuissēmus,,subjunctive,pluperfect,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfuissētis,,subjunctive,pluperfect,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuissent,,subjunctive,pluperfect,plural,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerō,,indicative,future_perfect,singular,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfueris,,indicative,future_perfect,singular,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerit,,indicative,future_perfect,singular,3rd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerimus,,indicative,future_perfect,plural,1st,\\r\\nabsum,abesse_abfui_abfuturus,abfueritis,,indicative,future_perfect,plural,2nd,\\r\\nabsum,abesse_abfui_abfuturus,abfuerint,,indicative,future_perfect,plural,3rd,\\r\\n\"","module.exports = \"Ending,Conjugation,Voice,Mood,Tense,Number,Person,Case,Type,Footnote\\r\\nō,1st,active,indicative,present,singular,1st,,regular,\\r\\nās,1st,active,indicative,present,singular,2nd,,regular,\\r\\nat,1st,active,indicative,present,singular,3rd,,regular,\\r\\nāmus,1st,active,indicative,present,plural,1st,,regular,\\r\\nātis,1st,active,indicative,present,plural,2nd,,regular,\\r\\nant,1st,active,indicative,present,plural,3rd,,regular,\\r\\nem,1st,active,subjunctive,present,singular,1st,,regular,\\r\\nēs,1st,active,subjunctive,present,singular,2nd,,regular,\\r\\net,1st,active,subjunctive,present,singular,3rd,,regular,\\r\\nēmus,1st,active,subjunctive,present,plural,1st,,regular,\\r\\nētis,1st,active,subjunctive,present,plural,2nd,,regular,\\r\\nent,1st,active,subjunctive,present,plural,3rd,,regular,\\r\\neō,2nd,active,indicative,present,singular,1st,,regular,\\r\\nēs,2nd,active,indicative,present,singular,2nd,,regular,\\r\\nēt,2nd,active,indicative,present,singular,3rd,,regular,\\r\\nēmus,2nd,active,indicative,present,plural,1st,,regular,\\r\\nētis,2nd,active,indicative,present,plural,2nd,,regular,\\r\\nent,2nd,active,indicative,present,plural,3rd,,regular,\\r\\neam,2nd,active,subjunctive,present,singular,1st,,regular,\\r\\neās,2nd,active,subjunctive,present,singular,2nd,,regular,\\r\\neat,2nd,active,subjunctive,present,singular,3rd,,regular,\\r\\neāmus,2nd,active,subjunctive,present,plural,1st,,regular,\\r\\neātis,2nd,active,subjunctive,present,plural,2nd,,regular,\\r\\neant,2nd,active,subjunctive,present,plural,3rd,,regular,\\r\\nō,3rd,active,indicative,present,singular,1st,,regular,\\r\\nis,3rd,active,indicative,present,singular,2nd,,regular,\\r\\nit,3rd,active,indicative,present,singular,3rd,,regular,\\r\\nimus,3rd,active,indicative,present,plural,1st,,regular,\\r\\nitis,3rd,active,indicative,present,plural,2nd,,regular,\\r\\nunt,3rd,active,indicative,present,plural,3rd,,regular,\\r\\nam,3rd,active,subjunctive,present,singular,1st,,regular,\\r\\nās,3rd,active,subjunctive,present,singular,2nd,,regular,\\r\\nat,3rd,active,subjunctive,present,singular,3rd,,regular,\\r\\nāmus,3rd,active,subjunctive,present,plural,1st,,regular,\\r\\nātis,3rd,active,subjunctive,present,plural,2nd,,regular,\\r\\nant,3rd,active,subjunctive,present,plural,3rd,,regular,\\r\\niō,4th,active,indicative,present,singular,1st,,regular,\\r\\nīs,4th,active,indicative,present,singular,2nd,,regular,\\r\\nit,4th,active,indicative,present,singular,3rd,,regular,\\r\\nīmus,4th,active,indicative,present,plural,1st,,regular,\\r\\nītis,4th,active,indicative,present,plural,2nd,,regular,\\r\\niunt,4th,active,indicative,present,plural,3rd,,regular,\\r\\niam,4th,active,subjunctive,present,singular,1st,,regular,\\r\\niās,4th,active,subjunctive,present,singular,2nd,,regular,\\r\\niat,4th,active,subjunctive,present,singular,3rd,,regular,\\r\\niāmus,4th,active,subjunctive,present,plural,1st,,regular,\\r\\niātis,4th,active,subjunctive,present,plural,2nd,,regular,\\r\\niant,4th,active,subjunctive,present,plural,3rd,,regular,\\r\\nābam,1st,active,indicative,imperfect,singular,1st,,regular,\\r\\nābas,1st,active,indicative,imperfect,singular,2nd,,regular,\\r\\nābat,1st,active,indicative,imperfect,singular,3rd,,regular,\\r\\nābāmus,1st,active,indicative,imperfect,plural,1st,,regular,\\r\\nābātis,1st,active,indicative,imperfect,plural,2nd,,regular,\\r\\nābant,1st,active,indicative,imperfect,plural,3rd,,regular,\\r\\nārem,1st,active,subjunctive,imperfect,singular,1st,,regular,\\r\\nārēs,1st,active,subjunctive,imperfect,singular,2nd,,regular,\\r\\nāret,1st,active,subjunctive,imperfect,singular,3rd,,regular,\\r\\nārēmus,1st,active,subjunctive,imperfect,plural,1st,,regular,\\r\\nārētis,1st,active,subjunctive,imperfect,plural,2nd,,regular,\\r\\nārent,1st,active,subjunctive,imperfect,plural,3rd,,regular,\\r\\nēbam,2nd,active,indicative,imperfect,singular,1st,,regular,\\r\\nēbās,2nd,active,indicative,imperfect,singular,2nd,,regular,\\r\\nēbat,2nd,active,indicative,imperfect,singular,3rd,,regular,\\r\\nēbāmus,2nd,active,indicative,imperfect,plural,1st,,regular,\\r\\nēbātis,2nd,active,indicative,imperfect,plural,2nd,,regular,\\r\\nēbant,2nd,active,indicative,imperfect,plural,3rd,,regular,\\r\\nērem,2nd,active,subjunctive,imperfect,singular,1st,,regular,\\r\\nērēs,2nd,active,subjunctive,imperfect,singular,2nd,,regular,\\r\\nēret,2nd,active,subjunctive,imperfect,singular,3rd,,regular,\\r\\nērēmus,2nd,active,subjunctive,imperfect,plural,1st,,regular,\\r\\nērētis,2nd,active,subjunctive,imperfect,plural,2nd,,regular,\\r\\nērēnt,2nd,active,subjunctive,imperfect,plural,3rd,,regular,\\r\\nēbam,3rd,active,indicative,imperfect,singular,1st,,regular,\\r\\nēbās,3rd,active,indicative,imperfect,singular,2nd,,regular,\\r\\nēbat,3rd,active,indicative,imperfect,singular,3rd,,regular,\\r\\nēbāmus,3rd,active,indicative,imperfect,plural,1st,,regular,\\r\\nēbātis,3rd,active,indicative,imperfect,plural,2nd,,regular,\\r\\nēbant,3rd,active,indicative,imperfect,plural,3rd,,regular,\\r\\nerem,3rd,active,subjunctive,imperfect,singular,1st,,regular,\\r\\nerēs,3rd,active,subjunctive,imperfect,singular,2nd,,regular,\\r\\neret,3rd,active,subjunctive,imperfect,singular,3rd,,regular,\\r\\nerēmus,3rd,active,subjunctive,imperfect,plural,1st,,regular,\\r\\nerētis,3rd,active,subjunctive,imperfect,plural,2nd,,regular,\\r\\nerent,3rd,active,subjunctive,imperfect,plural,3rd,,regular,\\r\\niēbam,4th,active,indicative,imperfect,singular,1st,,regular,\\r\\nībam,4th,active,indicative,imperfect,singular,1st,,irregular,2\\r\\niēbas,4th,active,indicative,imperfect,singular,2nd,,regular,\\r\\nības,4th,active,indicative,imperfect,singular,2nd,,irregular,\\r\\niēbat,4th,active,indicative,imperfect,singular,3rd,,regular,\\r\\nībat,4th,active,indicative,imperfect,singular,3rd,,irregular,\\r\\niēbāmus,4th,active,indicative,imperfect,plural,1st,,regular,\\r\\nībāmus,4th,active,indicative,imperfect,plural,1st,,irregular,\\r\\niēbātis,4th,active,indicative,imperfect,plural,2nd,,regular,\\r\\nībātis,4th,active,indicative,imperfect,plural,2nd,,irregular,\\r\\niēbant,4th,active,indicative,imperfect,plural,3rd,,regular,\\r\\nībant,4th,active,indicative,imperfect,plural,3rd,,irregular,\\r\\nīrem,4th,active,subjunctive,imperfect,singular,1st,,regular,\\r\\nīrēs,4th,active,subjunctive,imperfect,singular,2nd,,regular,\\r\\nīret,4th,active,subjunctive,imperfect,singular,3rd,,regular,\\r\\nīrēmus,4th,active,subjunctive,imperfect,plural,1st,,regular,\\r\\nīrētis,4th,active,subjunctive,imperfect,plural,2nd,,regular,\\r\\nīrēnt,4th,active,subjunctive,imperfect,plural,3rd,,regular,\\r\\nābo,1st,active,indicative,future,singular,1st,,regular,\\r\\nābis,1st,active,indicative,future,singular,2nd,,regular,\\r\\nābit,1st,active,indicative,future,singular,3rd,,regular,\\r\\nābimus,1st,active,indicative,future,plural,1st,,regular,\\r\\nābitis,1st,active,indicative,future,plural,2nd,,regular,\\r\\nābunt,1st,active,indicative,future,plural,3rd,,regular,\\r\\n,1st,active,subjunctive,future,singular,1st,,,\\r\\n,1st,active,subjunctive,future,singular,2nd,,,\\r\\n,1st,active,subjunctive,future,singular,3rd,,,\\r\\n,1st,active,subjunctive,future,plural,1st,,,\\r\\n,1st,active,subjunctive,future,plural,2nd,,,\\r\\n,1st,active,subjunctive,future,plural,3rd,,,\\r\\nēbō,2nd,active,indicative,future,singular,1st,,regular,\\r\\nēbis,2nd,active,indicative,future,singular,2nd,,regular,\\r\\nēbit,2nd,active,indicative,future,singular,3rd,,regular,\\r\\nēbimus,2nd,active,indicative,future,plural,1st,,regular,\\r\\nēbitis,2nd,active,indicative,future,plural,2nd,,regular,\\r\\nēbunt,2nd,active,indicative,future,plural,3rd,,regular,\\r\\n,2nd,active,subjunctive,future,singular,1st,,regular,\\r\\n,2nd,active,subjunctive,future,singular,2nd,,,\\r\\n,2nd,active,subjunctive,future,singular,3rd,,,\\r\\n,2nd,active,subjunctive,future,plural,1st,,,\\r\\n,2nd,active,subjunctive,future,plural,2nd,,,\\r\\n,2nd,active,subjunctive,future,plural,3rd,,,\\r\\nam,3rd,active,indicative,future,singular,1st,,regular,\\r\\nēs,3rd,active,indicative,future,singular,2nd,,regular,\\r\\net,3rd,active,indicative,future,singular,3rd,,regular,\\r\\nēmus,3rd,active,indicative,future,plural,1st,,regular,\\r\\nētis,3rd,active,indicative,future,plural,2nd,,regular,\\r\\nent,3rd,active,indicative,future,plural,3rd,,regular,\\r\\n,3rd,active,subjunctive,future,singular,1st,,,\\r\\n,3rd,active,subjunctive,future,singular,2nd,,,\\r\\n,3rd,active,subjunctive,future,singular,3rd,,,\\r\\n,3rd,active,subjunctive,future,plural,1st,,,\\r\\n,3rd,active,subjunctive,future,plural,2nd,,,\\r\\n,3rd,active,subjunctive,future,plural,3rd,,,\\r\\niam,4th,active,indicative,future,singular,1st,,regular,\\r\\nībō,4th,active,indicative,future,singular,1st,,irregular,2\\r\\niēs,4th,active,indicative,future,singular,2nd,,regular,\\r\\nībis,4th,active,indicative,future,singular,2nd,,irregular,\\r\\niet,4th,active,indicative,future,singular,3rd,,regular,\\r\\nībit,4th,active,indicative,future,singular,3rd,,irregular,\\r\\niēmus,4th,active,indicative,future,plural,1st,,regular,\\r\\nībimus,4th,active,indicative,future,plural,1st,,irregular,\\r\\niētis,4th,active,indicative,future,plural,2nd,,regular,\\r\\nībitis,4th,active,indicative,future,plural,2nd,,irregular,\\r\\nient,4th,active,indicative,future,plural,3rd,,regular,\\r\\nībunt,4th,active,indicative,future,plural,3rd,,irregular,\\r\\n,4th,active,subjunctive,future,singular,1st,,,\\r\\n,4th,active,subjunctive,future,singular,2nd,,,\\r\\n,4th,active,subjunctive,future,singular,3rd,,,\\r\\n,4th,active,subjunctive,future,plural,1st,,,\\r\\n,4th,active,subjunctive,future,plural,2nd,,,\\r\\n,4th,active,subjunctive,future,plural,3rd,,,\\r\\nī,1st,active,indicative,perfect,singular,1st,,regular,\\r\\nistī,1st,active,indicative,perfect,singular,2nd,,regular,\\r\\nit,1st,active,indicative,perfect,singular,3rd,,regular,\\r\\nimus,1st,active,indicative,perfect,plural,1st,,regular,\\r\\nistis,1st,active,indicative,perfect,plural,2nd,,regular,\\r\\nērunt,1st,active,indicative,perfect,plural,3rd,,regular,\\r\\nēre,1st,active,indicative,perfect,plural,3rd,,irregular,6\\r\\nerim,1st,active,subjunctive,perfect,singular,1st,,regular,\\r\\neris,1st,active,subjunctive,perfect,singular,2nd,,regular,\\r\\nerit,1st,active,subjunctive,perfect,singular,3rd,,regular,\\r\\nerimus,1st,active,subjunctive,perfect,plural,1st,,regular,\\r\\neritis,1st,active,subjunctive,perfect,plural,2nd,,regular,\\r\\nerint,1st,active,subjunctive,perfect,plural,3rd,,regular,\\r\\nī,2nd,active,indicative,perfect,singular,1st,,regular,\\r\\nistī,2nd,active,indicative,perfect,singular,2nd,,regular,\\r\\nit,2nd,active,indicative,perfect,singular,3rd,,regular,\\r\\nimus,2nd,active,indicative,perfect,plural,1st,,regular,\\r\\nistis,2nd,active,indicative,perfect,plural,2nd,,regular,\\r\\nērunt,2nd,active,indicative,perfect,plural,3rd,,regular,\\r\\nēre,2nd,active,indicative,perfect,plural,3rd,,irregular,6\\r\\nerim,2nd,active,subjunctive,perfect,singular,1st,,regular,\\r\\neris,2nd,active,subjunctive,perfect,singular,2nd,,regular,\\r\\nerit,2nd,active,subjunctive,perfect,singular,3rd,,regular,\\r\\nerimus,2nd,active,subjunctive,perfect,plural,1st,,regular,\\r\\neritis,2nd,active,subjunctive,perfect,plural,2nd,,regular,\\r\\nerint,2nd,active,subjunctive,perfect,plural,3rd,,regular,\\r\\nī,3rd,active,indicative,perfect,singular,1st,,regular,\\r\\nistī,3rd,active,indicative,perfect,singular,2nd,,regular,\\r\\nit,3rd,active,indicative,perfect,singular,3rd,,regular,\\r\\nimus,3rd,active,indicative,perfect,plural,1st,,regular,\\r\\nistis,3rd,active,indicative,perfect,plural,2nd,,regular,\\r\\nērunt,3rd,active,indicative,perfect,plural,3rd,,regular,\\r\\nēre,3rd,active,indicative,perfect,plural,3rd,,irregular,6\\r\\nerim,3rd,active,subjunctive,perfect,singular,1st,,regular,\\r\\neris,3rd,active,subjunctive,perfect,singular,2nd,,regular,\\r\\nerit,3rd,active,subjunctive,perfect,singular,3rd,,regular,\\r\\nerimus,3rd,active,subjunctive,perfect,plural,1st,,regular,\\r\\neritis,3rd,active,subjunctive,perfect,plural,2nd,,regular,\\r\\nerint,3rd,active,subjunctive,perfect,plural,3rd,,regular,\\r\\ni,4th,active,indicative,perfect,singular,1st,,regular,\\r\\nistī,4th,active,indicative,perfect,singular,2nd,,regular,\\r\\nit,4th,active,indicative,perfect,singular,3rd,,regular,\\r\\nimus,4th,active,indicative,perfect,plural,1st,,regular,\\r\\nistis,4th,active,indicative,perfect,plural,2nd,,regular,\\r\\nērunt,4th,active,indicative,perfect,plural,3rd,,regular,\\r\\nēre,4th,active,indicative,perfect,plural,3rd,,irregular,6\\r\\nerim,4th,active,subjunctive,perfect,singular,1st,,regular,\\r\\neris,4th,active,subjunctive,perfect,singular,2nd,,regular,\\r\\nerit,4th,active,subjunctive,perfect,singular,3rd,,regular,\\r\\nerimus,4th,active,subjunctive,perfect,plural,1st,,regular,\\r\\neritis,4th,active,subjunctive,perfect,plural,2nd,,regular,\\r\\nerint,4th,active,subjunctive,perfect,plural,3rd,,regular,\\r\\neram,1st,active,indicative,pluperfect,singular,1st,,regular,\\r\\nerās,1st,active,indicative,pluperfect,singular,2nd,,regular,\\r\\nerat,1st,active,indicative,pluperfect,singular,3rd,,regular,\\r\\nerāmus,1st,active,indicative,pluperfect,plural,1st,,regular,\\r\\nerātis,1st,active,indicative,pluperfect,plural,2nd,,regular,\\r\\nerant,1st,active,indicative,pluperfect,plural,3rd,,regular,\\r\\nissem,1st,active,subjunctive,pluperfect,singular,1st,,regular,\\r\\nissēs,1st,active,subjunctive,pluperfect,singular,2nd,,regular,\\r\\nisset,1st,active,subjunctive,pluperfect,singular,3rd,,regular,\\r\\nissemus,1st,active,subjunctive,pluperfect,plural,1st,,regular,\\r\\nissēs,1st,active,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nisset,1st,active,subjunctive,pluperfect,plural,3rd,,regular,\\r\\neram,2nd,active,indicative,pluperfect,singular,1st,,regular,\\r\\nerās,2nd,active,indicative,pluperfect,singular,2nd,,regular,\\r\\nerat,2nd,active,indicative,pluperfect,singular,3rd,,regular,\\r\\nerāmus,2nd,active,indicative,pluperfect,plural,1st,,regular,\\r\\nerātis,2nd,active,indicative,pluperfect,plural,2nd,,regular,\\r\\nerant,2nd,active,indicative,pluperfect,plural,3rd,,regular,\\r\\nissem,2nd,active,subjunctive,pluperfect,singular,1st,,regular,\\r\\nissēs,2nd,active,subjunctive,pluperfect,singular,2nd,,regular,\\r\\nisset,2nd,active,subjunctive,pluperfect,singular,3rd,,regular,\\r\\nissēmus,2nd,active,subjunctive,pluperfect,plural,1st,,regular,\\r\\nissētis,2nd,active,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nissent,2nd,active,subjunctive,pluperfect,plural,3rd,,regular,\\r\\neram,3rd,active,indicative,pluperfect,singular,1st,,regular,\\r\\nerās,3rd,active,indicative,pluperfect,singular,2nd,,regular,\\r\\nerat,3rd,active,indicative,pluperfect,singular,3rd,,regular,\\r\\nerāmus,3rd,active,indicative,pluperfect,plural,1st,,regular,\\r\\nerātis,3rd,active,indicative,pluperfect,plural,2nd,,regular,\\r\\nerant,3rd,active,indicative,pluperfect,plural,3rd,,regular,\\r\\nissem,3rd,active,subjunctive,pluperfect,singular,1st,,regular,\\r\\nissēs,3rd,active,subjunctive,pluperfect,singular,2nd,,regular,\\r\\nisset,3rd,active,subjunctive,pluperfect,singular,3rd,,regular,\\r\\nissēmus,3rd,active,subjunctive,pluperfect,plural,1st,,regular,\\r\\nissētis,3rd,active,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nissent,3rd,active,subjunctive,pluperfect,plural,3rd,,regular,\\r\\neram,4th,active,indicative,pluperfect,singular,1st,,regular,\\r\\nerās,4th,active,indicative,pluperfect,singular,2nd,,regular,\\r\\nerat,4th,active,indicative,pluperfect,singular,3rd,,regular,\\r\\nerāmus,4th,active,indicative,pluperfect,plural,1st,,regular,\\r\\nerātis,4th,active,indicative,pluperfect,plural,2nd,,regular,\\r\\nerant,4th,active,indicative,pluperfect,plural,3rd,,regular,\\r\\nissem,4th,active,subjunctive,pluperfect,singular,1st,,regular,\\r\\nissēs,4th,active,subjunctive,pluperfect,singular,2nd,,regular,\\r\\nisset,4th,active,subjunctive,pluperfect,singular,3rd,,regular,\\r\\nissēmus,4th,active,subjunctive,pluperfect,plural,1st,,regular,\\r\\nissētis,4th,active,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nissent,4th,active,subjunctive,pluperfect,plural,3rd,,regular,\\r\\nerō,1st,active,indicative,future_perfect,singular,1st,,regular,\\r\\neris,1st,active,indicative,future_perfect,singular,2nd,,regular,\\r\\nerit,1st,active,indicative,future_perfect,singular,3rd,,regular,\\r\\nerimus,1st,active,indicative,future_perfect,plural,1st,,regular,\\r\\neritis,1st,active,indicative,future_perfect,plural,2nd,,regular,\\r\\nerint,1st,active,indicative,future_perfect,plural,3rd,,regular,\\r\\n,1st,active,subjunctive,future_perfect,singular,1st,,,\\r\\n,1st,active,subjunctive,future_perfect,singular,2nd,,,\\r\\n,1st,active,subjunctive,future_perfect,singular,3rd,,,\\r\\n,1st,active,subjunctive,future_perfect,plural,1st,,,\\r\\n,1st,active,subjunctive,future_perfect,plural,2nd,,,\\r\\n,1st,active,subjunctive,future_perfect,plural,3rd,,,\\r\\nerō,2nd,active,indicative,future_perfect,singular,1st,,regular,\\r\\neris,2nd,active,indicative,future_perfect,singular,2nd,,regular,\\r\\nerit,2nd,active,indicative,future_perfect,singular,3rd,,regular,\\r\\nerimus,2nd,active,indicative,future_perfect,plural,1st,,regular,\\r\\neritis,2nd,active,indicative,future_perfect,plural,2nd,,regular,\\r\\nerint,2nd,active,indicative,future_perfect,plural,3rd,,regular,\\r\\n,2nd,active,subjunctive,future_perfect,singular,1st,,,\\r\\n,2nd,active,subjunctive,future_perfect,singular,2nd,,,\\r\\n,2nd,active,subjunctive,future_perfect,singular,3rd,,,\\r\\n,2nd,active,subjunctive,future_perfect,plural,1st,,,\\r\\n,2nd,active,subjunctive,future_perfect,plural,2nd,,,\\r\\n,2nd,active,subjunctive,future_perfect,plural,3rd,,,\\r\\nerō,3rd,active,indicative,future_perfect,singular,1st,,regular,\\r\\neris,3rd,active,indicative,future_perfect,singular,2nd,,regular,\\r\\nerit,3rd,active,indicative,future_perfect,singular,3rd,,regular,\\r\\nerimus,3rd,active,indicative,future_perfect,plural,1st,,regular,\\r\\neritis,3rd,active,indicative,future_perfect,plural,2nd,,regular,\\r\\nerint,3rd,active,indicative,future_perfect,plural,3rd,,regular,\\r\\n,3rd,active,subjunctive,future_perfect,singular,1st,,,\\r\\n,3rd,active,subjunctive,future_perfect,singular,2nd,,,\\r\\n,3rd,active,subjunctive,future_perfect,singular,3rd,,,\\r\\n,3rd,active,subjunctive,future_perfect,plural,1st,,,\\r\\n,3rd,active,subjunctive,future_perfect,plural,2nd,,,\\r\\n,3rd,active,subjunctive,future_perfect,plural,3rd,,,\\r\\nerō,4th,active,indicative,future_perfect,singular,1st,,regular,\\r\\neris,4th,active,indicative,future_perfect,singular,2nd,,regular,\\r\\nerit,4th,active,indicative,future_perfect,singular,3rd,,regular,\\r\\nerimus,4th,active,indicative,future_perfect,plural,1st,,regular,\\r\\neritis,4th,active,indicative,future_perfect,plural,2nd,,regular,\\r\\nerint,4th,active,indicative,future_perfect,plural,3rd,,regular,\\r\\n,4th,active,subjunctive,future_perfect,singular,1st,,,\\r\\n,4th,active,subjunctive,future_perfect,singular,2nd,,,\\r\\n,4th,active,subjunctive,future_perfect,singular,3rd,,,\\r\\n,4th,active,subjunctive,future_perfect,plural,1st,,,\\r\\n,4th,active,subjunctive,future_perfect,plural,2nd,,,\\r\\n,4th,active,subjunctive,future_perfect,plural,3rd,,,\\r\\nor,1st,passive,indicative,present,singular,1st,,regular,\\r\\nāris,1st,passive,indicative,present,singular,2nd,,regular,\\r\\nāre,1st,passive,indicative,present,singular,2nd,,irregular,5\\r\\nātur,1st,passive,indicative,present,singular,3rd,,regular,\\r\\nāmur,1st,passive,indicative,present,plural,1st,,regular,\\r\\nāminī,1st,passive,indicative,present,plural,2nd,,regular,\\r\\nantur,1st,passive,indicative,present,plural,3rd,,regular,\\r\\ner,1st,passive,subjunctive,present,singular,1st,,regular,\\r\\nēris,1st,passive,subjunctive,present,singular,2nd,,regular,\\r\\nēre,1st,passive,subjunctive,present,singular,2nd,,regular,\\r\\nētur,1st,passive,subjunctive,present,singular,3rd,,regular,\\r\\nēmur,1st,passive,subjunctive,present,plural,1st,,regular,\\r\\nēminī,1st,passive,subjunctive,present,plural,2nd,,regular,\\r\\nentur,1st,passive,subjunctive,present,plural,3rd,,regular,\\r\\neor,2nd,passive,indicative,present,singular,1st,,regular,\\r\\nēris,2nd,passive,indicative,present,singular,2nd,,regular,\\r\\nēre,2nd,passive,indicative,present,singular,2nd,,regular,\\r\\nētur,2nd,passive,indicative,present,singular,3rd,,regular,\\r\\nēmur,2nd,passive,indicative,present,plural,1st,,regular,\\r\\nēminī,2nd,passive,indicative,present,plural,2nd,,regular,\\r\\nentur,2nd,passive,indicative,present,plural,3rd,,regular,\\r\\near,2nd,passive,subjunctive,present,singular,1st,,regular,\\r\\neāris,2nd,passive,subjunctive,present,singular,2nd,,regular,\\r\\neāre,2nd,passive,subjunctive,present,singular,2nd,,regular,\\r\\neātur,2nd,passive,subjunctive,present,singular,3rd,,regular,\\r\\neāmur,2nd,passive,subjunctive,present,plural,1st,,regular,\\r\\neāminī,2nd,passive,subjunctive,present,plural,2nd,,regular,\\r\\neantur,2nd,passive,subjunctive,present,plural,3rd,,regular,\\r\\nor,3rd,passive,indicative,present,singular,1st,,regular,\\r\\neris,3rd,passive,indicative,present,singular,2nd,,regular,\\r\\nere,3rd,passive,indicative,present,singular,2nd,,regular,\\r\\nitur,3rd,passive,indicative,present,singular,3rd,,regular,\\r\\nimur,3rd,passive,indicative,present,plural,1st,,regular,\\r\\niminī,3rd,passive,indicative,present,plural,2nd,,regular,\\r\\nuntur,3rd,passive,indicative,present,plural,3rd,,regular,\\r\\nar,3rd,passive,subjunctive,present,singular,1st,,regular,\\r\\nāris,3rd,passive,subjunctive,present,singular,2nd,,regular,\\r\\nāre,3rd,passive,subjunctive,present,singular,2nd,,regular,\\r\\nātur,3rd,passive,subjunctive,present,singular,3rd,,regular,\\r\\nāmur,3rd,passive,subjunctive,present,plural,1st,,regular,\\r\\nāminī,3rd,passive,subjunctive,present,plural,2nd,,regular,\\r\\nantur,3rd,passive,subjunctive,present,plural,3rd,,regular,\\r\\nior,4th,passive,indicative,present,singular,1st,,regular,\\r\\nīris,4th,passive,indicative,present,singular,2nd,,regular,\\r\\nīre,4th,passive,indicative,present,singular,2nd,,regular,\\r\\nītur,4th,passive,indicative,present,singular,3rd,,regular,\\r\\nīmur,4th,passive,indicative,present,plural,1st,,regular,\\r\\nīminī,4th,passive,indicative,present,plural,2nd,,regular,\\r\\niuntur,4th,passive,indicative,present,plural,3rd,,regular,\\r\\niar,4th,passive,subjunctive,present,singular,1st,,regular,\\r\\niāris,4th,passive,subjunctive,present,singular,2nd,,regular,\\r\\niāre,4th,passive,subjunctive,present,singular,2nd,,regular,\\r\\niātur,4th,passive,subjunctive,present,singular,3rd,,regular,\\r\\niāmur,4th,passive,subjunctive,present,plural,1st,,regular,\\r\\niāminī,4th,passive,subjunctive,present,plural,2nd,,regular,\\r\\niantur,4th,passive,subjunctive,present,plural,3rd,,regular,\\r\\nābar,1st,passive,indicative,imperfect,singular,1st,,regular,\\r\\nābāris,1st,passive,indicative,imperfect,singular,2nd,,regular,\\r\\nābāre,1st,passive,indicative,imperfect,singular,2nd,,regular,\\r\\nābātur,1st,passive,indicative,imperfect,singular,3rd,,regular,\\r\\nābāmur,1st,passive,indicative,imperfect,plural,1st,,regular,\\r\\nābāminī,1st,passive,indicative,imperfect,plural,2nd,,regular,\\r\\nābantur,1st,passive,indicative,imperfect,plural,3rd,,regular,\\r\\nārer,1st,passive,subjunctive,imperfect,singular,1st,,regular,\\r\\nārēris,1st,passive,subjunctive,imperfect,singular,2nd,,regular,\\r\\nārēre,1st,passive,subjunctive,imperfect,singular,2nd,,regular,\\r\\nārētur,1st,passive,subjunctive,imperfect,singular,3rd,,regular,\\r\\nārēmur,1st,passive,subjunctive,imperfect,plural,1st,,regular,\\r\\nārēminī,1st,passive,subjunctive,imperfect,plural,2nd,,regular,\\r\\nārentur,1st,passive,subjunctive,imperfect,plural,3rd,,regular,\\r\\nēbar,2nd,passive,indicative,imperfect,singular,1st,,regular,\\r\\nēbāris,2nd,passive,indicative,imperfect,singular,2nd,,regular,\\r\\nēbāre,2nd,passive,indicative,imperfect,singular,2nd,,regular,\\r\\nēbātur,2nd,passive,indicative,imperfect,singular,3rd,,regular,\\r\\nēbāmur,2nd,passive,indicative,imperfect,plural,1st,,regular,\\r\\nēbāminī,2nd,passive,indicative,imperfect,plural,2nd,,regular,\\r\\nēbantur,2nd,passive,indicative,imperfect,plural,3rd,,regular,\\r\\nērer,2nd,passive,subjunctive,imperfect,singular,1st,,regular,\\r\\nērēris,2nd,passive,subjunctive,imperfect,singular,2nd,,regular,\\r\\nērēre,2nd,passive,subjunctive,imperfect,singular,2nd,,regular,\\r\\nērētur,2nd,passive,subjunctive,imperfect,singular,3rd,,regular,\\r\\nērēmur,2nd,passive,subjunctive,imperfect,plural,1st,,regular,\\r\\nērēminī,2nd,passive,subjunctive,imperfect,plural,2nd,,regular,\\r\\nērentur,2nd,passive,subjunctive,imperfect,plural,3rd,,regular,\\r\\nēbar,3rd,passive,indicative,imperfect,singular,1st,,regular,\\r\\nēbāris,3rd,passive,indicative,imperfect,singular,2nd,,regular,\\r\\nēbāre,3rd,passive,indicative,imperfect,singular,2nd,,regular,\\r\\nēbātur,3rd,passive,indicative,imperfect,singular,3rd,,regular,\\r\\nēbāmur,3rd,passive,indicative,imperfect,plural,1st,,regular,\\r\\nēbāminī,3rd,passive,indicative,imperfect,plural,2nd,,regular,\\r\\nēbantur,3rd,passive,indicative,imperfect,plural,3rd,,regular,\\r\\nerer,3rd,passive,subjunctive,imperfect,singular,1st,,regular,\\r\\nerēris,3rd,passive,subjunctive,imperfect,singular,2nd,,regular,\\r\\nerēre,3rd,passive,subjunctive,imperfect,singular,2nd,,regular,\\r\\nerētur,3rd,passive,subjunctive,imperfect,singular,3rd,,regular,\\r\\nerēmur,3rd,passive,subjunctive,imperfect,plural,1st,,regular,\\r\\nerēminī,3rd,passive,subjunctive,imperfect,plural,2nd,,regular,\\r\\nerentur,3rd,passive,subjunctive,imperfect,plural,3rd,,regular,\\r\\niēbar,4th,passive,indicative,imperfect,singular,1st,,regular,\\r\\niēbāris,4th,passive,indicative,imperfect,singular,2nd,,regular,\\r\\niēbāre,4th,passive,indicative,imperfect,singular,2nd,,regular,\\r\\niēbātur,4th,passive,indicative,imperfect,singular,3rd,,regular,\\r\\niēbāmur,4th,passive,indicative,imperfect,plural,1st,,regular,\\r\\niēbāminī,4th,passive,indicative,imperfect,plural,2nd,,regular,\\r\\niēbantur,4th,passive,indicative,imperfect,plural,3rd,,regular,\\r\\nīrer,4th,passive,subjunctive,imperfect,singular,1st,,regular,\\r\\nīrēris,4th,passive,subjunctive,imperfect,singular,2nd,,regular,\\r\\nīrēre,4th,passive,subjunctive,imperfect,singular,2nd,,regular,\\r\\nīrētur,4th,passive,subjunctive,imperfect,singular,3rd,,regular,\\r\\nīrēmur,4th,passive,subjunctive,imperfect,plural,1st,,regular,\\r\\nīrēminī,4th,passive,subjunctive,imperfect,plural,2nd,,regular,\\r\\nīrentur,4th,passive,subjunctive,imperfect,plural,3rd,,regular,\\r\\nābor,1st,passive,indicative,future,singular,1st,,regular,\\r\\nāberis,1st,passive,indicative,future,singular,2nd,,regular,\\r\\nābere,1st,passive,indicative,future,singular,2nd,,irregular,\\r\\nābitur,1st,passive,indicative,future,singular,3rd,,regular,\\r\\nābimur,1st,passive,indicative,future,plural,1st,,regular,\\r\\nābiminī,1st,passive,indicative,future,plural,2nd,,regular,\\r\\nābuntur,1st,passive,indicative,future,plural,3rd,,regular,\\r\\n,1st,passive,subjunctive,future,singular,1st,,,\\r\\n,1st,passive,subjunctive,future,singular,2nd,,,\\r\\n,1st,passive,subjunctive,future,singular,3rd,,,\\r\\n,1st,passive,subjunctive,future,plural,1st,,,\\r\\n,1st,passive,subjunctive,future,plural,2nd,,,\\r\\n,1st,passive,subjunctive,future,plural,3rd,,,\\r\\nēbor,2nd,passive,indicative,future,singular,1st,,regular,\\r\\nēberis,2nd,passive,indicative,future,singular,2nd,,regular,\\r\\nēbere,2nd,passive,indicative,future,singular,2nd,,regular,\\r\\nēbitur,2nd,passive,indicative,future,singular,3rd,,regular,\\r\\nēbimur,2nd,passive,indicative,future,plural,1st,,regular,\\r\\nēbiminī,2nd,passive,indicative,future,plural,2nd,,regular,\\r\\nēbuntur,2nd,passive,indicative,future,plural,3rd,,regular,\\r\\n,2nd,passive,subjunctive,future,singular,1st,,,\\r\\n,2nd,passive,subjunctive,future,singular,2nd,,,\\r\\n,2nd,passive,subjunctive,future,singular,3rd,,,\\r\\n,2nd,passive,subjunctive,future,plural,1st,,,\\r\\n,2nd,passive,subjunctive,future,plural,2nd,,,\\r\\n,2nd,passive,subjunctive,future,plural,3rd,,,\\r\\nar,3rd,passive,indicative,future,singular,1st,,regular,\\r\\nēris,3rd,passive,indicative,future,singular,2nd,,regular,\\r\\nēre,3rd,passive,indicative,future,singular,2nd,,irregular,\\r\\nētur,3rd,passive,indicative,future,singular,3rd,,regular,\\r\\nēmur,3rd,passive,indicative,future,plural,1st,,regular,\\r\\nēminī,3rd,passive,indicative,future,plural,2nd,,regular,\\r\\nentur,3rd,passive,indicative,future,plural,3rd,,regular,\\r\\n,3rd,passive,subjunctive,future,singular,1st,,,\\r\\n,3rd,passive,subjunctive,future,singular,2nd,,,\\r\\n,3rd,passive,subjunctive,future,singular,3rd,,,\\r\\n,3rd,passive,subjunctive,future,plural,1st,,,\\r\\n,3rd,passive,subjunctive,future,plural,2nd,,,\\r\\n,3rd,passive,subjunctive,future,plural,3rd,,,\\r\\niar,4th,passive,indicative,future,singular,1st,,regular,\\r\\niēris,4th,passive,indicative,future,singular,2nd,,regular,\\r\\nīēre,4th,passive,indicative,future,singular,2nd,,irregular,\\r\\niētur,4th,passive,indicative,future,singular,3rd,,regular,\\r\\niēmur,4th,passive,indicative,future,plural,1st,,regular,\\r\\niēminī,4th,passive,indicative,future,plural,2nd,,regular,\\r\\nientur,4th,passive,indicative,future,plural,3rd,,regular,\\r\\n,4th,passive,subjunctive,future,singular,1st,,,\\r\\n,4th,passive,subjunctive,future,singular,2nd,,,\\r\\n,4th,passive,subjunctive,future,singular,3rd,,,\\r\\n,4th,passive,subjunctive,future,plural,1st,,,\\r\\n,4th,passive,subjunctive,future,plural,2nd,,,\\r\\n,4th,passive,subjunctive,future,plural,3rd,,,\\r\\nus sum,1st,passive,indicative,perfect,singular,1st,,regular,\\r\\nus fui,1st,passive,indicative,perfect,singular,1st,,regular,\\r\\nus es,1st,passive,indicative,perfect,singular,2nd,,regular,\\r\\nus fuisti,1st,passive,indicative,perfect,singular,2nd,,regular,\\r\\nus est,1st,passive,indicative,perfect,singular,3rd,,regular,\\r\\nus fuit,1st,passive,indicative,perfect,singular,3rd,,regular,\\r\\nī sumus,1st,passive,indicative,perfect,plural,1st,,regular,\\r\\nī fuimus,1st,passive,indicative,perfect,plural,1st,,irregular,\\r\\nī estis,1st,passive,indicative,perfect,plural,2nd,,regular,\\r\\nī fuistis,1st,passive,indicative,perfect,plural,2nd,,irregular,\\r\\nī sunt,1st,passive,indicative,perfect,plural,3rd,,regular,\\r\\nī fuerunt,1st,passive,indicative,perfect,plural,3rd,,irregular,\\r\\nus sim,1st,passive,subjunctive,perfect,singular,1st,,regular,\\r\\nus fuerim,1st,passive,subjunctive,perfect,singular,1st,,irregular,\\r\\nus sīs,1st,passive,subjunctive,perfect,singular,2nd,,regular,\\r\\nus fueris,1st,passive,subjunctive,perfect,singular,2nd,,irregular,\\r\\nus sit,1st,passive,subjunctive,perfect,singular,3rd,,regular,\\r\\nus fuerit,1st,passive,subjunctive,perfect,singular,3rd,,regular,\\r\\nī sīmus,1st,passive,subjunctive,perfect,plural,1st,,regular,\\r\\nī fuerimus,1st,passive,subjunctive,perfect,plural,1st,,irregular,\\r\\nī sītis,1st,passive,subjunctive,perfect,plural,2nd,,regular,\\r\\nī fueritis,1st,passive,subjunctive,perfect,plural,2nd,,irregular,\\r\\nī sint,1st,passive,subjunctive,perfect,plural,3rd,,regular,\\r\\nī fuerint,1st,passive,subjunctive,perfect,plural,3rd,,irregular,\\r\\nus sum,2nd,passive,indicative,perfect,singular,1st,,regular,\\r\\nus es,2nd,passive,indicative,perfect,singular,2nd,,regular,\\r\\nus est,2nd,passive,indicative,perfect,singular,3rd,,regular,\\r\\nī sumus,2nd,passive,indicative,perfect,plural,1st,,regular,\\r\\nī estis,2nd,passive,indicative,perfect,plural,2nd,,regular,\\r\\nī sunt,2nd,passive,indicative,perfect,plural,3rd,,regular,\\r\\nus sim,2nd,passive,subjunctive,perfect,singular,1st,,regular,\\r\\nus sīs,2nd,passive,subjunctive,perfect,singular,2nd,,regular,\\r\\nus sit,2nd,passive,subjunctive,perfect,singular,3rd,,regular,\\r\\nī sīmus,2nd,passive,subjunctive,perfect,plural,1st,,regular,\\r\\nī sītis,2nd,passive,subjunctive,perfect,plural,2nd,,regular,\\r\\nī sint,2nd,passive,subjunctive,perfect,plural,3rd,,regular,\\r\\nus sum,3rd,passive,indicative,perfect,singular,1st,,regular,\\r\\nus es,3rd,passive,indicative,perfect,singular,2nd,,regular,\\r\\nus est,3rd,passive,indicative,perfect,singular,3rd,,regular,\\r\\nī sumus,3rd,passive,indicative,perfect,plural,1st,,regular,\\r\\nī estis,3rd,passive,indicative,perfect,plural,2nd,,regular,\\r\\nī sunt,3rd,passive,indicative,perfect,plural,3rd,,regular,\\r\\nus sim,3rd,passive,subjunctive,perfect,singular,1st,,regular,\\r\\nus sīs,3rd,passive,subjunctive,perfect,singular,2nd,,regular,\\r\\nus sit,3rd,passive,subjunctive,perfect,singular,3rd,,regular,\\r\\nī sīmus,3rd,passive,subjunctive,perfect,plural,1st,,regular,\\r\\nī sītis,3rd,passive,subjunctive,perfect,plural,2nd,,regular,\\r\\nī sint,3rd,passive,subjunctive,perfect,plural,3rd,,regular,\\r\\nus sum,4th,passive,indicative,perfect,singular,1st,,regular,\\r\\nus es,4th,passive,indicative,perfect,singular,2nd,,regular,\\r\\nus est,4th,passive,indicative,perfect,singular,3rd,,regular,\\r\\nī sumus,4th,passive,indicative,perfect,plural,1st,,regular,\\r\\nī estis,4th,passive,indicative,perfect,plural,2nd,,regular,\\r\\nī sunt,4th,passive,indicative,perfect,plural,3rd,,regular,\\r\\nus sim,4th,passive,subjunctive,perfect,singular,1st,,regular,\\r\\nus sīs,4th,passive,subjunctive,perfect,singular,2nd,,regular,\\r\\nus sit,4th,passive,subjunctive,perfect,singular,3rd,,regular,\\r\\nī sīmus,4th,passive,subjunctive,perfect,plural,1st,,regular,\\r\\nī sītis,4th,passive,subjunctive,perfect,plural,2nd,,regular,\\r\\nī sint,4th,passive,subjunctive,perfect,plural,3rd,,regular,\\r\\nus eram,1st,passive,indicative,pluperfect,singular,1st,,regular,\\r\\nus fueram,1st,passive,indicative,pluperfect,singular,1st,,irregular,\\r\\nus erās,1st,passive,indicative,pluperfect,singular,2nd,,regular,\\r\\nus fueras,1st,passive,indicative,pluperfect,singular,2nd,,irregular,\\r\\nus erat,1st,passive,indicative,pluperfect,singular,3rd,,regular,\\r\\nus fuerat,1st,passive,indicative,pluperfect,singular,3rd,,irregular,\\r\\nī erāmus,1st,passive,indicative,pluperfect,plural,1st,,regular,\\r\\nī fueramus,1st,passive,indicative,pluperfect,plural,1st,,irregular,\\r\\nī erātis,1st,passive,indicative,pluperfect,plural,2nd,,regular,\\r\\nī fueratis,1st,passive,indicative,pluperfect,plural,2nd,,irregular,\\r\\nī erant,1st,passive,indicative,pluperfect,plural,3rd,,regular,\\r\\nī fuerant,1st,passive,indicative,pluperfect,plural,3rd,,irregular,\\r\\nus essem,1st,passive,subjunctive,pluperfect,singular,1st,,regular,\\r\\nus fuissem,1st,passive,subjunctive,pluperfect,singular,1st,,irregular,\\r\\nus essēs,1st,passive,subjunctive,pluperfect,singular,2nd,,regular,\\r\\nus fuissēs,1st,passive,subjunctive,pluperfect,singular,2nd,,irregular,\\r\\nus esset,1st,passive,subjunctive,pluperfect,singular,3rd,,regular,\\r\\nus fuisset,1st,passive,subjunctive,pluperfect,singular,3rd,,irregular,\\r\\nī essēmus,1st,passive,subjunctive,pluperfect,plural,1st,,regular,\\r\\nī fuissēmus,1st,passive,subjunctive,pluperfect,plural,1st,,irregular,\\r\\nī essētis,1st,passive,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nī fuissētis,1st,passive,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nī essent,1st,passive,subjunctive,pluperfect,plural,3rd,,regular,\\r\\nī fuissent,1st,passive,subjunctive,pluperfect,plural,3rd,,regular,\\r\\nus eram,2nd,passive,indicative,pluperfect,singular,1st,,regular,\\r\\nus erās,2nd,passive,indicative,pluperfect,singular,2nd,,regular,\\r\\nus erat,2nd,passive,indicative,pluperfect,singular,3rd,,regular,\\r\\nī erāmus,2nd,passive,indicative,pluperfect,plural,1st,,regular,\\r\\nī erātis,2nd,passive,indicative,pluperfect,plural,2nd,,regular,\\r\\nī erant,2nd,passive,indicative,pluperfect,plural,3rd,,regular,\\r\\nus essem,2nd,passive,subjunctive,pluperfect,singular,1st,,regular,\\r\\nus essēs,2nd,passive,subjunctive,pluperfect,singular,2nd,,regular,\\r\\nus esset,2nd,passive,subjunctive,pluperfect,singular,3rd,,regular,\\r\\nī essēmus,2nd,passive,subjunctive,pluperfect,plural,1st,,regular,\\r\\nī essētis,2nd,passive,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nī essent,2nd,passive,subjunctive,pluperfect,plural,3rd,,regular,\\r\\nus eram,3rd,passive,indicative,pluperfect,singular,1st,,regular,\\r\\nus erās,3rd,passive,indicative,pluperfect,singular,2nd,,regular,\\r\\nus erat,3rd,passive,indicative,pluperfect,singular,3rd,,regular,\\r\\nī erāmus,3rd,passive,indicative,pluperfect,plural,1st,,regular,\\r\\nī erātis,3rd,passive,indicative,pluperfect,plural,2nd,,regular,\\r\\nī erant,3rd,passive,indicative,pluperfect,plural,3rd,,regular,\\r\\nus essem,3rd,passive,subjunctive,pluperfect,singular,1st,,regular,\\r\\nus essēs,3rd,passive,subjunctive,pluperfect,singular,2nd,,regular,\\r\\nus esset,3rd,passive,subjunctive,pluperfect,singular,3rd,,regular,\\r\\nī essēmus,3rd,passive,subjunctive,pluperfect,plural,1st,,regular,\\r\\nī essētis,3rd,passive,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nī essent,3rd,passive,subjunctive,pluperfect,plural,3rd,,regular,\\r\\nus eram,4th,passive,indicative,pluperfect,singular,1st,,regular,\\r\\nus erās,4th,passive,indicative,pluperfect,singular,2nd,,regular,\\r\\nus erat,4th,passive,indicative,pluperfect,singular,3rd,,regular,\\r\\nī erāmus,4th,passive,indicative,pluperfect,plural,1st,,regular,\\r\\nī erātis,4th,passive,indicative,pluperfect,plural,2nd,,regular,\\r\\nī erant,4th,passive,indicative,pluperfect,plural,3rd,,regular,\\r\\nus essem,4th,passive,subjunctive,pluperfect,singular,1st,,regular,\\r\\nus essēs,4th,passive,subjunctive,pluperfect,singular,2nd,,regular,\\r\\nus esset,4th,passive,subjunctive,pluperfect,singular,3rd,,regular,\\r\\nī essēmus,4th,passive,subjunctive,pluperfect,plural,1st,,regular,\\r\\nī essētis,4th,passive,subjunctive,pluperfect,plural,2nd,,regular,\\r\\nī essent,4th,passive,subjunctive,pluperfect,plural,3rd,,regular,\\r\\nus erō,1st,passive,indicative,future_perfect,singular,1st,,regular,\\r\\nus eris,1st,passive,indicative,future_perfect,singular,2nd,,regular,\\r\\nus erit,1st,passive,indicative,future_perfect,singular,3rd,,regular,\\r\\nī erimus,1st,passive,indicative,future_perfect,plural,1st,,regular,\\r\\nī eritis,1st,passive,indicative,future_perfect,plural,2nd,,regular,\\r\\nī erunt,1st,passive,indicative,future_perfect,plural,3rd,,regular,\\r\\n,1st,passive,subjunctive,future_perfect,singular,1st,,,\\r\\n,1st,passive,subjunctive,future_perfect,singular,2nd,,,\\r\\n,1st,passive,subjunctive,future_perfect,singular,3rd,,,\\r\\n,1st,passive,subjunctive,future_perfect,plural,1st,,,\\r\\n,1st,passive,subjunctive,future_perfect,plural,2nd,,,\\r\\n,1st,passive,subjunctive,future_perfect,plural,3rd,,,\\r\\nus erō,2nd,passive,indicative,future_perfect,singular,1st,,regular,\\r\\nus eris,2nd,passive,indicative,future_perfect,singular,2nd,,regular,\\r\\nus erit,2nd,passive,indicative,future_perfect,singular,3rd,,regular,\\r\\nī erimus,2nd,passive,indicative,future_perfect,plural,1st,,regular,\\r\\nī eritis,2nd,passive,indicative,future_perfect,plural,2nd,,regular,\\r\\nī erunt,2nd,passive,indicative,future_perfect,plural,3rd,,regular,\\r\\n,2nd,passive,subjunctive,future_perfect,singular,1st,,,\\r\\n,2nd,passive,subjunctive,future_perfect,singular,2nd,,,\\r\\n,2nd,passive,subjunctive,future_perfect,singular,3rd,,,\\r\\n,2nd,passive,subjunctive,future_perfect,plural,1st,,,\\r\\n,2nd,passive,subjunctive,future_perfect,plural,2nd,,,\\r\\n,2nd,passive,subjunctive,future_perfect,plural,3rd,,,\\r\\nus erō,3rd,passive,indicative,future_perfect,singular,1st,,regular,\\r\\nus eris,3rd,passive,indicative,future_perfect,singular,2nd,,regular,\\r\\nus erit,3rd,passive,indicative,future_perfect,singular,3rd,,regular,\\r\\nī erimus,3rd,passive,indicative,future_perfect,plural,1st,,regular,\\r\\nī eritis,3rd,passive,indicative,future_perfect,plural,2nd,,regular,\\r\\nī erunt,3rd,passive,indicative,future_perfect,plural,3rd,,regular,\\r\\n,3rd,passive,subjunctive,future_perfect,singular,1st,,,\\r\\n,3rd,passive,subjunctive,future_perfect,singular,2nd,,,\\r\\n,3rd,passive,subjunctive,future_perfect,singular,3rd,,,\\r\\n,3rd,passive,subjunctive,future_perfect,plural,1st,,,\\r\\n,3rd,passive,subjunctive,future_perfect,plural,2nd,,,\\r\\n,3rd,passive,subjunctive,future_perfect,plural,3rd,,,\\r\\nus erō,4th,passive,indicative,future_perfect,singular,1st,,regular,\\r\\nus eris,4th,passive,indicative,future_perfect,singular,2nd,,regular,\\r\\nus erit,4th,passive,indicative,future_perfect,singular,3rd,,regular,\\r\\nī erimus,4th,passive,indicative,future_perfect,plural,1st,,regular,\\r\\nī eritis,4th,passive,indicative,future_perfect,plural,2nd,,regular,\\r\\nī erunt,4th,passive,indicative,future_perfect,plural,3rd,,regular,\\r\\n,4th,passive,subjunctive,future_perfect,singular,1st,,,\\r\\n,4th,passive,subjunctive,future_perfect,singular,2nd,,,\\r\\n,4th,passive,subjunctive,future_perfect,singular,3rd,,,\\r\\n,4th,passive,subjunctive,future_perfect,plural,1st,,,\\r\\n,4th,passive,subjunctive,future_perfect,plural,2nd,,,\\r\\n,4th,passive,subjunctive,future_perfect,plural,3rd,,,\\r\\nā,1st,active,imperative,present,singular,2nd,,regular,3\\r\\nāte,1st,active,imperative,present,plural,2nd,,regular,\\r\\nāre,1st,passive,imperative,present,singular,2nd,,regular,\\r\\nāminī,1st,passive,imperative,present,plural,2nd,,regular,\\r\\nē,2nd,active,imperative,present,singular,2nd,,regular,3\\r\\nēte,2nd,active,imperative,present,plural,2nd,,regular,\\r\\nēre,2nd,passive,imperative,present,singular,2nd,,regular,\\r\\nēminī,2nd,passive,imperative,present,plural,2nd,,regular,\\r\\ne,3rd,active,imperative,present,singular,2nd,,regular,3\\r\\nīte,3rd,active,imperative,present,plural,2nd,,regular,\\r\\nere,3rd,passive,imperative,present,singular,2nd,,regular,\\r\\niminī,3rd,passive,imperative,present,plural,2nd,,regular,\\r\\nī,4th,active,imperative,present,singular,2nd,,regular,3\\r\\nīte,4th,active,imperative,present,plural,2nd,,regular,\\r\\nīre,4th,passive,imperative,present,singular,2nd,,regular,\\r\\nīminī,4th,passive,imperative,present,plural,2nd,,regular,\\r\\nātō,1st,active,imperative,future,singular,2nd,,regular,\\r\\nātō,1st,active,imperative,future,singular,3rd,,regular,\\r\\nātote,1st,active,imperative,future,plural,2nd,,regular,\\r\\nantō,1st,active,imperative,future,plural,3rd,,regular,\\r\\nātōr,1st,passive,imperative,future,singular,2nd,,regular,\\r\\n,1st,passive,imperative,future,plural,2nd,,,\\r\\nātor,1st,passive,imperative,future,singular,3rd,,regular,\\r\\nantor,1st,passive,imperative,future,plural,3rd,,regular,\\r\\nētō,2nd,active,imperative,future,singular,2nd,,regular,\\r\\nētō,2nd,active,imperative,future,singular,3rd,,regular,\\r\\nētōte,2nd,active,imperative,future,plural,2nd,,regular,\\r\\nentō,2nd,active,imperative,future,plural,3rd,,regular,\\r\\nētor,2nd,passive,imperative,future,singular,2nd,,regular,\\r\\n,2nd,passive,imperative,future,plural,2nd,,,\\r\\nētor,2nd,passive,imperative,future,singular,3rd,,regular,\\r\\nentor,2nd,passive,imperative,future,plural,3rd,,regular,\\r\\nitō,3rd,active,imperative,future,singular,2nd,,regular,\\r\\nitō,3rd,active,imperative,future,singular,3rd,,regular,\\r\\nitōte,3rd,active,imperative,future,plural,2nd,,regular,\\r\\nuntō,3rd,active,imperative,future,plural,3rd,,regular,\\r\\nitor,3rd,passive,imperative,future,singular,2nd,,regular,\\r\\n,3rd,passive,imperative,future,plural,2nd,,,\\r\\nitor,3rd,passive,imperative,future,singular,3rd,,regular,\\r\\nuntor,3rd,passive,imperative,future,plural,3rd,,regular,\\r\\nītō,4th,active,imperative,future,singular,2nd,,regular,\\r\\nītō,4th,active,imperative,future,singular,3rd,,regular,\\r\\nītōte,4th,active,imperative,future,plural,2nd,,regular,\\r\\niuntō,4th,active,imperative,future,plural,3rd,,regular,\\r\\nītor,4th,passive,imperative,future,singular,2nd,,regular,\\r\\n,4th,passive,imperative,future,plural,2nd,,,\\r\\nītor,4th,passive,imperative,future,singular,3rd,,regular,\\r\\niuntor,4th,passive,imperative,future,plural,3rd,,regular,\\r\\nāre,1st,active,infinitive,present,,,,regular,\\r\\nēre,2nd,active,infinitive,present,,,,regular,\\r\\nere,3rd,active,infinitive,present,,,,regular,\\r\\nīre,4th,active,infinitive,present,,,,regular,\\r\\nisse,1st,active,infinitive,perfect,,,,regular,\\r\\nisse,2nd,active,infinitive,perfect,,,,regular,\\r\\nisse,3rd,active,infinitive,perfect,,,,regular,\\r\\nisse,4th,active,infinitive,perfect,,,,regular,\\r\\nūrus esse,1st,active,infinitive,future,,,,regular,\\r\\nūrus esse,2nd,active,infinitive,future,,,,regular,\\r\\nūrus esse,3rd,active,infinitive,future,,,,regular,\\r\\nūrus esse,4th,active,infinitive,future,,,,regular,\\r\\nārī,1st,passive,infinitive,present,,,,regular,\\r\\nērī,2nd,passive,infinitive,present,,,,regular,\\r\\nī,3rd,passive,infinitive,present,,,,regular,\\r\\nīrī,4th,passive,infinitive,present,,,,regular,\\r\\nus esse,1st,passive,infinitive,perfect,,,,regular,\\r\\nus esse,2nd,passive,infinitive,perfect,,,,regular,\\r\\nus esse,3rd,passive,infinitive,perfect,,,,regular,\\r\\nus esse,4th,passive,infinitive,perfect,,,,regular,\\r\\num īrī,1st,passive,infinitive,future,,,,regular,\\r\\num īrī,2nd,passive,infinitive,future,,,,regular,\\r\\num īri,3rd,passive,infinitive,future,,,,regular,\\r\\num īrī,4th,passive,infinitive,future,,,,regular,\\r\\n\"","/*\n * Latin language data module\n */\nimport { Constants, Feature, FeatureImporter, Lemma } from 'alpheios-data-models'\nimport LanguageDataset from '@lib/language-dataset.js'\nimport Suffix from '@lib/suffix.js'\nimport Form from '@lib/form.js'\n// import ComparisonFeature from '@lib/comparison-feature.js'\nimport nounSuffixesCSV from '@lib/lang/latin/data/noun/suffixes.csv'\nimport nounFootnotesCSV from '@lib/lang/latin/data/noun/footnotes.csv'\nimport pronounFormsCSV from '@lib/lang/latin/data/pronoun/forms.csv'\nimport pronounFootnotesCSV from '@lib/lang/latin/data/pronoun/footnotes.csv'\nimport adjectiveSuffixesCSV from '@lib/lang/latin/data/adjective/suffixes.csv'\nimport adjectiveFootnotesCSV from '@lib/lang/latin/data/adjective/footnotes.csv'\nimport verbSuffixesCSV from '@lib/lang/latin/data/verb/suffixes.csv'\nimport verbFootnotesCSV from '@lib/lang/latin/data/verb/footnotes.csv'\nimport verbFormsCSV from '@lib/lang/latin/data/verb/forms.csv'\nimport verbFormFootnotesCSV from '@lib/lang/latin/data/verb/form_footnotes.csv'\nimport verbParticipleSuffixesCSV from '@lib/lang/latin/data/participle/suffixes.csv'\nimport verbParticipleFormsCSV from '@lib/lang/latin/data/participle/forms.csv'\nimport verbParticipleFormFootnotesCSV from '@lib/lang/latin/data/participle/form_footnotes.csv'\nimport verbSupineSuffixesCSV from '@lib/lang/latin/data/supine/suffixes.csv'\nimport verbSupineFormsCSV from '@lib/lang/latin/data/supine/forms.csv'\nimport verbSupineFormFootnotesCSV from '@lib/lang/latin/data/supine/form_footnotes.csv'\nimport gerundiveFormsCSV from '@lib/lang/latin/data/gerundive/forms.csv'\nimport gerundiveFormFootnotesCSV from '@lib/lang/latin/data/gerundive/form_footnotes.csv'\nimport papaparse from 'papaparse'\n\n/*\n Define grammatical features of a language. Those grammatical features definitions will also be used by morphological\n analyzer's language modules as well.\n */\nexport default class LatinLanguageDataset extends LanguageDataset {\n  constructor () {\n    super(LatinLanguageDataset.languageID)\n\n    this.features = this.model.typeFeatures\n    this.features.set(Feature.types.footnote, new Feature(Feature.types.footnote, [], LatinLanguageDataset.languageID))\n    this.features.set(Feature.types.fullForm, new Feature(Feature.types.fullForm, [], LatinLanguageDataset.languageID))\n    this.features.set(Feature.types.word, new Feature(Feature.types.word, [], LatinLanguageDataset.languageID))\n\n    // Create an importer with default values for every feature\n    for (let feature of this.features.values()) {\n      feature.addImporter(new FeatureImporter(feature.values, true))\n    }\n\n    // Create importer mapping for special language-specific values\n    this.features.get(Feature.types.declension).getImporter()\n      .map(this.constructor.constants.ORD_1ST_2ND, [Constants.ORD_1ST, Constants.ORD_2ND])\n    this.features.get(Feature.types.gender).getImporter()\n      .map(this.constructor.constants.GEND_MASCULINE_FEMININE, [Constants.GEND_MASCULINE, Constants.GEND_FEMININE])\n\n    this.features.get(Feature.types.tense).getImporter()\n      .map('future_perfect', Constants.TENSE_FUTURE_PERFECT)\n\n    /**\n     * A map of irregular form lemmas for which we have data.\n     * key - Part of speech name.\n     * value - array of lemmas.\n     * @type {Map<string, Lemma[]>}\n     */\n    this.irregularLemmas = new Map()\n    for (const pofs of this.constructor.constants.IRREG_POFS) {\n      this.irregularLemmas.set(pofs, [])\n    }\n  }\n\n  static get languageID () {\n    return Constants.LANG_LATIN\n  }\n\n  static get constants () {\n    return {\n      // Parts of speech that could have irregular forms\n      IRREG_POFS: [Constants.POFS_VERB, Constants.POFS_VERB_PARTICIPLE, Constants.POFS_SUPINE, Constants.POFS_GERUNDIVE],\n      ORD_1ST_2ND: '1st 2nd',\n      GEND_MASCULINE_FEMININE: 'masculine feminine'\n\n    }\n  }\n\n  // For noun and adjectives\n  addSuffixes (partOfSpeech, data, pofsFootnotes) {\n    // An order of columns in a data CSV file\n    const n = {\n      suffix: 0,\n      number: 1,\n      grmCase: 2,\n      declension: 3,\n      gender: 4,\n      type: 5,\n      footnote: 6\n    }\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n    let footnotes = []\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let suffix = item[n.suffix]\n      // Handle special suffix values\n      if (!suffix || suffix === noSuffixValue) {\n        suffix = null\n      }\n\n      let features = [partOfSpeech,\n        this.features.get(Feature.types.number).createFromImporter(item[n.number]),\n        this.features.get(Feature.types.grmCase).createFromImporter(item[n.grmCase]),\n        this.features.get(Feature.types.declension).createFromImporter(item[n.declension]),\n        this.features.get(Feature.types.gender).createFromImporter(item[n.gender]),\n        this.features.get(Feature.types.type).createFromImporter(item[n.type])]\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n        footnotes = pofsFootnotes.filter(f => indexes.includes(f.index))\n      }\n      this.addInflectionData(partOfSpeech.value, Suffix, suffix, features, footnotes)\n    }\n  }\n\n  // For pronouns\n  addPronounForms (partOfSpeech, data, pofsFootnotes) {\n    const n = {\n      formSet: 0,\n      headword: 1,\n      grmClass: 2,\n      person: 3,\n      number: 4,\n      case: 5,\n      type: 6,\n      form: 7,\n      footnote: 8\n    }\n    let footnotes = []\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let features = [partOfSpeech]\n      //    if (item[n.formSet]) {\n      //      features.push(languageModel.features[Feature.types.formSet]createFromImporter(item[0]))\n      //    }\n      // TODO read a headword into a principalPars array\n      //  if (item[n.headword]) { }\n      if (item[n.grmClass]) {\n        features.push(this.features.get(Feature.types.grmClass).createFromImporter(item[n.grmClass]))\n      }\n      if (item[n.person]) {\n        features.push(this.features.get(Feature.types.person).createFromImporter(item[n.person]))\n      }\n      if (item[n.number]) {\n        features.push(this.features.get(Feature.types.number).createFromImporter(item[n.number]))\n      }\n      if (item[n.case]) {\n        features.push(this.features.get(Feature.types.case).createFromImporter(item[n.case]))\n      }\n      if (item[n.type]) {\n        features.push(this.features.get(Feature.types.type).createFromImporter(item[n.type]))\n      }\n      let form = item[n.form] ? item[n.form] : ''\n\n      // Footnotes\n      if (item[n.footnote]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[n.footnote].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n        footnotes = pofsFootnotes.filter(f => indexes.includes(f.index))\n      }\n      this.addInflectionData(partOfSpeech.value, Form, form, features, footnotes)\n    }\n  }\n\n  // For verbs\n  addVerbSuffixes (partOfSpeech, data, pofsFootnotes) {\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n    let footnotes = []\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let suffix = item[0]\n      // Handle special suffix values\n      if (!suffix || suffix === noSuffixValue) {\n        suffix = null\n      }\n\n      let features = [partOfSpeech]\n      let columns = [\n        Feature.types.conjugation,\n        Feature.types.voice,\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.number,\n        Feature.types.person,\n        Feature.types.case,\n        Feature.types.type\n      ]\n      columns.forEach((c, j) => {\n        try {\n          if (item[j + 1]) {\n            features.push(this.features.get(c).createFromImporter(item[j + 1]))\n          }\n        } catch (e) {\n          // ignore empty or non-parsable values\n        }\n      })\n\n      let grammartype = item[7]\n      // Type information can be empty if no ending is provided\n      if (grammartype) {\n        features.push(this.features.get(Feature.types.type).createFromImporter(grammartype))\n      }\n      // Footnotes\n      if (item[9]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[9].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n        footnotes = pofsFootnotes.filter(f => indexes.includes(f.index))\n      }\n      this.addInflectionData(partOfSpeech.value, Suffix, suffix, features, footnotes)\n    }\n  }\n\n  addVerbParticipleSuffixes (partOfSpeech, data) {\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let suffix = item[0]\n      // Handle special suffix values\n      if (!suffix || suffix === noSuffixValue) {\n        suffix = null\n      }\n\n      let features = [partOfSpeech]\n      let columns = [\n        Feature.types.conjugation,\n        Feature.types.voice,\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.number,\n        Feature.types.person,\n        Feature.types.case,\n        Feature.types.type\n      ]\n      columns.forEach((c, j) => {\n        try {\n          if (item[j + 1]) {\n            features.push(this.features.get(c).createFromImporter(item[j + 1]))\n          }\n        } catch (e) {\n          // ignore empty or non-parsable values\n        }\n      })\n\n      let grammartype = item[7]\n      // Type information can be empty if no ending is provided\n      if (grammartype) {\n        features.push(this.features.get(Feature.types.type).createFromImporter(grammartype))\n      }\n      this.addInflectionData(partOfSpeech.value, Suffix, suffix, features)\n    }\n  }\n\n  addVerbSupineSuffixes (partOfSpeech, data) {\n    // Some suffix values will mean a lack of suffix, they will be mapped to a null\n    let noSuffixValue = '-'\n\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let suffix = item[0]\n      // Handle special suffix values\n      if (!suffix || suffix === noSuffixValue) {\n        suffix = null\n      }\n\n      let features = [partOfSpeech]\n      // Ending,Conjugation,Voice,Mood,Tense,Number,Person,Case,Type,Footnote\n      let columns = [\n        Feature.types.case\n      ]\n      columns.forEach((c, j) => {\n        try {\n          if (item[j + 1]) {\n            features.push(this.features.get(c).createFromImporter(item[j + 1]))\n          }\n        } catch (e) {\n          // ignore empty or non-parsable values\n        }\n      })\n\n      this.addInflectionData(partOfSpeech.value, Suffix, suffix, features)\n    }\n  }\n\n  // For Lemmas of verbs and verb participles\n  addVerbForms (partOfSpeech, data, pofsFootnotes = []) {\n    let footnotes = []\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let hdwd = item[0]\n      let principalParts = item[1].split(/_/)\n      let lemma = new Lemma(hdwd, LatinLanguageDataset.languageID, principalParts)\n\n      let form = item[2]\n\n      // Lemma,PrincipalParts,Form,Voice,Mood,Tense,Number,Person,Footnote\n      let features = [\n        partOfSpeech\n      ]\n\n      if (hdwd && lemma) {\n        features.push(this.features.get(Feature.types.word).createFromImporter(hdwd))\n        if (!this.irregularLemmas.get(partOfSpeech.value).some(item => item.word === lemma.word)) {\n          this.irregularLemmas.get(partOfSpeech.value).push(lemma)\n        }\n      }\n\n      if (item[3]) {\n        features.push(this.features.get(Feature.types.voice).createFromImporter(item[3]))\n      }\n      if (item[4]) {\n        features.push(this.features.get(Feature.types.mood).createFromImporter(item[4]))\n      }\n      if (item[5]) {\n        features.push(this.features.get(Feature.types.tense).createFromImporter(item[5]))\n      }\n      if (item[6]) {\n        features.push(this.features.get(Feature.types.number).createFromImporter(item[6]))\n      }\n      if (item[7]) {\n        features.push(this.features.get(Feature.types.person).createFromImporter(item[7]))\n      }\n\n      // Footnotes\n      if (item[8]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[8].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n\n        footnotes = pofsFootnotes.filter(f => indexes.includes(f.index))\n      }\n      this.addInflectionData(partOfSpeech.value, Form, form, features, footnotes)\n    }\n  }\n\n  // For Lemmas of supine and gerundive\n  addSupineGerundiveForms (partOfSpeech, data, pofsFootnotes = []) {\n    let footnotes = []\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const item = data[i]\n      let lemmaWord = item[0]\n      let principalParts = item[1].split(/_/)\n      let form = item[2]\n\n      // Lemma,PrincipalParts,Form,Voice,Mood,Tense,Number,Person,Footnote\n      let features = [\n        partOfSpeech/*,\n        this.features.get(Feature.types.fullForm).createFromImporter(lemma.word) */\n      ]\n\n      if (lemmaWord) {\n        let lemma = new Lemma(lemmaWord, LatinLanguageDataset.languageID, principalParts)\n        features.push(this.features.get(Feature.types.word).createFromImporter(lemmaWord))\n        if (!this.irregularLemmas.get(partOfSpeech.value).some(item => item.word === lemma.word)) {\n          this.irregularLemmas.get(partOfSpeech.value).push(lemma)\n        }\n      }\n\n      if (item[3]) {\n        features.push(this.features.get(Feature.types.case).createFromImporter(item[3]))\n      }\n\n      // Footnotes\n      if (item[4]) {\n        // There can be multiple footnote indexes separated by spaces\n        let indexes = item[4].split(' ')\n        features.push(this.features.get(Feature.types.footnote).createFeatures(indexes))\n\n        footnotes = pofsFootnotes.filter(f => indexes.includes(f.index))\n      }\n      this.addInflectionData(partOfSpeech.value, Form, form, features, footnotes)\n    }\n  }\n\n  addFootnotes (partOfSpeech, classType, data) {\n    let footnotes = []\n    // First row are headers\n    for (let i = 1; i < data.length; i++) {\n      const footnote = this.addFootnote(partOfSpeech.value, classType, data[i][0], data[i][1])\n      footnotes.push(footnote)\n    }\n    return footnotes\n  }\n\n  loadData () {\n    let partOfSpeech\n    let suffixes\n    let forms\n    let footnotesData\n    let footnotes\n\n    // Nouns\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_NOUN)\n    footnotesData = papaparse.parse(nounFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Suffix, footnotesData.data)\n    suffixes = papaparse.parse(nounSuffixesCSV, { skipEmptyLines: true })\n    this.addSuffixes(partOfSpeech, suffixes.data, footnotes)\n\n    // Pronouns\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_PRONOUN)\n    footnotesData = papaparse.parse(pronounFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Form, footnotesData.data)\n    forms = papaparse.parse(pronounFormsCSV, { skipEmptyLines: true })\n    this.addPronounForms(partOfSpeech, forms.data, footnotes)\n\n    // Adjectives\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_ADJECTIVE)\n    footnotesData = papaparse.parse(adjectiveFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Suffix, footnotesData.data)\n    suffixes = papaparse.parse(adjectiveSuffixesCSV, { skipEmptyLines: true })\n    this.addSuffixes(partOfSpeech, suffixes.data, footnotes)\n\n    // Verbs\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_VERB)\n    footnotesData = papaparse.parse(verbFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Suffix, footnotesData.data)\n\n    suffixes = papaparse.parse(verbSuffixesCSV, { skipEmptyLines: true })\n    this.addVerbSuffixes(partOfSpeech, suffixes.data, footnotes)\n\n    footnotesData = papaparse.parse(verbFormFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Form, footnotesData.data)\n\n    forms = papaparse.parse(verbFormsCSV, { skipEmptyLines: true })\n    this.addVerbForms(partOfSpeech, forms.data, footnotes)\n\n    // Verb Participles\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_VERB_PARTICIPLE)\n    suffixes = papaparse.parse(verbParticipleSuffixesCSV, { skipEmptyLines: true })\n    this.addVerbParticipleSuffixes(partOfSpeech, suffixes.data)\n\n    footnotesData = papaparse.parse(verbParticipleFormFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Form, footnotesData.data)\n    forms = papaparse.parse(verbParticipleFormsCSV, { skipEmptyLines: true })\n    this.addVerbForms(partOfSpeech, forms.data, footnotes)\n\n    // Verb Supine\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_SUPINE)\n    suffixes = papaparse.parse(verbSupineSuffixesCSV, { skipEmptyLines: true })\n    this.addVerbSupineSuffixes(partOfSpeech, suffixes.data)\n\n    footnotesData = papaparse.parse(verbSupineFormFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Form, footnotesData.data)\n    forms = papaparse.parse(verbSupineFormsCSV, { skipEmptyLines: true })\n    this.addSupineGerundiveForms(partOfSpeech, forms.data, footnotes)\n\n    // Gerundive\n    partOfSpeech = this.features.get(Feature.types.part).createFeature(Constants.POFS_GERUNDIVE)\n    footnotesData = papaparse.parse(gerundiveFormFootnotesCSV, { skipEmptyLines: true })\n    footnotes = this.addFootnotes(partOfSpeech, Form, footnotesData.data)\n    forms = papaparse.parse(gerundiveFormsCSV, { skipEmptyLines: true })\n    this.addSupineGerundiveForms(partOfSpeech, forms.data, footnotes)\n\n    this.dataLoaded = true\n    return this\n  }\n\n  isIrregular (inflection) {\n    const pofs = inflection[Feature.types.part].value\n    if (this.irregularLemmas.has(pofs)) {\n      if (inflection[Feature.types.conjugation] && inflection[Feature.types.conjugation].value === Constants.TYPE_IRREGULAR) {\n        // This is an irregular verb that was identified by a morphological analyzer\n        return true\n      } else if (inflection[Feature.types.word]) {\n        return this.irregularLemmas.get(pofs).some(item => item.word === inflection[Feature.types.word].value)\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks whether we implemented (i.e. have word data) a particular word (stored in inflection.word).\n   * Currently those are irregular verbs that are not in our data CSV files.\n   * @param {Inflection} inflection - An inflection we need to check\n   * @return {boolean} - True if verb is implemented yet, false otherwise\n   */\n  isImplemented (inflection) {\n    /*\n    Identifies words that are not implemented. Currently those are irregular verbs that are not in our data CSV files.\n     */\n    const pofs = inflection[Feature.types.part].value\n    return Boolean(\n      !this.isIrregular(inflection) ||\n      this.irregularLemmas.get(pofs).some(item => item.word === inflection[Feature.types.word].value)\n    )\n  }\n\n  /**\n   * Returns a list of irregular lemmas matching one or more inflections.\n   * @param {Inflection[]} inflections - An array of inflections that will be used to search for matching lemmas.\n   * @return {Lemma[] | []} Array of matching Lemma objects or an empty array if nothing is found.\n   */\n  getMatchingIrregularLemmas (inflections) {\n    let lemmas = []\n    for (const inflection of inflections) {\n      const pofs = inflection[Feature.types.part].value\n      if (this.irregularLemmas.has(pofs)) {\n        let lemma = this.irregularLemmas.get(pofs).find(item => item.word === inflection[Feature.types.word].value)\n        if (lemma) {\n          lemmas.push(lemma)\n        }\n      }\n    }\n    return lemmas\n  }\n\n  static getObligatoryMatchList (inflection) {\n    if (inflection.constraints.irregular ||\n      inflection.hasFeatureValue(Feature.types.part, Constants.POFS_SUPINE) ||\n      inflection.hasFeatureValue(Feature.types.part, Constants.POFS_GERUNDIVE)\n    ) {\n      return [Feature.types.part, Feature.types.fullForm, Feature.types.word]\n    } else if (inflection.hasFeatureValue(Feature.types.part, Constants.POFS_VERB)) {\n      return [Feature.types.part]\n    } else if (inflection.constraints.fullFormBased) {\n      return [Feature.types.part, Feature.types.fullForm]\n    } else {\n      // Default value for suffix matching\n      return [Feature.types.part]\n    }\n  }\n\n  static getOptionalMatchList (inflection) {\n    const featureOptions = [\n      Feature.types.grmCase,\n      Feature.types.declension,\n      Feature.types.gender,\n      Feature.types.number,\n      Feature.types.voice,\n      Feature.types.mood,\n      Feature.types.tense,\n      Feature.types.person,\n      Feature.types.conjugation\n    ]\n\n    if (inflection.constraints.irregular) {\n      return [\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.number,\n        Feature.types.person,\n        Feature.types.voice,\n        Feature.types.conjugation\n      ]\n    } else {\n      return featureOptions.filter(f => inflection[f])\n    }\n  }\n\n  /**\n   * Returns a list of features that should be the same for the morphology match.\n   * @param {Inflection} inflection - An inflection for which a list needs to be built.\n   * @return {string[]} An array of feature names.\n   */\n  static getMorphologyMatchList (inflection) {\n    const featureOptions = [\n      Feature.types.grmCase,\n      Feature.types.declension,\n      Feature.types.gender,\n      Feature.types.number,\n      Feature.types.voice,\n      Feature.types.mood,\n      Feature.types.tense,\n      Feature.types.person,\n      Feature.types.conjugation\n    ]\n\n    if (inflection.constraints.irregular) {\n      return [\n        Feature.types.grmCase,\n        Feature.types.mood,\n        Feature.types.tense,\n        Feature.types.number,\n        Feature.types.person,\n        Feature.types.voice,\n        Feature.types.conjugation\n      ]\n    } else {\n      return featureOptions.filter(f => inflection[f])\n    }\n  }\n}\n","import InflectionData from './inflection-data.js'\nimport LatinDataset from './lang/latin/latin-language-dataset.js'\nimport GreekDataset from './lang/greek/greek-language-dataset.js'\n\n// Stores a LanguageDatasetFactory's single instance\nlet datasetFactory\n\n/**\n * Creates and stores datasets for all available languages. This is a singleton.\n * When created, datasets' data is not loaded yet. It will be loaded on a first call (lazy initialization).\n */\nexport default class LanguageDatasetFactory {\n  /**\n   * @param {Constructor[]} languageData - Language datasets of supported languages.\n   */\n  constructor (languageData = [LatinDataset, GreekDataset]) {\n    this.sets = new Map()\n    for (let Set of languageData) {\n      this.sets.set(Set.languageID, new Set())\n    }\n  }\n\n  /**\n   * Returns a single instance of self.\n   * @return {LanguageDatasetFactory} A self instances.\n   */\n  static get instance () {\n    if (!datasetFactory) {\n      datasetFactory = new LanguageDatasetFactory()\n    }\n    return datasetFactory\n  }\n\n  /**\n   * Returns an instance of a dataset for a language ID given.\n   * @param {symbol} languageID - A language ID of a dataset to be retrieved.\n   * @return {LanguageDataset} An instance of a language dataset.\n   */\n  static getDataset (languageID) {\n    let instance = this.instance\n    if (instance.sets.has(languageID)) {\n      let dataset = instance.sets.get(languageID)\n      if (!dataset.dataLoaded) {\n        dataset.loadData()\n      }\n      return dataset\n    }\n  }\n\n  /**\n   * Finds matching forms or suffixes for a homonym.\n   * @deprecated Will be removed when will have no usages\n   * @param {Homonym} homonym - A homonym for which matching suffixes must be found.\n   * @return {InflectionData} A return value of an inflection query.\n   */\n  static getInflectionData (homonym) {\n    let instance = this.instance\n    if (instance.sets.has(homonym.languageID)) {\n      let dataset = this.getDataset(homonym.languageID)\n      for (let inflection of homonym.inflections) {\n        // Set grammar rules for an inflection\n        inflection.setConstraints()\n        // dataset.setInflectionConstraints(inflection)\n      }\n      return dataset.getInflectionData(homonym)\n    } else {\n      return new InflectionData(homonym) // Return an empty inflection data set\n    }\n  }\n}\n","import { Feature, LanguageModelFactory as LMF } from 'alpheios-data-models'\nimport Morpheme from './morpheme.js'\nimport Suffix from './suffix.js'\nimport Form from './form.js'\nimport Paradigm from './paradigm.js'\nimport Footnote from './footnote.js'\nimport InflectionSet from './inflection-set.js'\nimport InflectionData from './inflection-data.js'\nimport MatchData from './match-data.js'\n\n/**\n * Stores inflection language data\n */\nexport default class LanguageDataset {\n  /**\n   * Initializes a LanguageDataset.\n   * @param {symbol} languageID - A language ID of a data set.\n   */\n  constructor (languageID) {\n    if (!languageID) {\n      // Language is not supported\n      throw new Error('Language ID cannot be empty.')\n    }\n\n    this.languageID = languageID\n    this.dataLoaded = false\n    this.model = LMF.getLanguageModel(languageID)\n    this.pos = new Map()\n    this.footnotes = [] // Footnotes\n  }\n\n  /**\n   * Checks weather a language dataset has data on a certain word (stored in inflection.word) or not.\n   * @param {Inflection} inflection - An inflection that needs to be checked.\n   * @return {boolean} True if word is supported, false otherwise\n   */\n  isImplemented (inflection) {\n    return true\n  }\n\n  /**\n   * Each grammatical feature can be either a single or an array of Feature objects. The latter is the case when\n   * an ending can belong to several grammatical features at once (i.e. belong to both 'masculine' and\n   * 'feminine' genders.\n   *\n   * @param {string} partOfSpeech - A part of speech this inflection belongs to.\n   * @param {Function} ClassType - either Suffix, Form, or Paradigm\n   * @param {string | null} itemValue - A text of an item. It is either a string or null if there is no suffix.\n   * @param {Feature[]} features - An array of Feature objects.\n   * @param {Footnote[]} footnotes - Footnotes in an array.\n   * @param {ExtendedLanguageData} extendedLangData\n   */\n  addInflectionData (partOfSpeech, ClassType, itemValue, features, footnotes = [], extendedLangData = undefined) {\n    let item = new ClassType(itemValue)\n    item.extendedLangData = extendedLangData\n\n    // Go through all features provided\n    for (let feature of features) {\n      /*\n      Footnotes are special because they are stored as both single or multi-value feature and\n      as an array of Footnote objects into a `footnote` prop (so they can be iterated over during table construction)\n       */\n      if (feature.type === Feature.types.footnote) {\n        item[Feature.types.footnote] = item[Feature.types.footnote] || []\n        item[Feature.types.footnote].push(...feature.values)\n        item.footnotes = footnotes\n      } else {\n        item.features[feature.type] = feature\n      }\n    }\n\n    if (!this.pos.has(partOfSpeech)) {\n      this.pos.set(partOfSpeech, new InflectionSet(partOfSpeech, this.languageID))\n    }\n\n    this.pos.get(partOfSpeech).addInflectionItem(item)\n  }\n\n  addParadigms (partOfSpeech, paradigms) {\n    if (!this.pos.has(partOfSpeech.value)) {\n      this.pos.set(partOfSpeech.value, new InflectionSet(partOfSpeech.value, this.languageID))\n    }\n    this.pos.get(partOfSpeech.value).addInflectionItems(paradigms)\n  }\n\n  /**\n   * Stores a footnote item.\n   * @param {string} partOfSpeech - A part of speech this footnote belongs to\n   * @param {Function} classType - A class constructor of either a Suffix or a Form\n   * @param {number} index - A footnote's index.\n   * @param {string} text - A footnote's text.\n   * @return {Footnote} A footnote object that was added to the language dataset.\n   */\n  addFootnote (partOfSpeech, classType, index, text) {\n    if (!index) {\n      throw new Error('Footnote index data should not be empty.')\n    }\n\n    if (!text) {\n      throw new Error('Footnote text data should not be empty.')\n    }\n\n    let footnote = new Footnote(index, text, partOfSpeech)\n\n    // this.footnotes.push(footnote)\n\n    if (!this.pos.has(partOfSpeech)) {\n      this.pos.set(partOfSpeech, new InflectionSet(partOfSpeech, this.languageID))\n    }\n    this.pos.get(partOfSpeech).addFootnote(classType, index, footnote)\n    return footnote\n  }\n\n  /**\n   * Checks for obligatory matches between an inflection and an item.\n   * @param {Inflection} inflection - An inflection object.\n   * @param {Morpheme} item - An inflection data item: a Suffix, a Form, or a Paradigm.\n   * @param {Morpheme.comparisonTypes} comparisonType - What matching algorithm to use (exact or partial).\n   * @return {Object} A results in the following format:\n   *   {Feature[]} matchedItems - Features that matched (if any)\n   *   {boolean} matchResult - True if all obligatory matches are fulfilled, false otherwise.\n   */\n  static getObligatoryMatches (inflection, item, comparisonType = Morpheme.comparisonTypes.EXACT) {\n    return this.checkMatches(inflection.constraints.obligatoryMatches, inflection, item, comparisonType)\n  }\n\n  /**\n   * Checks for optional matches between an inflection and an item.\n   * @param {Inflection} inflection - An inflection object.\n   * @param {Morpheme} item - An inflection data item: a Suffix, a Form, or a Paradigm.\n   * @param {Morpheme.comparisonTypes} comparisonType - What matching algorithm to use (exact or partial).\n   * @return {Object} A results in the following format:\n   *   {Feature[]} matchedItems - Features that matched (if any)\n   *   {boolean} matchResult - True if all obligatory matches are fulfilled, false otherwise.\n   */\n  static getOptionalMatches (inflection, item, comparisonType = Morpheme.comparisonTypes.EXACT) {\n    return this.checkMatches(inflection.constraints.optionalMatches, inflection, item, comparisonType)\n  }\n\n  static getMorphologyMatches (inflection, item, comparisonType = Morpheme.comparisonTypes.EXACT) {\n    return this.checkMatches(inflection.constraints.morphologyMatches, inflection, item, comparisonType)\n  }\n\n  /**\n   * Checks if values of features from `featureList` are the same between an inflection\n   * and a morpheme. If item does not have a feature from `featureList`, such feature\n   * will be still counted as a match. It is required to produce a full match in cases\n   * when a morpheme has incomplete feature data.\n   * @param {string[]} featureList - A list of feature names that should be checked for matching values.\n   * @param {Inflection} inflection - An inflection object.\n   * @param {Suffix|Form|Paradigm|Morpheme} item - A morpheme object.\n   * @param {Morpheme.comparisonTypes} comparisonType - What matching algorithm to use (exact or partial).\n   * @return {{fullMatch: boolean, matchedItems: string[]}} Match results object:\n   * fullMatch: true if all features form a list are the same between an inflection and an item.\n   * matchItems: a list of feature names that are the same between an inflection and an item.\n   */\n  static checkMatches (featureList, inflection, item, comparisonType = Morpheme.comparisonTypes.EXACT) {\n    let fullMatchQty = featureList.length\n    let matches = featureList.reduce((acc, f) => {\n      if (inflection.hasOwnProperty(f) && item.features.hasOwnProperty(f) && item.featureMatch(inflection[f], comparisonType)) {\n        acc.push(f)\n      } else if (!inflection.hasOwnProperty(f) || !item.features.hasOwnProperty(f)) {\n        /*\n        If either inflection or item does not have a certain feature,\n        this feature is excluded from a comparison\n         */\n        fullMatchQty--\n      }\n      return acc\n    }, [])\n\n    let result = (matches.length === fullMatchQty)\n    return { fullMatch: result, matchedItems: matches }\n  }\n\n  /**\n   * Sets inflection grammar properties based on inflection data\n   * @param {Inflection} inflection - An inflection data object\n   * @param {Lemma} lemma\n   * @return {Inflection} A modified inflection data object\n   */\n  setInflectionData (inflection, lemma) {\n    /*\n     Sets possible constraints by language model. It uses part of speech matching mostly.\n     However, language model cannot always determine those constraints reliably.\n     In that case it will return a list of all possible constraints and we would need\n     to verify with ones hold and which ones not. For example, verbs in Latin\n     can be both suffix based and full form based. A language model will return both\n     suffixBased and fullFormBased flags set to true and we will need to determine\n     which one of those makes sense for each particular verb.\n     */\n\n    let partOfSpeech = inflection[Feature.types.part]\n\n    if (!partOfSpeech) {\n      throw new Error('Part of speech data is missing in an inflection')\n    }\n\n    if (!partOfSpeech.isSingle) {\n      throw new Error('Part of speech data should have only one value')\n    }\n    partOfSpeech = partOfSpeech.value\n\n    // add the lemma to the inflection before setting inflection constraints\n    inflection.lemma = lemma\n    inflection.addFeature(new Feature(Feature.types.word, lemma.word, lemma.languageID))\n\n    inflection.constraints = this.model.getInflectionConstraints(inflection)\n\n    if (inflection.constraints.pronounClassRequired) {\n      /*\n      A `class` grammatical feature is an obligatory match for Greek pronouns. Class, however, is not present in\n      the Inflection object at the time we receive it from a morphological analyzer because a morphological analyzer\n      does not provide such data. To fix this, for pronouns we need to figure out what the `class` feature value is\n      by finding an exact pronoun form match in inflection data and obtaining a corresponding `class` value.\n      The value found will then be attached to an Inflection object.\n       */\n      // Get a class this inflection belongs to\n      let grmClasses = this.model.getPronounClasses(this.pos.get(partOfSpeech).types.get(Form).items, inflection.getForm())\n      if (!grmClasses) {\n        console.warn(`Cannot determine a grammar class for a ${inflection.form} pronoun.\n              Table construction will probably fail`)\n      } else {\n        // One or more values found\n        inflection.addFeature(grmClasses)\n      }\n    }\n\n    // Check if this is an irregular word after a `word` feature is added\n    inflection.constraints.irregular = this.isIrregular(inflection)\n    if (inflection.constraints.irregular) {\n      // Irregular words are always full form based\n      inflection.constraints.fullFormBased = true\n      // inflection.constraints.suffixBased = false // Turn this on to not show regular tables for irregular verbs\n    }\n    inflection.constraints.implemented = this.isImplemented(inflection)\n\n    if (inflection.constraints.implemented) {\n      if (!this.pos.get(partOfSpeech)) {\n        // There is no source data for this part of speech\n        console.warn(`There is no source data for the following part of speech: ${partOfSpeech}`)\n        return inflection\n      }\n\n      // This cannot be determined by language model so we have to check it manually\n      inflection.constraints.paradigmBased = this.pos.get(partOfSpeech).hasMatchingItems(Paradigm, inflection)\n\n      // Set match features data\n      inflection.constraints.obligatoryMatches = this.constructor.getObligatoryMatchList(inflection)\n      inflection.constraints.optionalMatches = this.constructor.getOptionalMatchList(inflection)\n      inflection.constraints.morphologyMatches = this.constructor.getMorphologyMatchList(inflection)\n\n      /*\n      Check if inflection if full form based if `fullFormBased` flag is set\n      (i.e. inflection model knows it can be full form based)\n      or if no other flags are set (we don't know what type of inflection it is and want to check all to figure out).\n       */\n      if (inflection.constraints.fullFormBased || !(inflection.constraints.suffixBased || inflection.constraints.paradigmBased)) {\n        /*\n        If we don't know what inflection is based upon, let's assume\n        this inflection is full form based and let's try to find matching forms.\n        For this, we need set a `fullFormBased` flag on inflection temporarily\n        and clear it if no matching forms are found (because it cannot be based on full forms then).\n        This flag is required for matcher to compare full forms, not suffixes.\n         */\n        inflection.constraints.fullFormBased = true\n        // TODO: This is done for almost every word and it does scan across many items. Need to optimize\n        const hasMatchingForms = this.hasMatchingForms(partOfSpeech, inflection)\n        if (hasMatchingForms) {\n          // inflection.constraints.suffixBased = false // Enable this to not show regular tables for form-based words\n        } else {\n          // This cannot be a full form based inflection\n          inflection.constraints.fullFormBased = false\n        }\n      }\n\n      /*\n      If we did not figure out what type of inflection it is,\n      then it is probably suffix based as this type is more prevalent\n       */\n      if (!inflection.constraints.fullFormBased && !inflection.constraints.paradigmBased) {\n        // If it is not full form based, then probably it is suffix base\n        inflection.constraints.suffixBased = true\n      }\n    }\n    return inflection\n  }\n\n  /**\n   * Build a map of inflections keyed by part of speech.\n   * Lexemes in homonym are sorted by a morph adapter, and we will rely on that sort order.\n   * An order of part of speech keys determines an order of parts of speech in the output.\n   * An order of inflections within a part of speech will be determined by an order of\n   * inflection table views within a ViewSet object.\n   * @deprecated Will be removed when will have no usages\n   * @param {Homonym} homonym - A homonym containing lexemes with inflections\n   * @return {Map<{string}, {Inflection[]}>} Maps on array of inflections to a part of speech\n   */\n  groupInflections (homonym) {\n    let inflections = new Map()\n    for (let lexeme of homonym.lexemes) {\n      for (let inflection of lexeme.inflections) {\n        // Inflections are grouped by part of speech\n        inflection = this.setInflectionData(inflection, lexeme.lemma)\n        let pofsValue = inflection[Feature.types.part].value\n        if (!inflections.has(pofsValue)) { inflections.set(pofsValue, []) }\n        inflections.get(pofsValue).push(inflection)\n      }\n    }\n    return inflections\n  }\n\n  /**\n   * In order to use morphemes with Vue.js, each morpheme in a table has to be unique.\n   * However, a if morpheme has a feature with multiple values, that same morpheme will be\n   * included into multiple inflection table cells.\n   * To avoid that, we need to replace a single morpheme with multiple values of a feature by\n   * multiple morphemes each having features with single value only.\n   * @param {Suffix[]|Form[]|Paradigm[]} morphemes - An array of morpheme that might have features with multiple values\n   * @return {Suffix[]|Form[]|Paradigm[]} An array of morphemes where all features have single values\n   */\n  static splitMultiValMorphems (morphemes) {\n    let result = []\n    for (const morpheme of morphemes) {\n      let multivalFeatures = []\n      for (const featureName of Object.keys(morpheme.features)) {\n        if (morpheme.features[featureName].isMultiple) {\n          multivalFeatures.push(morpheme.features[featureName])\n        }\n      }\n\n      if (multivalFeatures.length > 0) {\n        result.push(...morpheme.split(multivalFeatures))\n      } else {\n        result.push(morpheme)\n      }\n    }\n    return result\n  }\n\n  /**\n   * Creates an inflection set filled with inflection data.\n   * @param {string} pofsValue - A part of speech of the inflection set.\n   * @param {Inflection[]} inflections - An array of inflections.\n   * @param {Object} options - Matcher options, see `matcher()` for more details.\n   * @return {InflectionSet} Constructed inflection set.\n   */\n  createInflectionSet (pofsValue, inflections, options) {\n    let inflectionSet = new InflectionSet(pofsValue, this.languageID)\n    inflectionSet.inflections = inflections.filter(i => i.constraints.implemented === true)\n    inflectionSet.isImplemented = inflectionSet.inflections.length > 0\n\n    if (inflectionSet.isImplemented) {\n      let sourceSet = this.pos.get(pofsValue)\n      if (!sourceSet) {\n        // There is no source data for this part of speech\n        console.warn(`There is no source data for the following part of speech: ${pofsValue}`)\n        return inflectionSet\n      }\n\n      /*\n        There might be cases when we don't know beforehand if an inflection is form based.\n        In this case, if `fullFormBased` constraint not set, we'll try to find matching forms within a source data.\n        If any found, `fullFormBased` constraint will be set to true.\n      */\n\n      // If at least one inflection in a group has a constraint, we'll search for data based on that criteria\n      let suffixBased = inflections.some(i => i.constraints.suffixBased)\n      let formBased = inflections.some(i => i.constraints.fullFormBased)\n      let paradigmBased = inflections.some(i => i.constraints.paradigmBased)\n\n      // Check for suffix matches\n      if (suffixBased) {\n        if (sourceSet.types.has(Suffix)) {\n          let items = sourceSet.types.get(Suffix).items.reduce(this.reducerGen(inflectionSet.inflections, options), [])\n          if (items.length > 0) {\n            inflectionSet.addInflectionItems(items)\n          }\n        }\n      }\n\n      // If there is at least on full form based inflection, search for full form items\n      if (formBased) {\n        // Match against form based inflection only\n        const formInflections = inflectionSet.inflections.filter(i => i.constraints.fullFormBased)\n        let items = sourceSet.types.get(Form).items.reduce(this.reducerGen(formInflections, options), [])\n        if (items.length > 0) {\n          inflectionSet.addInflectionItems(items)\n        }\n      }\n\n      // Get paradigm matches\n      if (paradigmBased) {\n        let paradigms = sourceSet.getMatchingItems(Paradigm, inflections)\n        inflectionSet.addInflectionItems(paradigms)\n      }\n\n      // Add footnotes\n      if (inflectionSet.hasTypes) {\n        for (const inflectionType of inflectionSet.inflectionTypes) {\n          let footnotesSource = sourceSet.types.get(inflectionType).footnotesMap\n          const footnotesInUse = inflectionSet.types.get(inflectionType).footnotesInUse\n          for (let footnote of footnotesSource.values()) {\n            if (footnotesInUse.includes(footnote.index)) {\n              inflectionSet.addFootnote(inflectionType, footnote.index, footnote)\n            }\n          }\n        }\n      }\n    }\n\n    return inflectionSet\n  }\n\n  /**\n   * @deprecated Will be removed when will have no usages\n   * @param homonym\n   * @return {InflectionData}\n   */\n  getInflectionData (homonym) {\n    // Add support for languages\n    let result = new InflectionData(homonym)\n    let inflections = this.groupInflections(homonym)\n\n    // Scan for matches for all parts of speech separately\n    for (const [pofsValue, inflectionsGroup] of inflections.entries()) {\n      let inflectionSet = this.createInflectionSet(pofsValue, inflectionsGroup)\n      result.addInflectionSet(inflectionSet)\n    }\n    return result\n  }\n\n  hasMatchingForms (partOfSpeech, inflection) {\n    if (this.pos.has(partOfSpeech)) {\n      let inflectionSet = this.pos.get(partOfSpeech)\n\n      if (inflectionSet.types.has(Form)) {\n        return inflectionSet.types.get(Form).items.find(item => this.matcher([inflection], item, { findMatches: false })) !== undefined\n      }\n    }\n    return false\n  }\n\n  reducerGen (inflections, options) {\n    const instance = this\n    function reducerFn (accumulator, item) {\n      let result = instance['matcher'](inflections, item, options)\n      if (result) {\n        accumulator.push(result)\n      }\n      return accumulator\n    }\n    return reducerFn.bind(this)\n  }\n\n  /**\n   * Decides whether a suffix is a match to any of inflections, and if it is, what type of match it is.\n   * @param {Inflection[]} inflections - an array of inflection objects to be matched against a suffix.\n   * @param {Suffix} item - a suffix to be matched with inflections.\n   * @param {Object} options - An options object that may contain the following properties:\n   *        findMatches - whether to find form, suffix, and morphology matches. Default: true\n   *        findMorphologyMatches - whether to find morphology matches. If set, overrides values set by `findMatches`\n   * @returns {Suffix | null} if a match is found, returns a suffix object modified with some\n   * additional information about a match. if no matches found, returns null.\n   */\n  matcher (inflections, item, options = {}) {\n    if (!options.hasOwnProperty('findMatches')) {\n      options.findMatches = true // Default value\n    }\n    if (!options.hasOwnProperty('findMorphologyMatches')) {\n      // If not specified explicitly, will be controlled by `findMatches` value\n      options.findMorphologyMatches = options.findMatches // Default value\n    }\n    // Any of those features must match between an inflection and an ending\n    let bestMatchData = null // information about the best match we would be able to find\n\n    /*\n     There can be only one full match between an inflection and a suffix (except when suffix has multiple values?)\n     But there could be multiple partial matches. So we should try to find the best match possible and return it.\n     a fullFeature match is when one of inflections has all grammatical features fully matching those of a suffix\n     */\n\n    for (let inflection of inflections) {\n      let matchData = new MatchData() // Create a match profile\n      if (options.findMatches) {\n        matchData.suffixMatch = inflection.smartWordCompare(item.value, item.constructor.name, { fuzzySuffix: true })\n      }\n\n      // Check for obligatory matches\n      const obligatoryMatches = this.constructor.getObligatoryMatches(inflection, item, Morpheme.comparisonTypes.PARTIAL)\n      if (obligatoryMatches.fullMatch) {\n        matchData.matchedFeatures.push(...obligatoryMatches.matchedItems)\n      } else {\n        // If obligatory features do not match, there is no reason to check other items\n        break\n      }\n\n      /*\n      Check for optional matches. Use `All_VALUES` matching algorithm\n      as multiple values in inflection and morpheme can go in different order.\n       */\n      const optionalMatches = this.constructor.getOptionalMatches(inflection, item, Morpheme.comparisonTypes.PARTIAL)\n      matchData.matchedFeatures.push(...optionalMatches.matchedItems)\n\n      if (options.findMorphologyMatches) {\n        const morphologyMatches = this.constructor.getMorphologyMatches(inflection, item, Morpheme.comparisonTypes.PARTIAL)\n        matchData.morphologyMatch = morphologyMatches.fullMatch\n      } else {\n        matchData.morphologyMatch = false\n      }\n\n      if (matchData.suffixMatch && obligatoryMatches.fullMatch && optionalMatches.fullMatch) {\n        // This is a full match\n        matchData.fullMatch = true\n\n        // There can be only one full match, no need to search any further\n        if (options.findMatches) {\n          item.match = matchData\n        }\n\n        return item\n      }\n      bestMatchData = this.bestMatch(bestMatchData, matchData)\n    }\n\n    if (bestMatchData) {\n      // There is some match found\n      if (options.findMatches) {\n        item.match = bestMatchData\n      }\n      return item\n    }\n    return null\n  }\n\n  /**\n   * Decides whether matchA is 'better' (i.e. has more items matched) than matchB or not\n   * @param {MatchData} matchA\n   * @param {MatchData} matchB\n   * @returns {MatchData} A best of two matches\n   */\n  bestMatch (matchA, matchB) {\n    // If one of the arguments is not set, return the other one\n    if (!matchA && matchB) {\n      return matchB\n    }\n\n    if (!matchB && matchA) {\n      return matchA\n    }\n\n    // item match has a priority\n    if (matchA.suffixMatch !== matchB.suffixMatch) {\n      if (matchA.suffixMatch > matchB.suffixMatch) {\n        return matchA\n      } else {\n        return matchB\n      }\n    }\n\n    // If same on suffix matche, compare by how many features matched\n    if (matchA.matchedFeatures.length >= matchB.matchedFeatures.length) {\n      // Arbitrarily return matchA if matches are the same\n      return matchA\n    } else {\n      return matchB\n    }\n  }\n\n  /**\n   * Checks whether a word in an inflection is irregular or not.\n   * @param {Inflection} inflection - Inflection to be checked.\n   * @return {boolean} - True if the word is irregular, false otherwise.\n   */\n  isIrregular (inflection) {\n    return false\n  }\n}\n","/**\n * Detailed information about a match type.\n */\nexport default class MatchData {\n  constructor () {\n    this.suffixMatch = false // Whether two suffixes are the same.\n    this.formMatch = false // Whether two forms of the word are the same\n    this.fullMatch = false // Whether two suffixes and all grammatical features, including part of speech, are the same.\n    this.morphologyMatch = false // Whether all morphological features are the same\n    this.matchedFeatures = [] // How many features matches each other.\n  }\n\n  static readObject (jsonObject) {\n    let matchData = new MatchData()\n    matchData.suffixMatch = jsonObject.suffixMatch\n    matchData.fullMatch = jsonObject.fullMatch\n    for (let feature of jsonObject.matchedFeatures) {\n      matchData.matchedFeatures.push(feature)\n    }\n    return matchData\n  }\n\n  toString () {\n    return `MatchData: suffixMatch: ${this.suffixMatch}, formMatch: ${this.formMatch}, fullMatch: ${this.fullMatch}, morphologyMatch: ${this.morphologyMatch},` +\n      ` matchedFeatures: [${this.matchedFeatures}]`\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport InflectionList from './inflection-list.js'\nimport MatchData from './match-data'\nimport ExtendedLanguageData from './extended-language-data'\nimport uuidv4 from 'uuid/v4'\n\n/**\n * Suffix is an ending of a word with none or any grammatical features associated with it.\n * Features are stored in properties whose names are type of a grammatical feature (i.e. case, gender, etc.)\n * Each feature can have a single or multiple values associated with it (i.e. gender can be either 'masculine',\n * a single value, or 'masculine' and 'feminine'. That's why all values are stored in an array.\n */\nexport default class Morpheme {\n  /**\n   * Initializes a Suffix object.\n   * @param {string | null} morphemeValue - A suffix text or null if suffix is empty.\n   */\n  constructor (morphemeValue) {\n    if (morphemeValue === undefined) {\n      throw new Error('Morpheme value should not be empty.')\n    }\n    this.id = uuidv4()\n    this.value = morphemeValue\n    this.features = {}\n    this.featureGroups = {}\n\n    /*\n    Extended language data stores additional suffix information that is specific for a particular language.\n    It uses the following schema:\n    {string} language(key): {object} extended language data. This object is specific for each language\n    and is defined in a language model.\n     */\n    this.extendedLangData = {}\n    this.match = undefined\n\n    /**\n     * @type {Footnote[]}\n     */\n    this.footnotes = []\n  }\n\n  /**\n   * Creates a list of items of the same type as self\n   * @return {InflectionList}\n   */\n  static createList () {\n    return new InflectionList(this)\n  }\n\n  static get comparisonTypes () {\n    return {\n      /**\n       * Should have the same number of values. Every value should match its counterpart's value and its order.\n       */\n      EXACT: 'Exact Match',\n      /**\n       * Should have the same number of values. Every value should match a value of its counterpart.\n       * Same as `EXACT`, but does not compare value's order.\n       */\n      ALL_VALUES: 'All values',\n      /**\n       * At least one value between two features should be the same.\n       */\n      PARTIAL: 'Partial Match'\n    }\n  }\n\n  get hasFootnotes () {\n    return Boolean(this.footnotes.length)\n  }\n\n  static readObject (jsonObject) {\n    let suffix = new this(jsonObject.value)\n\n    if (jsonObject.features) {\n      for (let key in jsonObject.features) {\n        if (jsonObject.features.hasOwnProperty(key)) {\n          suffix.features[key] = jsonObject.features[key]\n        }\n      }\n    }\n\n    if (jsonObject.featureGroups) {\n      for (let key in jsonObject.featureGroups) {\n        if (jsonObject.featureGroups.hasOwnProperty(key)) {\n          suffix.featureGroups[key] = []\n          for (let value of jsonObject.featureGroups[key]) {\n            suffix.featureGroups[key].push(value)\n          }\n        }\n      }\n    }\n\n    if (jsonObject[Feature.types.footnote]) {\n      suffix[Feature.types.footnote] = []\n      for (let footnote of jsonObject[Feature.types.footnote]) {\n        suffix[Feature.types.footnote].push(footnote)\n      }\n    }\n\n    if (jsonObject.match) {\n      suffix.match = MatchData.readObject(jsonObject.match)\n    }\n\n    for (const lang in jsonObject.extendedLangData) {\n      if (jsonObject.extendedLangData.hasOwnProperty(lang)) {\n        suffix.extendedLangData[lang] = ExtendedLanguageData.readObject(jsonObject.extendedLangData[lang])\n      }\n    }\n    return suffix\n  }\n\n  /**\n   * Returns a copy of itself. Used in splitting suffixes with multi-value features.\n   * @returns {Suffix}\n   */\n  clone () {\n    // TODO: do all-feature two-level cloning\n    let clone = new this.constructor(this.value)\n    for (const key in this.features) {\n      if (this.features.hasOwnProperty(key)) {\n        clone.features[key] = this.features[key]\n      }\n    }\n    for (const key in this.featureGroups) {\n      if (this.featureGroups.hasOwnProperty(key)) {\n        clone.featureGroups[key] = this.featureGroups[key]\n      }\n    }\n\n    if (this[Feature.types.footnote]) {\n      clone[Feature.types.footnote] = this[Feature.types.footnote]\n    }\n\n    if (this.match) {\n      clone.match = this.match\n    }\n\n    clone.footnotes.push(...this.footnotes)\n\n    for (const lang in this.extendedLangData) {\n      if (this.extendedLangData.hasOwnProperty(lang)) {\n        clone.extendedLangData[lang] = this.extendedLangData[lang]\n      }\n    }\n    return clone\n  }\n\n  /**\n   * Checks if a morpheme has at least one common feature value with a `feature`.\n   * @param {Feature} feature - A feature we need to match with the ones stored inside the morpheme object.\n   * @param {Morpheme.comparisonTypes} comparisonType - What matching algorithm to use (exact or partial).\n   * @returns {boolean} - True if a `feature` has at least one value in common with a morpheme, false otherwise.\n   */\n  featureMatch (feature, comparisonType) {\n    const matchingValues = this.matchingValues(feature, comparisonType)\n    return matchingValues.length > 0\n  }\n\n  /**\n   * Returns a list of values that are the same between a morpheme and a comparisonFeature.\n   * Both morpheme and a comparisonFeature can have either single or multiple values.\n   * A match is found if morpheme has one or several values of a comparisonFeature.\n   * @param {Feature} comparisonFeature - A feature morpheme should be compared with.\n   * @param {Morpheme.comparisonTypes} comparisonType - What matching algorithm to use (exact or partial).\n   * An exact match requires all values of this and comparison features to be the same. This and comparison\n   * features should also have the same number and order of values.\n   * A partial match requires this and comparison features to have at least one intersecting feature value.\n   * @return {string[]} A list of matching feature values\n   */\n  matchingValues (comparisonFeature, comparisonType = Morpheme.comparisonTypes.EXACT) {\n    let matches = []\n\n    if (comparisonFeature && this.features.hasOwnProperty(comparisonFeature.type)) {\n      const morphemeValue = this.features[comparisonFeature.type]\n\n      if (comparisonType === Morpheme.comparisonTypes.EXACT) {\n        // Match all values and their order\n        if (morphemeValue.value === comparisonFeature.value) {\n          matches.push(comparisonFeature.value)\n        }\n      } else if (comparisonType === Morpheme.comparisonTypes.ALL_VALUES) {\n        // Match all values between themselves, ignore order\n        let match = true\n        for (const value of morphemeValue.values) {\n          match = match && comparisonFeature.values.includes(value)\n        }\n        if (match) {\n          matches.push(comparisonFeature.value)\n        }\n      } else if (comparisonType === Morpheme.comparisonTypes.PARTIAL) {\n        // At least one value should be the same\n        for (const cfValue of comparisonFeature.values) {\n          if (morphemeValue.values.includes(cfValue)) {\n            matches.push(cfValue)\n          }\n        }\n      } else {\n        console.warn(`Comparison type \"${comparisonType}\" is not supported`)\n      }\n    }\n\n    return matches\n  }\n\n  /**\n   * Find feature groups in Suffix.featureGroups that are the same between suffixes provided\n   * @param suffixes\n   */\n  static getCommonGroups (suffixes) {\n    let features = Object.keys(suffixes[0].featureGroups)\n\n    let commonGroups = features.filter(feature => {\n      let result = true\n      for (let i = 1; i < suffixes.length; i++) {\n        result = result && suffixes[i].features.hasOwnProperty(feature)\n      }\n      return result\n    })\n    return commonGroups\n  }\n\n  /**\n   * Finds out if an suffix is in the same group with some other suffix. The other suffix is provided as a function argument.\n   * Two suffixes are considered to be in the same group if they are:\n   * a. Have at least one common group in featureGroups;\n   * b. Have the same suffix\n   * c. Have values of all features the same except for those that belong to a common group(s)\n   * d. Values of the common group features must be complementary. Here is an example:\n   * Let's say a 'gender' group can have values such as 'masculine' and 'feminine'. Then suffixes will be combined\n   * only if gender value of one suffix is 'masculine' and the other value is 'feminine'. If both suffixes have the same\n   * either 'masculine' or 'feminine' value, they sill not be combined as are not being complementary.\n   * @param {Suffix} suffix - An other suffix that we compare this suffix with.\n   * @returns {boolean} - True if both suffixes are in the same group, false otherwise.\n   */\n  isInSameGroupWith (suffix) {\n    let commonGroups = Morpheme.getCommonGroups([this, suffix])\n    if (commonGroups.length < 1) {\n      // If elements do not have common groups in Suffix.featureGroups then they are not in the same group\n      return false\n    }\n\n    let commonValues = {}\n    commonGroups.forEach((feature) => { commonValues[feature] = new Set([this.features[feature]]) })\n\n    let result = true\n    result = result && this.value === suffix.value\n    // If suffixes does not match don't check any further\n    if (!result) {\n      return false\n    }\n\n    // Check all features to be a match, except those that are possible group values\n    for (let feature of Object.keys(this.features)) {\n      if (commonGroups.indexOf(feature) >= 0) {\n        commonValues[feature].add(suffix.features[feature])\n        // Do not compare common groups\n        continue\n      }\n\n      result = result && this.features[feature] === suffix.features[feature]\n      // If feature mismatch discovered, do not check any further\n      if (!result) {\n        return false\n      }\n    }\n\n    commonGroups.forEach(feature => {\n      result = result && commonValues[feature].size === 2\n    })\n\n    return result\n  }\n\n  /**\n   * Splits a morpheme that has multiple values of one or more grammatical features into an array of Morpheme objects\n   * with each Morpheme object having only a single value of those grammatical features. Initial multiple values\n   * are stored in a featureGroups[featureType] property as an array of values.\n   * @param {Feature[]} features - Multiple grammatical feature values.\n   * @param {number} level - Iteration level for recursive call tracking.\n   * @returns {Morpheme[]} - An array of morphemes.\n   */\n  split (features, level = 0) {\n    // TODO: Not tested for multiple features (as there were no such cases yet)\n    let morphemes = []\n    const currentFeature = features[level]\n    for (const value of currentFeature.values) {\n      if (level < features.length - 1) {\n        let splitted = this.splitByFeature(features, level + 1)\n        for (let morpheme of splitted) {\n          morpheme.features[currentFeature.type] = currentFeature.createFeature(value)\n          morpheme.featureGroups[currentFeature.type] = currentFeature.values\n          morphemes.push(morpheme)\n        }\n      } else {\n        // The last level\n        let copy = this.clone()\n        copy.features[currentFeature.type] = currentFeature.createFeature(value)\n        copy.featureGroups[currentFeature.type] = currentFeature.values\n        morphemes.push(copy)\n      }\n    }\n    return morphemes\n  }\n\n  /**\n   * Combines suffixes that are in the same group together. Suffixes to be combined must have their values listed\n   * in an array stored as featureGroups[featureType] property.\n   * @param {Suffix[]} suffixes - An array of suffixes to be combined.\n   * @param {function} mergeFunction - A function that will merge two suffixes. By default it uses Suffix.merge,\n   * but provides a way to supply a presentation specific functions. Please see Suffix.merge for more\n   * information on function format.\n   * @returns {Suffix[]} An array of suffixes with some items possibly combined together.\n   */\n  static combine (suffixes, mergeFunction = Morpheme.merge) {\n    let matchFound = false\n    let matchIdx\n\n    do {\n      matchFound = false\n\n      /*\n      Go through an array of suffixes end compare each suffix with each other (two-way compare) one time. \\\n      If items are in the same group, merge two suffixes, break out of a loop,\n      and remove one matching suffix (the second one) from an array.\n      Then repeat on a modified array until no further matches found.\n       */\n      for (let i = 0; i < suffixes.length; i++) {\n        if (matchFound) {\n          continue\n        }\n        for (let j = i + 1; j < suffixes.length; j++) {\n          if (suffixes[i].isInSameGroupWith(suffixes[j])) {\n            matchIdx = j\n            matchFound = true\n            mergeFunction(suffixes[i], suffixes[j])\n          }\n        }\n      }\n\n      if (matchFound) {\n        suffixes.splice(matchIdx, 1)\n      }\n    }\n    while (matchFound)\n    return suffixes\n  }\n\n  /**\n   * This function provide a logic of to merge data of two suffix object that were previously split together.\n   * @param {Suffix} suffixA - A first of two suffixes to merge (to be returned).\n   * @param {Suffix} suffixB - A second ending to merge (to be discarded).\n   * @returns {Suffix} A modified value of ending A.\n   */\n  static merge (suffixA, suffixB) {\n    let commonGroups = Morpheme.getCommonGroups([suffixA, suffixB])\n    for (let type of commonGroups) {\n      // Combine values using a comma separator. Can do anything else if we need to.\n      suffixA.features[type] = suffixA.features[type] + ', ' + suffixB.features[type]\n    }\n    return suffixA\n  }\n\n  toString () {\n    let string = `${this.constructor.name} value: ${this.value}, id: ${this.id}\\n  features:  `\n    for (const [feature, value] of Object.entries(this.features)) {\n      string += `${feature}: ${value.value}, `\n    }\n    if (this.match) { string += `\\n  ${this.match}` }\n    return string\n  }\n}\n","import InflectionList from './inflection-list.js'\n\nexport default class ParadigmInflectionList extends InflectionList {\n  /**\n   * Checks if an array of items has at least one element that matches an inflection.\n   *  A match is determined as a result of item's `match` function.\n   * @param {Inflection|Inflection[]} inflections - One or several inflection to match against.\n   * @return {boolean} - True if there is at least one match, false otherwise\n   */\n  hasMatches (inflections) {\n    if (!Array.isArray(inflections)) {\n      inflections = [inflections]\n    }\n    for (const inflection of inflections) {\n      if (this.items.some(i => i.matchingRules(inflection).length > 0)) {\n        // There is at least one matching rule\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Finds a paradigm object by its paradigmID.\n   * @param {string} paradigmID - A paradigmID string value matching the one stored in Paradigm.paradigmID.\n   * @return {Paradigm}\n   */\n  getByID (paradigmID) {\n    return this.items.find(i => i.paradigmID === paradigmID)\n  }\n\n  /**\n   * Returns an array of paradigms that `matches` an array of inflections.\n   * A match is determined by the paradigm's `match` function.\n   * Returned value is determined by item's `match` function as well.\n   * @param {Inflection[]} inflections - One or several inflections to match against paradigms.\n   * @return {Paradigm[]|[]} An array of paradigms that matches inflections. Only those paradigms are returned\n   * whose matching rules have the highest `matchOrder`. If no matches found, an empty array will be returned.\n   */\n  getMatches (inflections) {\n    // Select only those inflections that are paradigm based\n    inflections = inflections.filter(i => i.constraints && i.constraints.paradigmBased)\n    let matchingParadigm = []\n    // Get all matching paradigms for all inflections\n    let highestMatchOrder = Number.MIN_SAFE_INTEGER\n    for (const inflection of inflections) {\n      for (const paradigm of this.items) {\n        const matchingRules = paradigm.matchingRules(inflection)\n        if (matchingRules.length > 0) {\n          // There is one or several matching rules for this paradigm\n          const rulesMatchOrder = matchingRules.reduce((acc, rule) => rule.matchOrder > acc ? rule.matchOrder : acc, Number.MIN_SAFE_INTEGER)\n          if (rulesMatchOrder > highestMatchOrder) {\n            // This is the matching rule with the highers order. Scrap all previous matches and store this one\n            matchingParadigm = [paradigm]\n            highestMatchOrder = rulesMatchOrder\n          } else if (rulesMatchOrder === highestMatchOrder) {\n            // Rule with the same matchOrder as we already have stored.\n\n            // Check if there is the same paradigm in matches already\n            if (!matchingParadigm.find(p => p.id === paradigm.id)) {\n              matchingParadigm.push(paradigm)\n            }\n          }\n        }\n      }\n    }\n    return matchingParadigm\n  }\n}\n","export default class ParadigmRule {\n  /**\n   * @param {number} matchOrder\n   * @param {Feature[]} features\n   * @param {Lemma} lemma\n   * @param morphFlags\n   */\n  constructor (matchOrder, features, lemma, morphFlags) {\n    this.matchOrder = matchOrder\n    this.features = features\n    this.lemma = lemma\n    this.morphFlags = morphFlags\n  }\n\n  /**\n   * Checks if given inflection matches the rule.\n   * In order for rule to be considered a match, an inflection should have all features with values equal to those\n   * listed within a rule. If rule has a lemma, it should match a `word` property of an inflection\n   * (this property contains a target word).\n   * @param {Inflection} inflection\n   * @return {boolean}\n   */\n  matches (inflection) {\n    let match = true\n    for (const feature of this.features) {\n      match = match && inflection.hasOwnProperty(feature.type) && feature.value === inflection[feature.type].value\n      if (!match) {\n        return false\n      }\n    }\n    if (match && this.lemma) {\n      // If there is lemma present in the rule, check that it will match the target word\n      match = match && inflection.word && inflection.word.value === this.lemma.word\n    }\n    return match\n  }\n}\n","import uuidv4 from 'uuid/v4'\nimport { Feature } from 'alpheios-data-models'\nimport ParadigmRule from './paradigm-rule.js'\nimport ParadigmInflectionList from './paradigm-inflection-list.js'\n\nexport default class Paradigm {\n  constructor (languageID, partOfSpeech, paradigm) {\n    this.id = uuidv4()\n    this.paradigmID = paradigm.ID\n    this.languageID = languageID\n    this.partOfSpeech = partOfSpeech\n    this.title = paradigm.title\n\n    // this.table = paradigm.table\n    this.table = { rows: [] }\n    paradigm.table.rows.forEach(row => {\n      let newRow = { cells: [] }\n      row.cells.forEach(cell => { newRow.cells.push(Object.assign({}, cell)) })\n      this.table.rows.push(newRow)\n    })\n\n    this.hasCredits = !!paradigm.credits\n    this.creditsText = paradigm.credits ? paradigm.credits : ''\n    this.subTables = paradigm.subTables\n    this.rules = []\n\n    // Convert string feature values to Feature objects for later comparison\n    for (let row of this.table.rows) {\n      for (let cell of row.cells) {\n        if (cell.role === 'data') {\n          let cellFeatures = []\n          for (const prop of Object.keys(cell)) {\n            // Eliminate \"non-feature\" keys\n            if (prop !== 'role' && prop !== 'value') {\n              cellFeatures.push(prop)\n            }\n          }\n          for (const feature of cellFeatures) {\n            const values = cell[feature].split(' ')\n            cell[feature] = new Feature(feature, values, this.languageID)\n          }\n          cell[Feature.types.part] = new Feature(Feature.types.part, this.partOfSpeech, this.languageID)\n        }\n      }\n    }\n\n    /**\n     * Sometimes paradigm sub tables may have links to another paradigms.\n     * Those supplemental paradigms will be saved in the map.\n     * @type {Map<{string} paradigmID, {Paradigm} paradigm>}\n     * @private\n     */\n    this._suppParadigms = new Map()\n  }\n\n  /**\n   * Creates a list of items of the same type as self\n   * @return {ParadigmInflectionList}\n   */\n  static createList () {\n    return new ParadigmInflectionList(this)\n  }\n\n  /**\n   * Adds a rule to the paradigm.\n   * @param {number} matchOrder\n   * @param {Feature[]} features\n   * @param {Lemma} lemma\n   * @param morphFlags\n   */\n  addRule (matchOrder, features, lemma, morphFlags) {\n    this.rules.push(new ParadigmRule(matchOrder, features, lemma, morphFlags))\n  }\n\n  sortRules () {\n    this.rules.sort((a, b) => b.matchOrder - a.matchOrder)\n  }\n\n  /**\n   * Scans paradigm sub tables for other paradigm tables links and, if found,\n   * stores paradigms the found links refers to into a `_suppParadigms` prop.\n   * @param {Map<{string} paradigmID, {Paradigm} paradigm>} paradigmMap - A map of all known paradigms.\n   */\n  addSuppTables (paradigmMap) {\n    for (const subTable of this.subTables) {\n      for (const row of subTable.rows) {\n        for (const cell of row.cells) {\n          if (cell.hasOwnProperty('reflink')) {\n            if (paradigmMap.has(cell.reflink.id)) {\n              this._suppParadigms.set(cell.reflink.id, paradigmMap.get(cell.reflink.id))\n            } else {\n              console.warn(`\"${cell.reflink.id}\" supplemental table is not found`)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Whether this paradigm has any linked paradigms stored.\n   * @return {boolean}\n   */\n  get hasSuppParadigms () {\n    return this._suppParadigms.size > 0\n  }\n\n  /**\n   * Returns an array of linked paradigms.\n   * @return {Paradigm[]}\n   */\n  get suppParadigmList () {\n    return Array.from(this._suppParadigms.values())\n  }\n\n  /**\n   * Returns linked paradigms in a map.\n   * @return {Map<{string}, paradigmID, {Paradigm}, paradigm>}\n   */\n  get suppParadigmsMap () {\n    return this._suppParadigms\n  }\n\n  /**\n   * Returns an array of rules that matches an inflection or an empty array if not matching rules found.\n   * @param {Inflection} inflection.\n   * @return {ParadigmRule[] | []} Array of matching rules or an empty array if no matches found.\n   */\n  matchingRules (inflection) {\n    return this.rules.filter(r => r.matches(inflection))\n  }\n}\n","import Morpheme from './morpheme.js'\n\nexport default class Suffix extends Morpheme {\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*@license\n\tPapa Parse\n\tv4.6.0\n\thttps://github.com/mholt/PapaParse\n\tLicense: MIT\n*/\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n}(this, function()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = IS_WORKER && /(\\?|&)papaworker(=|&|$)/.test(global.location.search),\n\t\tLOADED_SYNC = false, AUTO_SCRIPT_PATH;\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.SCRIPT_PATH = null;\t// Must be set by your code if you use workers and this lib is loaded asynchronously\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\telse if (Papa.WORKERS_SUPPORTED)\n\t{\n\t\tAUTO_SCRIPT_PATH = getScriptPath();\n\n\t\t// Check if the script was loaded synchronously\n\t\tif (!document.body)\n\t\t{\n\t\t\t// Body doesn't exist yet, must be synchronous\n\t\t\tLOADED_SYNC = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.addEventListener('DOMContentLoaded', function() {\n\t\t\t\tLOADED_SYNC = true;\n\t\t\t}, true);\n\t\t}\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT)\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(_quoteChar, 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (_input instanceof Array)\n\t\t{\n\t\t\tif (!_input.length || _input[0] instanceof Array)\n\t\t\t\treturn serialize(null, _input);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(objectKeys(_input[0]), _input);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (_input.data instanceof Array)\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  _input.data[0] instanceof Array\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: objectKeys(_input.data[0]);\n\n\t\t\t\tif (!(_input.data[0] instanceof Array) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || []);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow 'exception: Unable to serialize unrecognized input';\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| _config.quotes instanceof Array)\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\t\t}\n\n\n\t\t/** Turns an object's keys into an array */\n\t\tfunction objectKeys(obj)\n\t\t{\n\t\t\tif (typeof obj !== 'object')\n\t\t\t\treturn [];\n\t\t\tvar keys = [];\n\t\t\tfor (var key in obj)\n\t\t\t\tkeys.push(key);\n\t\t\treturn keys;\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = fields instanceof Array && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(data[0] instanceof Array);\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t{\n\t\t\t\t\tif (col > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t}\n\n\t\t\t\tif (row < data.length - 1)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tstr = str.toString().replace(quoteCharRegex, _quoteChar + _quoteChar);\n\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\n\t\t\t\t\t\t\t|| (_quotes instanceof Array && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(str, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| str.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| str.charAt(0) === ' '\n\t\t\t\t\t\t\t|| str.charAt(str.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + str + _quoteChar : str;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\treturn;\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted())\n\t\t\t\t\treturn;\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open('GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t\txhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t\telse\n\t\t\t\tthis._start += this._config.chunkSize;\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._finished = !this._config.chunkSize || this._start > getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk = size ? remaining.substr(0, size) : remaining;\n\t\t\tremaining = size ? remaining.substr(size) : '';\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tif (!stream.push(data[i]) && !this._handle.paused()) {\n\t\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t\t// so we need to pause until more items\n\t\t\t\t\t// can be processed\n\t\t\t\t\tthis._handle.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar FLOAT = /^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i;\n\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\n\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\t\t\t_input = _input.substr(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\t_paused = false;\n\t\t\tself.streamer.parseChunk(_input, true);\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t\t\tif (testEmptyLine(_results.data[i]))\n\t\t\t\t\t\t_results.data.splice(i--, 1);\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\tfor (var j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar header = _results.data[i][j];\n\n\t\t\t\t\tif (_config.trimHeaders) {\n\t\t\t\t\t\theader = header.trim();\n\t\t\t\t\t}\n\n\t\t\t\t\t_fields.push(header);\n\t\t\t\t}\n\t\t\t_results.data.splice(0, 1);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (FLOAT.test(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfor (var i = 0; i < _results.data.length; i++)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < _results.data[i].length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = _results.data[i][j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\t\t\t\t_results.data[i] = row;\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += _results.data.length;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments)\n\t\t{\n\t\t\tvar delimChoices = [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow;\n\n\t\t\tfor (var i = 0; i < delimChoices.length; i++)\n\t\t\t{\n\t\t\t\tvar delim = delimChoices[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined')\n\t\t\t\t\t{\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta < bestDelta)\n\t\t\t\t\t&& avgFieldCount > 1.99)\n\t\t\t\t{\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction guessLineEndings(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substr(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\t_results.errors.push({\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg,\n\t\t\t\trow: row\n\t\t\t});\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\n\t\tif (config.quoteChar === undefined) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow 'Comment character same as delimiter';\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow 'Input must be a string';\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substr(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeChar.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&') + quoteChar, 'g');\n\t\t\tvar quoteSearch;\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substr(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\t// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code\n\t// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358\n\tfunction getScriptPath()\n\t{\n\t\tvar scripts = document.getElementsByTagName('script');\n\t\treturn scripts.length ? scripts[scripts.length - 1].src : '';\n\t}\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\t\tif (!LOADED_SYNC && Papa.SCRIPT_PATH === null)\n\t\t\tthrow new Error(\n\t\t\t\t'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +\n\t\t\t\t'You need to set Papa.SCRIPT_PATH manually.'\n\t\t\t);\n\t\tvar workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;\n\t\t// Append 'papaworker' to the search string to tell papaparse that this is our worker.\n\t\tworkerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: [msg.results.data[i]],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow 'Not implemented.';\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = obj instanceof Array ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","module.exports = require('./readable').PassThrough\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_writable.js');\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","import { Constants } from 'alpheios-data-models'\nimport Suffix from '@lib/suffix.js'\nimport GreekAdjectiveView from '@views/lang/greek/adjective/greek-adjective-view'\n\nexport default class GreekAdjectiveSimplifiedView extends GreekAdjectiveView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'adjectiveDeclensionSimplified'\n    this.name = 'adjective declension simplified'\n    this.title = 'Adjective declension (simplified)'\n\n    if (this.isImplemented) {\n      this.createTable()\n      this.table.morphemeCellFilter = GreekAdjectiveSimplifiedView.morphemeCellFilter\n    }\n  }\n\n  static get viewID () {\n    return 'greek_adjective_simplified_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_ADJECTIVE]\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  static morphemeCellFilter (suffix) {\n    if (suffix.extendedLangData && suffix.extendedLangData[Constants.STR_LANG_CODE_GRC]) {\n      return suffix.extendedLangData[Constants.STR_LANG_CODE_GRC].primary\n    } else {\n      console.warn(`Greek morpheme \"${suffix.value}\" has no extended language data attached.`)\n      return false\n    }\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport Suffix from '@lib/suffix.js'\nimport GreekView from '@views/lang/greek/greek-view.js'\n\nexport default class GreekAdjectiveView extends GreekView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'adjectiveDeclension'\n    this.name = 'adjective declension'\n    this.title = 'Adjective declension'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'greek_adjective_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_ADJECTIVE]\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  static getOrderedGenders (ancestorFeatures) {\n    const ancestorValue = ancestorFeatures.length > 0 ? ancestorFeatures[ancestorFeatures.length - 1].value : ''\n    if (ancestorValue === Constants.ORD_2ND) {\n      return [\n        this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    } else if (ancestorValue === Constants.ORD_3RD) {\n      return [\n        this.featureMap.get(Constants.GEND_FEMININE),\n        this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    } else {\n      return [\n        this.featureMap.get(Constants.GEND_FEMININE),\n        this.featureMap.get(Constants.GEND_MASCULINE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    }\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport Form from '../../../../lib/form.js'\nimport GreekView from '../greek-view.js'\nimport Table from '../../../lib/table'\n\nexport default class GreekArticleView extends GreekView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n\n    this.id = 'articleDeclension'\n    this.name = 'article declension'\n    this.title = 'Article Declension'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'greek_article_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_ARTICLE]\n  }\n\n  static get inflectionType () {\n    return Form\n  }\n\n  createTable () {\n    this.table = new Table([this.features.genders, this.features.types, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [ this.features.genders ]\n\n    features.rows = [this.features.numbers, this.features.cases]\n    features.columnRowTitles = [this.features.cases]\n    features.fullWidthRowTitles = [this.features.numbers]\n  }\n}\n","import ViewSet from '../../lib/view-set.js'\n\nimport GreekNounView from '@views/lang/greek/noun/greek-noun-view.js'\nimport GreekNounSimplifiedView from '@views/lang/greek/noun/greek-noun-simplified-view.js'\n\nimport GreekNumeralView from '@views/lang/greek/numeral/greek-numeral-view.js'\n\nimport GreekArticleView from '@views/lang/greek/article/greek-article-view.js'\n\nimport GreekAdjectiveView from '@views/lang/greek/adjective/greek-adjective-view.js'\nimport GreekAdjectiveSimplifiedView from '@views/lang/greek/adjective/greek-adjective-simplified-view.js'\n\nimport GreekGenderPronounView from '@views/lang/greek/pronoun/greek-gender-pronoun-view.js'\nimport GreekLemmaGenderPronounView from '@views/lang/greek/pronoun/greek-lemma-gender-pronoun-view.js'\nimport GreekPersonGenderPronounView from '@views/lang/greek/pronoun/greek-person-gender-pronoun-view.js'\nimport GreekPersonPronounView from '@views/lang/greek/pronoun/greek-person-pronoun-view.js'\nimport GreekVerbParadigmView from '@views/lang/greek/verb/greek-verb-paradigm-view.js'\nimport GreekVerbParticipleParadigmView from '@views/lang/greek/verb-participle/greek-verb-participle-paradigm-view.js'\n\nexport default class GreekViewSet extends ViewSet {\n  /**\n   * Returns a list of views available within a view set.\n   * @return {View[]} A list of views available within the view set.\n   */\n  static get views () {\n    return [\n      GreekNounView,\n      GreekNounSimplifiedView,\n      GreekNumeralView,\n      GreekArticleView,\n      GreekAdjectiveView,\n      GreekAdjectiveSimplifiedView,\n      GreekGenderPronounView,\n      GreekPersonGenderPronounView,\n      GreekPersonPronounView,\n      GreekLemmaGenderPronounView,\n      GreekVerbParadigmView,\n      GreekVerbParticipleParadigmView\n    ]\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\n// import LanguageDatasetFactory from '../../../lib/language-dataset-factory.js'\nimport Table from '../../lib/table.js'\nimport View from '../../lib/view.js'\nimport GroupFeatureType from '../../lib/group-feature-type.js'\n\nexport default class GreekView extends View {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n\n    /*\n    Default grammatical features of a View. It child views need to have different feature values, redefine\n    those values in child objects.\n     */\n    this.features = {\n      numbers: GroupFeatureType.createFromType(Feature.types.number, this.constructor.languageID, 'Number'),\n      cases: GroupFeatureType.createFromType(Feature.types.grmCase, this.constructor.languageID, 'Case'),\n      declensions: GroupFeatureType.createFromType(Feature.types.declension, this.constructor.languageID, 'Declension Stem'),\n      genders: GroupFeatureType.createFromType(Feature.types.gender, this.constructor.languageID, 'Gender'),\n      types: GroupFeatureType.createFromType(Feature.types.type, this.constructor.languageID, 'Type'),\n      persons: GroupFeatureType.createFromType(Feature.types.person, this.constructor.languageID, 'Person')\n    }\n    this.features.numbers.getOrderedFeatures = this.constructor.getOrderedNumbers\n    this.features.genders.addFeature(GreekView.datasetConsts.GEND_MASCULINE_FEMININE,\n      [Constants.GEND_MASCULINE, Constants.GEND_FEMININE])\n    this.features.genders.addFeature(GreekView.datasetConsts.GEND_MASCULINE_FEMININE_NEUTER,\n      [Constants.GEND_MASCULINE, Constants.GEND_FEMININE, Constants.GEND_NEUTER])\n    this.features.declensions.getTitle = this.constructor.getDeclensionTitle\n    this.features.genders.getOrderedFeatures = this.constructor.getOrderedGenders\n    this.features.genders.getTitle = this.constructor.getGenderTitle\n    this.features.persons.getTitle = this.constructor.getOrdinalTitle\n  }\n\n  static get languageID () {\n    return Constants.LANG_GREEK\n  }\n\n  /**\n   * Creates and initializes an inflection table. Redefine this method in child objects in order to create\n   * an inflection table differently.\n   */\n  createTable () {\n    this.table = new Table([this.features.declensions, this.features.genders,\n      this.features.types, this.features.numbers, this.features.cases])\n\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.declension),\n      this.constructor.model.typeFeature(Feature.types.gender),\n      this.constructor.model.typeFeature(Feature.types.type)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.grmCase)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.grmCase)\n    ]\n    features.fullWidthRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.number)\n    ]\n  }\n\n  /*\n  GetTitle and getOrderFeatures methods will be attached to a GroupFeatureType, so `this` value\n  will point to a GroupFeatureType object, not to the View instance.\n   */\n\n  static getOrdinalTitle (featureValue) {\n    switch (featureValue) {\n      case Constants.ORD_1ST: return `First`\n      case Constants.ORD_2ND: return `Second`\n      case Constants.ORD_3RD: return `Third`\n      case Constants.ORD_4TH: return `Fourth`\n      case Constants.ORD_5TH: return `Fifth`\n      default: return featureValue\n    }\n  }\n\n  static getDeclensionTitle (featureValue) {\n    switch (featureValue) {\n      case Constants.ORD_1ST: return `First<br>α`\n      case Constants.ORD_2ND: return `Second<br>ο`\n      case Constants.ORD_3RD: return `Third<br>ι, ω`\n      case Constants.ORD_4TH: return `Fourth`\n      case Constants.ORD_5TH: return `Fifth`\n      default: return featureValue\n    }\n  }\n\n  static getOrderedGenders (ancestorFeatures) {\n    const ancestorValue = ancestorFeatures.length > 0 ? ancestorFeatures[ancestorFeatures.length - 1].value : ''\n    if (ancestorValue === Constants.ORD_2ND) {\n      return [\n        this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    } else if (ancestorValue === Constants.ORD_3RD) {\n      return [\n        this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE_NEUTER)\n      ]\n    } else {\n      return [\n        this.featureMap.get(Constants.GEND_FEMININE),\n        this.featureMap.get(Constants.GEND_MASCULINE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    }\n  }\n\n  static getOrderedNumbers () {\n    return [\n      this.featureMap.get(Constants.NUM_SINGULAR),\n      this.featureMap.get(Constants.NUM_DUAL),\n      this.featureMap.get(Constants.NUM_PLURAL)\n    ]\n  }\n\n  static getGenderTitle (featureValue) {\n    if (featureValue === Constants.GEND_MASCULINE) { return 'm.' }\n    if (featureValue === Constants.GEND_FEMININE) { return 'f.' }\n    if (featureValue === Constants.GEND_NEUTER) { return 'n.' }\n    if (featureValue === GreekView.datasetConsts.GEND_MASCULINE_FEMININE) { return 'f./m.' }\n    if (featureValue === GreekView.datasetConsts.GEND_MASCULINE_FEMININE_NEUTER) { return 'f./m./n.' }\n    return featureValue\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport Morpheme from '@lib/morpheme.js'\nimport Suffix from '@lib/suffix.js'\nimport GreekView from '@views/lang/greek/greek-view.js'\nimport GreekNounView from './greek-noun-view'\n\nexport default class GreekNounSimplifiedView extends GreekNounView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'nounDeclensionSimplified'\n    this.name = 'noun declension simplified'\n    this.title = 'Noun declension (simplified)'\n\n    this.features.genders.addFeature(GreekView.datasetConsts.GEND_MASCULINE_FEMININE_NEUTER,\n      [Constants.GEND_MASCULINE, Constants.GEND_FEMININE, Constants.GEND_NEUTER])\n    this.features.genders.comparisonType = Morpheme.comparisonTypes.ALL_VALUES\n    this.features.genders.getOrderedValues = GreekView.getOrderedGenders\n\n    if (this.isImplemented) {\n      this.createTable()\n      this.table.morphemeCellFilter = GreekNounSimplifiedView.morphemeCellFilter\n    }\n  }\n\n  static get viewID () {\n    return 'greek_noun_simplified_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_NOUN]\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  static morphemeCellFilter (suffix) {\n    if (suffix.extendedLangData && suffix.extendedLangData[Constants.STR_LANG_CODE_GRC]) {\n      return suffix.extendedLangData[Constants.STR_LANG_CODE_GRC].primary\n    } else {\n      console.warn(`Greek morpheme \"${suffix.value}\" has no extended language data attached.`)\n      return false\n    }\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport Morpheme from '@lib/morpheme.js'\nimport Suffix from '@lib/suffix.js'\nimport GreekView from '@views/lang/greek/greek-view.js'\n\nexport default class GreekNounView extends GreekView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'nounDeclension'\n    this.name = 'noun declension'\n    this.title = 'Noun declension'\n\n    this.features.genders.addFeature(GreekView.datasetConsts.GEND_MASCULINE_FEMININE, [Constants.GEND_MASCULINE, Constants.GEND_FEMININE])\n    this.features.genders.comparisonType = Morpheme.comparisonTypes.ALL_VALUES\n    this.features.genders.getOrderedValues = this.constructor.getOrderedGenders\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'greek_noun_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_NOUN]\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  static getOrderedGenders (ancestorFeatures) {\n    const ancestorValue = ancestorFeatures[ancestorFeatures.length - 1].value\n    if ([Constants.ORD_2ND, Constants.ORD_3RD].includes(ancestorValue)) {\n      return [\n        this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    } else {\n      return [\n        this.featureMap.get(Constants.GEND_FEMININE),\n        this.featureMap.get(Constants.GEND_MASCULINE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    }\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport Morpheme from '@lib/morpheme.js'\nimport Form from '@lib/form.js'\nimport Table from '@views/lib/table.js'\n\nimport GreekView from '../greek-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type.js'\n\nexport default class GreekNumeralView extends GreekView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'numeralDeclension'\n    this.name = 'numeral declension'\n    this.title = 'Numeral declension'\n    this.partOfSpeech = this.constructor.mainPartOfSpeech\n\n    this.lemmaTypeFeature = new Feature(Feature.types.hdwd, this.constructor.dataset.getNumeralGroupingLemmas(), GreekNumeralView.languageID)\n    this.features.lemmas = new GroupFeatureType(Feature.types.hdwd, this.constructor.languageID, 'Lemma',\n      this.constructor.dataset.getNumeralGroupingLemmaFeatures())\n\n    this.features.genders.getOrderedFeatures = this.constructor.getOrderedGenders\n    this.features.genders.getTitle = this.constructor.getGenderTitle\n    this.features.genders.filter = this.constructor.genderFilter\n    this.features.genders.comparisonType = Morpheme.comparisonTypes.PARTIAL\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'greek_numeral_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_NUMERAL]\n  }\n\n  static get inflectionType () {\n    return Form\n  }\n\n  createTable () {\n    this.table = new Table([this.features.lemmas, this.features.genders, this.features.types, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [\n      this.lemmaTypeFeature,\n      this.constructor.model.typeFeature(Feature.types.gender),\n      this.constructor.model.typeFeature(Feature.types.type)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.grmCase)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.grmCase)\n    ]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.number)]\n  }\n\n  static getOrderedGenders (ancestorFeatures) {\n    const lemmaValues = GreekView.dataset.getNumeralGroupingLemmas()\n    // Items below are lemmas\n    const ancestorValue = ancestorFeatures[ancestorFeatures.length - 1].value\n    if (ancestorValue === lemmaValues[1]) {\n      return [\n        this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE_NEUTER)\n      ]\n    } else if ([lemmaValues[2], lemmaValues[3]].includes(ancestorValue)) {\n      return [\n        this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    } else {\n      return [\n        this.featureMap.get(Constants.GEND_FEMININE),\n        this.featureMap.get(Constants.GEND_MASCULINE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    }\n  }\n\n  static genderFilter (featureValues, suffix) {\n    // If not an array, convert it to array for uniformity\n    if (!Array.isArray(featureValues)) {\n      featureValues = [featureValues]\n    }\n    for (const value of featureValues) {\n      if (suffix.features[this.type] === value) {\n        return true\n      }\n    }\n    return false\n  }\n\n  static getGenderTitle (featureValue) {\n    if (featureValue === Constants.GEND_MASCULINE) { return 'm.' }\n    if (featureValue === Constants.GEND_FEMININE) { return 'f.' }\n    if (featureValue === Constants.GEND_NEUTER) { return 'n.' }\n    if (featureValue === GreekView.datasetConsts.GEND_MASCULINE_FEMININE) { return 'f./m.' }\n    if (featureValue === GreekView.datasetConsts.GEND_MASCULINE_FEMININE_NEUTER) { return 'f./m./n.' }\n    return featureValue\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport GreekView from '../greek-view.js'\nimport GreekPronounView from './greek-pronoun-view.js'\nimport Table from '../../../lib/table'\n\n/**\n * Used for several classes of pronouns, see `classes` method for a full list.\n * Produces a table grouped into columns by gender.\n */\nexport default class GreekGenderPronounView extends GreekPronounView {\n  constructor (homonym, inflectionData, locale) {\n    let grammarClass = GreekPronounView.getClassesFromInflection(inflectionData.inflections).filter(c => GreekGenderPronounView.classes.includes(c))\n    // we should only get 1 class here -- if we get more the view is likely to be wrong\n    if (grammarClass.length > 0) {\n      console.warn('more than one grammarClass found for homonym')\n    }\n    super(homonym, inflectionData, locale, grammarClass[0])\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'greek_gender_pronoun_view'\n  }\n\n  /**\n   * What classes of pronouns this view should be used with\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return [\n      Constants.CLASS_GENERAL_RELATIVE,\n      Constants.CLASS_INDEFINITE,\n      Constants.CLASS_INTENSIVE,\n      Constants.CLASS_INTERROGATIVE,\n      Constants.CLASS_RECIPROCAL,\n      Constants.CLASS_RELATIVE\n    ]\n  }\n\n  createTable () {\n    /*\n    Define tables and table features.\n    Features should go as: column features first, row features last. This specifies the order of grouping\n    in which a table tree will be built.\n     */\n    this.table = new Table([this.features.genders, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.features.genders]\n    features.rows = [this.features.numbers, this.features.cases]\n    features.columnRowTitles = [this.features.cases]\n    features.fullWidthRowTitles = [this.features.numbers]\n  }\n\n  static getOrderedGenders () {\n    return [\n      this.featureMap.get(Constants.GEND_FEMININE),\n      this.featureMap.get(Constants.GEND_MASCULINE),\n      this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE),\n      this.featureMap.get(Constants.GEND_NEUTER),\n      this.featureMap.get(GreekView.datasetConsts.GEND_MASCULINE_FEMININE_NEUTER)\n    ]\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport GreekPronounView from './greek-pronoun-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type.js'\nimport Table from '../../../lib/table'\n\n/**\n * Used for demonstrative pronouns. Produces a table grouped into columns by lemma and gender\n */\nexport default class GreekLemmaGenderPronounView extends GreekPronounView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale, GreekLemmaGenderPronounView.classes[0])\n\n    // Add lemmas\n    /* this.lemmaTypeFeature = new Feature(\n      Feature.types.hdwd,\n      this.constructor.dataset.getPronounGroupingLemmas(GreekLemmaGenderPronounView.classes[0]),\n      GreekPronounView.languageID\n    ) */\n    this.features.lemmas = new GroupFeatureType(Feature.types.hdwd, this.constructor.languageID, 'Lemma',\n      this.constructor.dataset.getPronounGroupingLemmaFeatures(GreekLemmaGenderPronounView.classes[0]))\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'greek_lemma_gender_pronoun_view'\n  }\n\n  /**\n   * What classes of pronouns this view should be used with\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return [Constants.CLASS_DEMONSTRATIVE]\n  }\n\n  createTable () {\n    /*\n    Define tables and table features.\n    Features should go as: column features first, row features last. This specifies the order of grouping\n    in which a table tree will be built.\n     */\n    this.table = new Table([this.features.lemmas, this.features.genders, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.features.lemmas, this.features.genders]\n    features.rows = [this.features.numbers, this.features.cases]\n    features.columnRowTitles = [this.features.cases]\n    features.fullWidthRowTitles = [this.features.numbers]\n  }\n\n  static getOrderedGenders () {\n    return [\n      this.featureMap.get(Constants.GEND_FEMININE),\n      this.featureMap.get(Constants.GEND_MASCULINE),\n      this.featureMap.get(Constants.GEND_NEUTER),\n      this.featureMap.get(GreekPronounView.datasetConsts.GEND_MASCULINE_FEMININE_NEUTER)\n    ]\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport GreekPronounView from './greek-pronoun-view.js'\nimport Table from '../../../lib/table'\n\n/**\n * Used for reflexive pronouns. Produces a table grouped into columns by person and gender\n */\nexport default class GreekPersonGenderPronounView extends GreekPronounView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale, GreekPersonGenderPronounView.classes[0])\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'greek_person_gender_pronoun_view'\n  }\n\n  createTable () {\n    /*\n    Define tables and table features.\n    Features should go as: column features first, row features last. This specifies the order of grouping\n    in which a table tree will be built.\n     */\n    this.table = new Table([this.features.persons, this.features.genders, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.features.persons, this.features.genders]\n    features.rows = [this.features.numbers, this.features.cases]\n    features.columnRowTitles = [this.features.cases]\n    features.fullWidthRowTitles = [this.features.numbers]\n  }\n\n  /**\n   * What classes of pronouns this view should be used with\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return [Constants.CLASS_REFLEXIVE]\n  }\n\n  static getOrderedGenders () {\n    return [\n      this.featureMap.get(Constants.GEND_FEMININE),\n      this.featureMap.get(Constants.GEND_MASCULINE),\n      this.featureMap.get(Constants.GEND_NEUTER)\n    ]\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport GreekPronounView from './greek-pronoun-view.js'\nimport Table from '../../../lib/table'\n\n/**\n * Used for personal pronouns. Produces a table grouped into columns by person\n */\nexport default class GreekPersonPronounView extends GreekPronounView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale, GreekPersonPronounView.classes[0])\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'greek_person_pronoun_view'\n  }\n\n  createTable () {\n    /*\n    Define tables and table features.\n    Features should go as: column features first, row features last. This specifies the order of grouping\n    in which a table tree will be built.\n     */\n    this.table = new Table([this.features.persons, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [this.features.persons]\n    features.rows = [this.features.numbers, this.features.cases]\n    features.columnRowTitles = [this.features.cases]\n    features.fullWidthRowTitles = [this.features.numbers]\n  }\n\n  /**\n   * What classes of pronouns this view should be used with\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return [Constants.CLASS_PERSONAL]\n  }\n}\n","import { Constants, Feature, Inflection, Homonym } from 'alpheios-data-models'\nimport Form from '@lib/form.js'\nimport View from '@views/lib/view.js'\nimport GroupFeatureType from '@views/lib/group-feature-type.js'\nimport GreekView from '@views/lang/greek/greek-view.js'\n\n/**\n * This is a base class for all pronoun views. This class should not be used to create tables. Its purpose\n * is to define common features and properties for all pronoun classes.\n */\nexport default class GreekPronounView extends GreekView {\n  /**\n   * @param {Homonym} homonym\n   * @param {InflectionData} inflectionData\n   * @param {string} locale\n   * @param {string} grammarClass - For what pronoun class a view will be created\n   */\n  constructor (homonym, inflectionData, locale, grammarClass = 'Greek') {\n    super(homonym, inflectionData, locale)\n    this.id = GreekPronounView.getID(grammarClass)\n    this.name = GreekPronounView.getName(grammarClass)\n    this.title = GreekPronounView.getTitle(grammarClass)\n    this.featureTypes = {}\n\n    this.lemmaTypeFeature = new Feature(Feature.types.hdwd, this.constructor.dataset.getNumeralGroupingLemmas(), GreekView.languageID)\n    this.features.lemmas = new GroupFeatureType(Feature.types.hdwd, this.constructor.languageID, 'Lemma',\n      this.constructor.dataset.getNumeralGroupingLemmaFeatures())\n\n    this.features.genders.filter = this.constructor.genderFilter\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_PRONOUN]\n  }\n\n  static get inflectionType () {\n    return Form\n  }\n\n  /**\n   * What classes of pronouns this view should be used with.\n   * Should be defined in descendants.\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return []\n  }\n\n  /**\n   * Returns a class of view from a list of inflections.\n   * Currently returns a class of a first inflection from the list.\n   * @param {Inflection} inflections - A list of inflections.\n   * @return {string} A name of a view's class name or an empty string if class cannot be determined.\n   */\n  static getClassesFromInflection (inflections) {\n    if (inflections && inflections.length > 0 && inflections[0][Feature.types.grmClass]) {\n      return inflections[0][Feature.types.grmClass].values\n    }\n    return ''\n  }\n\n  static getID (grammarClass) {\n    return `${grammarClass}${View.toTitleCase(GreekPronounView.mainPartOfSpeech)}Declension`\n  }\n\n  static getName (grammarClass) {\n    return `${grammarClass} ${GreekPronounView.mainPartOfSpeech} declension`\n  }\n\n  static getTitle (grammarClass) {\n    return View.toTitleCase(`${grammarClass} ${GreekPronounView.mainPartOfSpeech} Declension`).trim()\n  }\n\n  static genderFilter (featureValues, suffix) {\n    // If not an array, convert it to array for uniformity\n    if (!Array.isArray(featureValues)) {\n      featureValues = [featureValues]\n    }\n    for (const value of featureValues) {\n      if (suffix.features[this.type] === value) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Determines whether this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param {symbol} languageID\n   * @param {Inflection[]} inflections\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (languageID, inflections, inflectionData) {\n    if (this.languageID === languageID && inflections.some(i => i[Feature.types.part].value === this.mainPartOfSpeech)) {\n      if (inflectionData.types.has(this.inflectionType)) {\n        let inflections = inflectionData.types.get(this.inflectionType)\n        let found = inflections.items.find(form => {\n          let match = false\n          for (const value of form.features[Feature.types.grmClass].values) {\n            match = match || this.classes.includes(value)\n          }\n          return match\n        })\n        if (found) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  static getMatchingInstances (homonym, messages) {\n    let inflectionData = this.getInflectionsData(homonym)\n    if (this.matchFilter(homonym.languageID, homonym.inflections, inflectionData)) {\n      return [new this(homonym, inflectionData, messages).render()]\n    }\n    return []\n  }\n\n  getMorphemes () {\n    return this.inflectionData.types.get(this.constructor.inflectionType).items\n      .filter(item => item.features.hasOwnProperty(Feature.types.grmClass) &&\n            item.features[Feature.types.grmClass].hasSomeValues(this.constructor.classes)\n      )\n  }\n\n  static createStandardFormHomonym (options = {}) {\n    if (!options || !options.form) {\n      throw new Error(`Obligatory options property, \"form\", is missing`)\n    }\n    let inflection = new Inflection(options.form, this.languageID)\n    inflection.addFeature(new Feature(Feature.types.part, this.mainPartOfSpeech, this.languageID))\n    let homonym = Homonym.createSimpleForm(options.form, this.languageID, [inflection])\n    inflection = this.dataset.setInflectionData(inflection, homonym.lexemes[0].lemma)\n    return homonym\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport GreekVerbParadigmView from '../verb/greek-verb-paradigm-view.js'\n\nexport default class GreekVerbParticipleParadigmView extends GreekVerbParadigmView {\n  static get viewID () {\n    return 'greek_verb_participle_paradigm_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_VERB_PARTICIPLE]\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport Paradigm from '@lib/paradigm.js'\nimport View from '@views/lib/view.js'\nimport GreekView from '@views/lang/greek/greek-view.js'\n\n/**\n * This is a base class for all pronoun views. This class should not be used to create tables. Its purpose\n * is to define common features and properties for all pronoun classes.\n */\nexport default class GreekVerbParadigmView extends GreekView {\n  /**\n   * @param {Paradigm} paradigm\n   * @param {Homonym} homonym\n   * @param {InflectionData} inflectionData\n   * @param {string} locale\n   */\n  constructor (paradigm, homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = paradigm.id\n    this.name = paradigm.title.toLowerCase()\n    this.title = paradigm.title\n    this.paradigm = paradigm\n    this.featureTypes = {}\n\n    this.wideTable = this.paradigm.table\n    this.wideSubTables = this.paradigm.subTables\n    this.wideView = this.wideTable // For compatibility with non-prerendered tables\n\n    /**\n     * Whether there are any linked paradigms for this view\n     * @type {boolean}\n     */\n    this.hasSuppParadigms = this.paradigm.hasSuppParadigms\n\n    /**\n     * An array of linked paradigms\n     * @type {Paradigm[]}\n     */\n    this.suppParadigms = this.paradigm.suppParadigmList\n\n    /**\n     * Linked paradigms in a map\n     * @type {Map<{string}, paradigmID, {Paradigm}, paradigm>}\n     */\n    this.suppParadigmsMap = this.paradigm.suppParadigmsMap\n\n    this.hasCredits = this.paradigm.hasCredits\n    this.creditsText = this.paradigm.creditsText\n  }\n\n  static get viewID () {\n    return 'greek_verb_paradigm_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_VERB]\n  }\n\n  static get inflectionType () {\n    return Paradigm\n  }\n\n  static get hasPrerenderedTables () {\n    return true\n  }\n  /**\n   * What classes of pronouns this view should be used with.\n   * Should be defined in descendants.\n   * @return {string[]} Array of class names\n   */\n  static get classes () {\n    return []\n  }\n\n  static getID (grammarClass) {\n    return `${grammarClass}${View.toTitleCase(GreekVerbParadigmView.mainPartOfSpeech)}Paradigm`\n  }\n\n  static getName (grammarClass) {\n    return `${grammarClass} ${GreekVerbParadigmView.mainPartOfSpeech} paradigm`\n  }\n\n  static getTitle (grammarClass) {\n    return View.toTitleCase(`${grammarClass} ${GreekVerbParadigmView.mainPartOfSpeech} Paradigm`).trim()\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param {symbol} languageID\n   * @param {Inflection[]} inflections\n   * @param inflectionData\n   * @return {boolean}\n   */\n  static matchFilter (languageID, inflections, inflectionData) {\n    return (this.languageID === languageID &&\n      inflections.some(i => i[Feature.types.part].value === this.mainPartOfSpeech)) &&\n      inflectionData.types.has(this.inflectionType)\n\n    /* if (this.languageID === inflection.languageID && this.partsOfSpeech.includes(inflection[Feature.types.part].value)) {\n      let inflectionSet = inflectionData.pos.get(inflection[Feature.types.part].value)\n      if (inflectionSet.types.has(this.inflectionType)) {\n        return true\n      }\n    }\n    return false */\n  }\n\n  static getMatchingInstances (homonym, messages) {\n    let inflectionData = this.getInflectionsData(homonym)\n    if (this.matchFilter(homonym.languageID, homonym.inflections, inflectionData)) {\n      let paradigms = inflectionData.types.get(this.inflectionType).items\n      return paradigms.map(paradigm => new this(paradigm, homonym, inflectionData, messages))\n    }\n    return []\n  }\n\n  render (options) {\n    // Do nothing as there is no need to render anything\n    return this\n  }\n\n  get wideViewNodes () {\n    return this.nodes\n  }\n\n  hideEmptyColumns () {\n    return this\n  }\n\n  showEmptyColumns () {\n    return this\n  }\n\n  hideNoSuffixGroups () {\n    return this\n  }\n\n  showNoSuffixGroups () {\n    return this\n  }\n\n  static getStandardFormInstance (options, locale = 'en-US') {\n    if (!options || !options.paradigmID) {\n      throw new Error(`Obligatory options property, \"paradigmID\", is missing`)\n    }\n    let paradigm = this.dataset.pos.get(this.mainPartOfSpeech).types.get(Paradigm).getByID(options.paradigmID)\n    if (paradigm) {\n      return new this(paradigm, null, null, locale).render().noSuffixMatchesGroupsHidden(false)\n    }\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinView from '../latin-view.js'\n\nexport default class LatinAdjectiveView extends LatinView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'adjectiveDeclension'\n    this.name = 'adjective declension'\n    this.title = 'Adjective declension'\n\n    this.features.declensions.addFeature(LatinView.datasetConsts.ORD_1ST_2ND, [Constants.ORD_1ST, Constants.ORD_2ND])\n    this.features.declensions.getOrderedFeatures = this.constructor.getOrderedDeclensions\n    this.features.declensions.getTitle = this.constructor.getDeclensionTitle\n\n    this.features.genders = this.features.genders.createOfSameType() // Create a copy so that original object will not be affected by a change\n    this.features.genders.getOrderedFeatures = this.constructor.getOrderedGenders\n    this.features.genders.getTitle = this.constructor.getGenderTitle\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_adjective_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_ADJECTIVE]\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  static getOrderedDeclensions () {\n    return [\n      this.featureMap.get(LatinView.datasetConsts.ORD_1ST_2ND),\n      this.featureMap.get(Constants.ORD_3RD),\n      this.featureMap.get(Constants.ORD_4TH),\n      this.featureMap.get(Constants.ORD_5TH)\n    ]\n  }\n\n  static getDeclensionTitle (featureValue) {\n    switch (featureValue) {\n      case LatinView.datasetConsts.ORD_1ST_2ND: return `First/Second<br>ā and o`\n      case Constants.ORD_3RD: return `Third<br>consonant and i`\n      case Constants.ORD_4TH: return `Fourth`\n      case Constants.ORD_5TH: return `Fifth`\n      default: return featureValue\n    }\n  }\n\n  static getOrderedGenders () {\n    return [\n      this.featureMap.get(Constants.GEND_FEMININE),\n      this.featureMap.get(Constants.GEND_MASCULINE),\n      this.featureMap.get(Constants.GEND_NEUTER)\n    ]\n  }\n}\n","import ViewSet from '../../lib/view-set.js'\nimport LatinNounView from '@views/lang/latin/noun/latin-noun-view.js'\nimport LatinAdjectiveView from '@views/lang/latin/adjective/latin-adjective-view.js'\nimport LatinVoiceConjugationMoodView from '@views/lang/latin/verb/latin-voice-conjugation-mood-view.js'\nimport LatinVoiceMoodConjugationView from '@views/lang/latin/verb/latin-voice-mood-conjugation-view.js'\nimport LatinConjugationVoiceMoodView from '@views/lang/latin/verb/latin-conjugation-voice-mood-view.js'\nimport LatinConjugationMoodVoiceView from '@views/lang/latin/verb/latin-conjugation-mood-voice-view.js'\nimport LatinMoodVoiceConjugationView from '@views/lang/latin/verb/latin-mood-voice-conjugation-view.js'\nimport LatinMoodConjugationVoiceView from '@views/lang/latin/verb/latin-mood-conjugation-voice-view.js'\nimport LatinImperativeView from '@views/lang/latin/verb/latin-imperative-view.js'\nimport LatinSupineView from '@views/lang/latin/noun/latin-supine-view.js'\nimport LatinVerbIrregularView from '@views/lang/latin/verb/irregular/latin-verb-irregular-view.js'\nimport LatinVerbIrregularVoiceView from '@views/lang/latin/verb/irregular/latin-verb-irregular-voice-view.js'\nimport LatinVerbParticipleView from '@views/lang/latin/verb/latin-verb-participle-view.js'\nimport LatinVerbParticipleIrregularView from '@views/lang/latin/verb/irregular/latin-verb-participle-irregular-view.js'\nimport LatinVerbSupineIrregularView from '@views/lang/latin/verb/irregular/latin-verb-supine-irregular-view.js'\n// import LatinVerbGerundiveIrregularView from '@views/lang/latin/verb/irregular/latin-verb-gerundive-irregular-view.js'\nimport LatinInfinitiveView from '@views/lang/latin/verb/latin-infinitive-view.js'\nexport default class LatinViewSet extends ViewSet {\n  /**\n   * Returns a list of views available within a view set.\n   * @return {View[]} A list of views available within the view set.\n   */\n  static get views () {\n    return [\n      LatinNounView,\n      LatinAdjectiveView,\n      LatinVerbParticipleView,\n      LatinSupineView,\n      LatinInfinitiveView,\n      LatinImperativeView,\n      LatinVerbIrregularView,\n      LatinVerbIrregularVoiceView,\n      LatinVerbParticipleIrregularView,\n      LatinVerbSupineIrregularView,\n      //      LatinVerbGerundiveIrregularView, // Gerundive table is eliminated for now as per discussion in https://github.com/alpheios-project/inflection-tables/issues/76\n      LatinVoiceConjugationMoodView,\n      LatinVoiceMoodConjugationView,\n      LatinConjugationVoiceMoodView,\n      LatinConjugationMoodVoiceView,\n      LatinMoodVoiceConjugationView,\n      LatinMoodConjugationVoiceView\n    ]\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport View from '@views/lib/view.js'\nimport GroupFeatureType from '@views/lib/group-feature-type.js'\nimport Table from '@views/lib/table.js'\n\nexport default class LatinView extends View {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n\n    this.features = {\n      numbers: GroupFeatureType.createFromType(Feature.types.number, this.constructor.languageID, 'Number'),\n      cases: GroupFeatureType.createFromType(Feature.types.grmCase, this.constructor.languageID, 'Case'),\n      declensions: GroupFeatureType.createFromType(Feature.types.declension, this.constructor.languageID, 'Declension Stem'),\n      genders: GroupFeatureType.createFromType(Feature.types.gender, this.constructor.languageID, 'Gender'),\n      types: GroupFeatureType.createFromType(Feature.types.type, this.constructor.languageID, 'Type'),\n      tenses: GroupFeatureType.createFromType(Feature.types.tense, this.constructor.languageID, 'Tense'),\n      voices: GroupFeatureType.createFromType(Feature.types.voice, this.constructor.languageID, 'Voice'),\n      moods: new GroupFeatureType(Feature.types.mood, this.constructor.languageID, 'Mood', [\n        this.constructor.model.typeFeature(Feature.types.mood).createFeature(Constants.MOOD_INDICATIVE),\n        this.constructor.model.typeFeature(Feature.types.mood).createFeature(Constants.MOOD_SUBJUNCTIVE)\n      ]),\n      persons: GroupFeatureType.createFromType(Feature.types.person, this.constructor.languageID, 'Person'),\n      conjugations: GroupFeatureType.createFromType(Feature.types.conjugation, this.constructor.languageID, 'Conjugation Stem')\n    }\n    this.features.declensions.getTitle = this.constructor.getDeclensionTitle\n    this.features.genders.getTitle = this.constructor.getGenderTitle\n    this.features.conjugations.getTitle = this.constructor.getConjugationTitle\n    this.features.persons.getTitle = this.constructor.getOrdinalTitle\n    this.features.voices.getTitle = this.constructor.getVoiceTitle\n  }\n\n  /**\n   * Defines a language ID of a view. Should be redefined in child classes.\n   * @return {symbol}\n   */\n  static get languageID () {\n    return Constants.LANG_LATIN\n  }\n\n  /*\n    Creates and initializes an inflection table. Redefine this method in child objects in order to create\n    an inflection table differently\n     */\n  createTable () {\n    this.table = new Table([this.features.declensions, this.features.genders,\n      this.features.types, this.features.numbers, this.features.cases])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.declension),\n      this.constructor.model.typeFeature(Feature.types.gender),\n      this.constructor.model.typeFeature(Feature.types.type)]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.grmCase)]\n    features.columnRowTitles = [this.constructor.model.typeFeature(Feature.types.grmCase)]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.number)]\n  }\n\n  /*\n  GetTitle and getOrderFeatures methods will be attached to a GroupFeatureType, so `this` value\n  will point to a GroupFeatureType object, not to the View instance.\n   */\n\n  /**\n   * Define ordinal group titles.\n   * @param {String} featureValue - A value of a declension.\n   * @return {string} - A title of a declension group.\n   */\n  static getOrdinalTitle (featureValue) {\n    switch (featureValue) {\n      case Constants.ORD_1ST: return `First`\n      case Constants.ORD_2ND: return `Second`\n      case Constants.ORD_3RD: return `Third`\n      case Constants.ORD_4TH: return `Fourth`\n      case Constants.ORD_5TH: return `Fifth`\n      default: return featureValue\n    }\n  }\n\n  /**\n   * Define declension group titles.\n   * @param {String} featureValue - A value of a declension.\n   * @return {string} - A title of a declension group.\n   */\n  static getDeclensionTitle (featureValue) {\n    switch (featureValue) {\n      case Constants.ORD_1ST: return `First<br>ā`\n      case Constants.ORD_2ND: return `Second<br>o`\n      case Constants.ORD_3RD: return `Third<br>(mutes, liquids, nasals, i)`\n      case Constants.ORD_4TH: return `Fourth<br>u`\n      case Constants.ORD_5TH: return `5th<br>ē`\n      default: return featureValue\n    }\n  }\n\n  /**\n   * Define gender group titles.\n   * @param {String} featureValue - A value of a gender.\n   * @return {string} - A title of a declension group.\n   */\n  static getGenderTitle (featureValue) {\n    switch (featureValue) {\n      case Constants.GEND_MASCULINE: return `m.`\n      case Constants.GEND_FEMININE: return `f.`\n      case Constants.GEND_NEUTER: return `n.`\n      case LatinView.datasetConsts.GEND_MASCULINE_FEMININE: return `f./m.`\n      default: return featureValue\n    }\n  }\n\n  /**\n   * Define voice group titles.\n   * @param {String} featureValue - A value of a declension.\n   * @return {string} - A title of a declension group.\n   */\n  static getVoiceTitle (featureValue) {\n    switch (featureValue) {\n      case Constants.VOICE_ACTIVE: return `Active`\n      case Constants.VOICE_PASSIVE: return `Passive`\n      default: return featureValue\n    }\n  }\n\n  static getConjugationTitle (featureValue) {\n    switch (featureValue) {\n      case Constants.ORD_1ST: return `First<br><span class=\"infl-cell__conj-stem\">ā</span>`\n      case Constants.ORD_2ND: return `Second<br><span class=\"infl-cell__conj-stem\">ē</span>`\n      case Constants.ORD_3RD: return `Third<br><span class=\"infl-cell__conj-stem\">e</span>`\n      case Constants.ORD_4TH: return `Fourth<br><span class=\"infl-cell__conj-stem\">i</span>`\n      default: return featureValue\n    }\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport Morpheme from '@lib/morpheme.js'\nimport Suffix from '@lib/suffix.js'\nimport LatinView from '@views/lang/latin/latin-view.js'\n\nexport default class LatinNounView extends LatinView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'noun_declension'\n    this.name = 'noun declension'\n    this.title = 'Noun declension'\n\n    this.features.genders.addFeature(LatinView.datasetConsts.GEND_MASCULINE_FEMININE, [Constants.GEND_MASCULINE, Constants.GEND_FEMININE])\n    this.features.genders.getOrderedFeatures = this.constructor.getOrderedGenders\n    this.features.genders.getTitle = this.constructor.getGenderTitle\n    this.features.genders.comparisonType = Morpheme.comparisonTypes.ALL_VALUES\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_noun_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_NOUN]\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  static getOrderedGenders (ancestorFeatures) {\n    const ancestorValue = ancestorFeatures[ancestorFeatures.length - 1].value\n    if ([Constants.ORD_2ND, Constants.ORD_3RD, Constants.ORD_4TH].includes(ancestorValue)) {\n      return [\n        this.featureMap.get(LatinView.datasetConsts.GEND_MASCULINE_FEMININE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    } else {\n      return [\n        this.featureMap.get(Constants.GEND_MASCULINE),\n        this.featureMap.get(Constants.GEND_FEMININE),\n        this.featureMap.get(Constants.GEND_NEUTER)\n      ]\n    }\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinView from '../latin-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinSupineView extends LatinView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.partOfSpeech = this.constructor.mainPartOfSpeech\n    this.id = 'verbSupine'\n    this.name = 'supine'\n    this.title = 'Supine'\n\n    this.features = {\n      cases: this.features.cases\n    }\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_supine_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_SUPINE]\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  createTable () {\n    this.table = new Table([this.features.cases])\n    let features = this.table.features\n    features.columns = []\n    features.rows = [this.features.cases]\n    features.columnRowTitles = [this.features.cases]\n    features.fullWidthRowTitles = []\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport LatinView from '@views/lang/latin/latin-view.js'\nimport Form from '@lib/form.js'\nimport Table from '@views/lib/table'\n\n/**\n * A base view for all Latin irregular verb views.\n * It is supposed to serve as a base view only and never created directly.\n * That's why its match filter will always return false.\n */\nexport default class LatinVerbIrregularVoiceView extends LatinView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n\n    this.id = 'verbConjugationIrregularBase'\n    this.name = 'verb-irregular-base'\n    this.title = 'Base Verb Conjugation (Irregular)'\n  }\n\n  static get viewID () {\n    return 'latin_verb_irregular_base_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_VERB]\n  }\n\n  static get inflectionType () {\n    return Form\n  }\n\n  static get voiceEnabledHdwds () {\n    return ['fero']\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.moods, this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [ this.features.voices, this.features.moods ]\n    features.rows = [this.features.tenses, this.features.numbers, this.features.persons]\n    features.columnRowTitles = [this.features.numbers, this.features.persons]\n    features.fullWidthRowTitles = [this.features.tenses]\n  }\n\n  /**\n   * Will always return false because this view serves as base class and is never created directly.\n   * @param {symbol} languageID\n   * @param {Inflection[]} inflections\n   * @return {boolean} Always returns false\n   */\n  static matchFilter (languageID, inflections) {\n    return false\n  }\n\n  static enabledForInflection (inflection) {\n    return inflection[Feature.types.part].value === this.mainPartOfSpeech &&\n      inflection.constraints &&\n      inflection.constraints.irregular\n  }\n\n  /**\n   * Gets inflection data for a homonym. For this view we need to use irregular verb inflections only.\n   * @param {Homonym} homonym - A homonym for which inflection data needs to be retrieved\n   * @param {Object} options\n   * @return {InflectionSet} Resulting inflection set.\n   */\n  static getInflectionsData (homonym, options) {\n    // Select only those inflections that are required for this view\n    let inflections = homonym.inflections.filter(\n      i => i[Feature.types.part].value === this.mainPartOfSpeech &&\n        i.constraints && i.constraints.irregular\n    )\n    return this.dataset.createInflectionSet(this.mainPartOfSpeech, inflections, options)\n  }\n\n  /**\n   * Creates an array of linked table views: views, that will be shown below the main table view.\n   * @return {View[]} - An array of linked views or an empty array if no linked views can be created.\n   */\n  createLinkedViews () {\n    let views = []\n    // we want to restrict the inflections for the linked views to irregular verbs for now because inflections from other verbs seem to corrupt the match data constraints\n    // (e.g. sum, which has both an irregular and regular verb and one of the regular verbs has a different, non-matching lemma)\n    // this will fail if we want to link tables for irregular and regular verbs together this way\n    let inflections = this.homonym.inflections.filter(infl => infl[Feature.types.part].value === this.constructor.mainPartOfSpeech && infl.constraints && infl.constraints.irregular)\n    for (let Constructor of this.constructor.linkedViewConstructors) {\n      let linkedViewInflections = []\n      for (let infl of inflections) {\n        let clone = infl.clone()\n        clone[Feature.types.part] = clone[Feature.types.part].createFeature(Constructor.mainPartOfSpeech)\n        clone = this.constructor.dataset.setInflectionData(clone, infl.lemma)\n        linkedViewInflections.push(clone)\n      }\n      let inflectionData = this.constructor.dataset.createInflectionSet(Constructor.mainPartOfSpeech, linkedViewInflections, { findMorphologyMatches: false })\n      if (Constructor.matchFilter(this.homonym.languageID, linkedViewInflections)) {\n        let view = new Constructor(this.homonym, inflectionData, this.locale)\n        for (let infl of inflections) {\n          infl[Feature.types.part] = infl[Feature.types.part].createFeature(this.constructor.mainPartOfSpeech)\n        }\n        views.push(view)\n      }\n    }\n    this.linkedViews = views\n    return views\n  }\n\n  // See base view for description\n  static getMatchingInstances (homonym, locale) {\n    if (this.matchFilter(homonym.languageID, homonym.inflections)) {\n      let inflectionData = this.getInflectionsData(homonym)\n      let view = new this(homonym, inflectionData, locale)\n      view.createLinkedViews()\n      return [view.render()]\n    }\n    return []\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport LatinVerbIrregularBaseView from '@views/lang/latin/verb/irregular/latin-verb-irregular-base-view.js'\nimport LatinVerbParicipleIrregularView from '@views/lang/latin/verb/irregular/latin-verb-participle-irregular-view.js'\nimport LatinVerbSupineIrregularView from '@views/lang/latin/verb/irregular/latin-verb-supine-irregular-view.js'\nimport Table from '@views/lib/table'\n\n/**\n * An inflection table for Latin irregular verbs that have no voice information in our local data.\n * For the ones that do, a LatinVerbIrregularVoiceView is used.\n * The only way to distinguish between them the two is to analyze a headword\n * which is stored in a `word` feature of an inflection.\n */\nexport default class LatinVerbIrregularView extends LatinVerbIrregularBaseView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n\n    this.id = 'verbConjugationIrregular'\n    this.name = 'verb-irregular'\n    this.title = 'Verb Conjugation (Irregular)'\n\n    if (this.isImplemented) {\n      const inflections = this.homonym.inflections.filter(item => item.constraints.implemented)\n      let lemmas = this.constructor.dataset.getMatchingIrregularLemmas(inflections)\n      this.additionalTitle = lemmas.length > 0 ? `${lemmas[0].word}, ${lemmas[0].principalParts}` : ``\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_verb_irregular_view'\n  }\n\n  createTable () {\n    this.table = new Table([this.features.moods, this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [ this.features.moods ]\n    features.rows = [this.features.tenses, this.features.numbers, this.features.persons]\n    features.columnRowTitles = [this.features.numbers, this.features.persons]\n    features.fullWidthRowTitles = [this.features.tenses]\n  }\n\n  static matchFilter (languageID, inflections) {\n    return Boolean(\n      this.languageID === languageID && inflections.some(i => this.enabledForInflection(i))\n    )\n  }\n\n  /**\n   * Checks whether this view shall be displayed for an inflection given.\n   * It should match all the requirements of an irregular verb view and\n   * should not match irregular verb voice view (either this or\n   * irregular verb voice view shall be shown for a single inflection).\n   * @param {Inflection} inflection - Inflection that is checked on matching this view.\n   * @return {boolean} - True if this view shall be displayed for an inflection, false otherwise.\n   */\n  static enabledForInflection (inflection) {\n    return Boolean(\n      inflection[Feature.types.part].value === this.mainPartOfSpeech &&\n      inflection.constraints &&\n      inflection.constraints.irregular &&\n      inflection.word &&\n      !this.voiceEnabledHdwds.includes(inflection.word.value) // Must NOT match headwords for irregular verb voice table\n    )\n  }\n\n  /**\n   * A list of constructors of linked views.\n   * @return {View[]}\n   */\n  static get linkedViewConstructors () {\n    return [LatinVerbParicipleIrregularView, LatinVerbSupineIrregularView]\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport LatinVerbIrregularBaseView from '@views/lang/latin/verb/irregular/latin-verb-irregular-base-view.js'\nimport LatinVerbParicipleIrregularView from '@views/lang/latin/verb/irregular/latin-verb-participle-irregular-view.js'\nimport LatinVerbSupineIrregularView from '@views/lang/latin/verb/irregular/latin-verb-supine-irregular-view.js'\nimport Table from '@views/lib/table'\n\n/**\n * An inflection table for Latin irregular verbs that have voice information in our local data.\n * For the ones that don't, a LatinVerbIrregularView is used.\n * The only way to distinguish between them the two is to analyze a headword\n * which is stored in a `word` feature of an inflection.\n */\nexport default class LatinVerbIrregularVoiceView extends LatinVerbIrregularBaseView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n\n    this.id = 'verbConjugationIrregularVoice'\n    this.name = 'verb-irregular-voice'\n    this.title = 'Verb Conjugation (Irregular, with Voice Data)'\n\n    // Some irregular verbs can be unimplemented and shall be skipped\n    const inflections = this.homonym.inflections.filter(item => item.constraints.implemented)\n    this.isImplemented = inflections.length > 0\n    if (this.isImplemented) {\n      let lemmas = this.constructor.dataset.getMatchingIrregularLemmas(inflections)\n      this.additionalTitle = lemmas.length > 0 ? `${lemmas[0].word}, ${lemmas[0].principalParts}` : ``\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_verb_irregular_voice_view'\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.moods, this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [ this.features.voices, this.features.moods ]\n    features.rows = [this.features.tenses, this.features.numbers, this.features.persons]\n    features.columnRowTitles = [this.features.numbers, this.features.persons]\n    features.fullWidthRowTitles = [this.features.tenses]\n  }\n\n  static matchFilter (languageID, inflections) {\n    return Boolean(\n      this.languageID === languageID && inflections.some(i => this.enabledForInflection(i))\n    )\n  }\n\n  /**\n   * Checks whether this view shall be displayed for an inflection given.\n   * @param {Inflection} inflection - Inflection that is checked on matching this view.\n   * @return {boolean} - True if this view shall be displayed for an inflection, false otherwise.\n   */\n  static enabledForInflection (inflection) {\n    return Boolean(\n      inflection[Feature.types.part].value === this.mainPartOfSpeech &&\n      inflection.constraints &&\n      inflection.constraints.irregular && // Must be an irregular verb\n      inflection.word &&\n      this.voiceEnabledHdwds.includes(inflection.word.value) // Must match headwords for irregular verb voice table\n    )\n  }\n\n  /**\n   * A list of constructors of linked views.\n   * @return {View[]}\n   */\n  static get linkedViewConstructors () {\n    return [LatinVerbParicipleIrregularView, LatinVerbSupineIrregularView]\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport LatinVerbIrregularBaseView from '@views/lang/latin/verb/irregular/latin-verb-irregular-base-view.js'\nimport LatinVerbIrregularView from '@views/lang/latin/verb/irregular/latin-verb-irregular-view.js'\nimport LatinVerbIrregularVoiceView from '@views/lang/latin/verb/irregular/latin-verb-irregular-voice-view.js'\nimport LatinVerbSupineIrregularView from '@views/lang/latin/verb/irregular/latin-verb-supine-irregular-view.js'\nimport GroupFeatureType from '@views/lib/group-feature-type'\nimport Table from '@views/lib/table'\n\nexport default class LatinVerbParticipleIrregularView extends LatinVerbIrregularBaseView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n\n    this.id = 'verbParticipleConjugationIrregular'\n    this.name = 'verb-participle-irregular'\n    this.title = 'Verb Participle Conjugation (Irregular)'\n    this.features.tenses = new GroupFeatureType(Feature.types.tense, this.constructor.languageID, 'Tense', [\n      this.constructor.model.typeFeature(Feature.types.tense).createFeature(Constants.TENSE_PRESENT),\n      this.constructor.model.typeFeature(Feature.types.tense).createFeature(Constants.TENSE_PERFECT),\n      this.constructor.model.typeFeature(Feature.types.tense).createFeature(Constants.TENSE_FUTURE)\n    ])\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_verb_participle_irregular_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_VERB_PARTICIPLE]\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.tenses])\n    let features = this.table.features\n    features.columns = [ this.features.voices ]\n    features.rows = [this.features.tenses]\n    features.columnRowTitles = [this.features.tenses]\n    features.fullWidthRowTitles = []\n  }\n\n  static matchFilter (languageID, inflections) {\n    return Boolean(\n      this.languageID === languageID &&\n      inflections.some(i => this.enabledForInflection(i)))\n  }\n\n  /**\n   * A list of constructors of linked views.\n   * @return {View[]}\n   */\n  static get linkedViewConstructors () {\n    return [LatinVerbIrregularView, LatinVerbIrregularVoiceView, LatinVerbSupineIrregularView]\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport LatinVerbIrregularBaseView from '@views/lang/latin/verb/irregular/latin-verb-irregular-base-view.js'\nimport LatinVerbIrregularView from '@views/lang/latin/verb/irregular/latin-verb-irregular-view.js'\nimport LatinVerbIrregularVoiceView from '@views/lang/latin/verb/irregular/latin-verb-irregular-voice-view.js'\nimport LatinVerbParticipleIrregularView from '@views/lang/latin/verb/irregular/latin-verb-participle-irregular-view.js'\nimport Table from '@views/lib/table'\n\nexport default class LatinVerbSupineIrregularView extends LatinVerbIrregularBaseView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n\n    this.id = 'verbSupineConjugationIrregular'\n    this.name = 'verb-supine-irregular'\n    this.title = 'Verb Supine Conjugation (Irregular)'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_verb_supine_irregular_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_SUPINE]\n  }\n\n  createTable () {\n    this.table = new Table([this.features.cases])\n    let features = this.table.features\n    features.columns = []\n    features.rows = [this.features.cases]\n    features.columnRowTitles = [this.features.cases]\n    features.fullWidthRowTitles = []\n  }\n\n  static matchFilter (languageID, inflections) {\n    return Boolean(\n      this.languageID === languageID &&\n      inflections.some(i => this.enabledForInflection(i)))\n  }\n\n  /**\n   * Gets inflection data for a homonym. For this view we need to use irregular verb inflections only.\n   * @param {Homonym} homonym - A homonym for which inflection data needs to be retrieved\n   * @param {Object} options\n   * @return {InflectionSet} Resulting inflection set.\n   */\n  static getInflectionsData (homonym, options) {\n    // Select only those inflections that are required for this view\n    let inflections = homonym.inflections.filter(\n      i => i[Feature.types.part].value === this.mainPartOfSpeech &&\n        i.constraints && i.constraints.irregular\n    )\n    return this.dataset.createInflectionSet(this.mainPartOfSpeech, inflections, options)\n  }\n\n  /**\n   * A list of constructors of linked views.\n   * @return {View[]}\n   */\n  static get linkedViewConstructors () {\n    return [LatinVerbIrregularView, LatinVerbIrregularVoiceView, LatinVerbParticipleIrregularView]\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinConjugationMoodVoiceView extends LatinVerbView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'verbConjugationMoodVoice'\n    this.name = 'conjugation-mood-voice'\n    this.title = 'Verb Conjugation'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_conjugation_mood_voice_view'\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  createTable () {\n    this.table = new Table([this.features.conjugations, this.features.moods, this.features.voices,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.conjugation),\n      this.constructor.model.typeFeature(Feature.types.mood),\n      this.constructor.model.typeFeature(Feature.types.voice)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.tense),\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinConjugationVoiceMoodView extends LatinVerbView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'verbConjugationVoiceMood'\n    this.name = 'conjugation-voice-mood'\n    this.title = 'Verb Conjugation'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_conjugation_voice_mood_view'\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  createTable () {\n    this.table = new Table([this.features.conjugations, this.features.voices, this.features.moods,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.conjugation),\n      this.constructor.model.typeFeature(Feature.types.voice),\n      this.constructor.model.typeFeature(Feature.types.mood)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.tense),\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport LatinVerbMoodView from './latin-verb-mood-view.js'\n// import GroupFeatureType from '../../../lib/group-feature-type'\nimport Table from '../../../lib/table'\n\nexport default class LatinImperativeView extends LatinVerbMoodView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'verbImperative'\n    this.name = 'imperative'\n    this.title = 'Imperative'\n\n    if (this.isImplemented) {\n      this.createTable()\n      this.table.morphemeCellFilter = LatinImperativeView.morphemeCellFilter\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.voice),\n      this.constructor.model.typeFeature(Feature.types.conjugation)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.tense),\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n  }\n\n  static get viewID () {\n    return 'latin_imperative_view'\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param {symbol} languageID\n   * @param {Inflection[]} inflections\n   * @return {boolean}\n   */\n  static matchFilter (languageID, inflections) {\n    return Boolean(\n      this.languageID === languageID &&\n      inflections.some(i => this.enabledForInflection(i)))\n  }\n\n  static enabledForInflection (inflection) {\n    return inflection[Feature.types.part].value === this.mainPartOfSpeech &&\n      inflection[Feature.types.mood] &&\n      inflection[Feature.types.mood].values.includes(Constants.MOOD_IMPERATIVE)\n  }\n\n  static morphemeCellFilter (suffix) {\n    return suffix.features[Feature.types.mood].values.includes(Constants.MOOD_IMPERATIVE)\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport LatinVerbMoodView from './latin-verb-mood-view.js'\n// import GroupFeatureType from '../../../lib/group-feature-type'\nimport Table from '../../../lib/table'\n\nexport default class LatinInfinitiveView extends LatinVerbMoodView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'verbInfinitive'\n    this.name = 'infinitive'\n    this.title = 'Infinitive'\n\n    if (this.isImplemented) {\n      this.createTable()\n      this.table.morphemeCellFilter = LatinInfinitiveView.morphemeCellFilter\n    }\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations,\n      this.features.tenses])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.voice),\n      this.constructor.model.typeFeature(Feature.types.conjugation)\n    ]\n    features.rows = [this.constructor.model.typeFeature(Feature.types.tense)]\n    features.columnRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n    features.fullWidthRowTitles = []\n  }\n\n  static get viewID () {\n    return 'latin_infinitive_view'\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view and an inflection data piece have the same language,\n   * the same part of speech, and the view is enabled for lexemes within an inflection data.\n   * @param {symbol} languageID\n   * @param {Inflection[]} inflections\n   * @return {boolean}\n   */\n  static matchFilter (languageID, inflections) {\n    return Boolean(\n      this.languageID === languageID &&\n      inflections.some(i => this.enabledForInflection(i)))\n  }\n\n  static enabledForInflection (inflection) {\n    return inflection[Feature.types.part].value === this.mainPartOfSpeech &&\n      inflection[Feature.types.mood] &&\n      inflection[Feature.types.mood].values.includes(Constants.MOOD_INFINITIVE)\n  }\n\n  static morphemeCellFilter (suffix) {\n    return suffix.features[Feature.types.mood].values.includes(Constants.MOOD_INFINITIVE)\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinMoodConjugationVoiceView extends LatinVerbView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'verbMoodConjugationVoice'\n    this.name = 'mood-conjugation-voice'\n    this.title = 'Verb Conjugation'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_mood_conjugation_voice_view'\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  createTable () {\n    this.table = new Table([this.features.moods, this.features.conjugations, this.features.voices,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.mood),\n      this.constructor.model.typeFeature(Feature.types.conjugation),\n      this.constructor.model.typeFeature(Feature.types.voice)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.tense),\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinMoodVoiceConjugationView extends LatinVerbView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'verbMoodVoiceConjugation'\n    this.name = 'mood-voice-conjugation'\n    this.title = 'Verb Conjugation'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_mood_voice_conjugation_view'\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  createTable () {\n    this.table = new Table([this.features.moods, this.features.voices, this.features.conjugations,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.mood),\n      this.constructor.model.typeFeature(Feature.types.voice),\n      this.constructor.model.typeFeature(Feature.types.conjugation)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.tense),\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n  }\n}\n","import Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\n\nexport default class LatinVerbMoodView extends LatinVerbView {\n  static get inflectionType () {\n    return Suffix\n  }\n}\n","import { Constants, Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinView from '../latin-view.js'\nimport GroupFeatureType from '../../../lib/group-feature-type'\nimport Table from '../../../lib/table'\n\nexport default class LatinVerbParticipleView extends LatinView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.partOfSpeech = this.constructor.mainPartOfSpeech\n    this.id = 'verbParticiple'\n    this.name = 'participle'\n    this.title = 'Participle'\n\n    this.features.tenses = new GroupFeatureType(Feature.types.tense, this.constructor.languageID, 'Tense', [\n      this.constructor.model.typeFeature(Feature.types.tense).createFeature(Constants.TENSE_PRESENT),\n      this.constructor.model.typeFeature(Feature.types.tense).createFeature(Constants.TENSE_PERFECT),\n      this.constructor.model.typeFeature(Feature.types.tense).createFeature(Constants.TENSE_FUTURE)\n    ])\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_verb_participle_view'\n  }\n\n  static get partsOfSpeech () {\n    return [Constants.POFS_VERB_PARTICIPLE, Constants.POFS_ADJECTIVE]\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations, this.features.tenses])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.voice),\n      this.constructor.model.typeFeature(Feature.types.conjugation)\n    ]\n    features.rows = [this.constructor.model.typeFeature(Feature.types.tense)]\n    features.columnRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n    features.fullWidthRowTitles = []\n  }\n}\n","import { Constants } from 'alpheios-data-models'\nimport LatinView from '../latin-view.js'\n\nexport default class LatinVerbView extends LatinView {\n  static get partsOfSpeech () {\n    return [Constants.POFS_VERB]\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinVoiceConjugationMoodView extends LatinVerbView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'verbVoiceConjugationMood'\n    this.name = 'voice-conjugation-mood'\n    this.title = 'Verb Conjugation'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_voice_conjugation_mood_view'\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.conjugations, this.features.moods,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.voice),\n      this.constructor.model.typeFeature(Feature.types.conjugation),\n      this.constructor.model.typeFeature(Feature.types.mood)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.tense),\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n  }\n}\n","import { Feature } from 'alpheios-data-models'\nimport Suffix from '../../../../lib/suffix.js'\nimport LatinVerbView from './latin-verb-view.js'\nimport Table from '../../../lib/table'\n\nexport default class LatinVoiceMoodConjugationView extends LatinVerbView {\n  constructor (homonym, inflectionData, locale) {\n    super(homonym, inflectionData, locale)\n    this.id = 'verbVoiceMoodConjugation'\n    this.name = 'voice-mood-conjugation'\n    this.title = 'Verb Conjugation'\n\n    if (this.isImplemented) {\n      this.createTable()\n    }\n  }\n\n  static get viewID () {\n    return 'latin_voice_mood_conjugation_view'\n  }\n\n  static get inflectionType () {\n    return Suffix\n  }\n\n  createTable () {\n    this.table = new Table([this.features.voices, this.features.moods, this.features.conjugations,\n      this.features.tenses, this.features.numbers, this.features.persons])\n    let features = this.table.features\n    features.columns = [\n      this.constructor.model.typeFeature(Feature.types.voice),\n      this.constructor.model.typeFeature(Feature.types.mood),\n      this.constructor.model.typeFeature(Feature.types.conjugation)\n    ]\n    features.rows = [\n      this.constructor.model.typeFeature(Feature.types.tense),\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.columnRowTitles = [\n      this.constructor.model.typeFeature(Feature.types.number),\n      this.constructor.model.typeFeature(Feature.types.person)\n    ]\n    features.fullWidthRowTitles = [this.constructor.model.typeFeature(Feature.types.tense)]\n  }\n}\n","export default class Cell {\n  /**\n   * Creates a cell for an inflection table.\n   * @param {Morpheme[]} morphemes - A list of morphemes that belongs to this cell.\n   * @param {Feature[]} features - A list of features this cell corresponds to.\n   */\n  constructor (morphemes, features) {\n    this.morphemes = morphemes\n    if (!this.morphemes) {\n      this.morphemes = []\n    }\n    this.features = features\n    this.empty = (this.morphemes.length === 0)\n    this.suffixMatches = !!this.morphemes.find(element => {\n      if (element.match && element.match.suffixMatch) {\n        return element.match.suffixMatch\n      }\n    })\n    this.morphologyMatch = this.morphemes.length > 0 && this.morphemes.every(m => m.match && m.match.morphologyMatch)\n\n    this.column = undefined // A column this cell belongs to\n    this.row = undefined // A row this cell belongs to\n\n    this._index = undefined\n    this.hidden = false\n    this.highlighted = false\n  }\n\n  get isDataCell () {\n    return true\n  }\n\n  /**\n   * Sets a unique index of the cell that can be used for cell identification via 'data-index' attribute.\n   * @param {number} index - A unique cell index.\n   */\n  set index (index) {\n    this._index = index\n  }\n\n  /**\n   * Hides an element.\n   */\n  hide () {\n    this.hidden = true\n  }\n\n  /**\n   * Shows a previously hidden element.\n   */\n  show () {\n    this.hidden = false\n  }\n\n  /**\n   * Highlights a cell with color.\n   */\n  highlight () {\n    this.highlighted = true\n  }\n\n  /**\n   * Removes highlighting from a previously highlighted cell.\n   */\n  clearHighlighting () {\n    this.highlighted = false\n  }\n\n  /**\n   * Highlights a row and a column this cell belongs to.\n   */\n  highlightRowAndColumn () {\n    if (!this.column) {\n      throw new Error('Column is undefined.')\n    }\n    if (!this.row) {\n      throw new Error('Row is undefined.')\n    }\n    this.column.highlight()\n    this.row.highlight()\n  }\n\n  /**\n   * Removes highlighting form a previously highlighted row and column.\n   */\n  clearRowAndColumnHighlighting () {\n    if (!this.column) {\n      throw new Error('Column is undefined.')\n    }\n    if (!this.row) {\n      throw new Error('Row is undefined.')\n    }\n    this.column.clearHighlighting()\n    this.row.clearHighlighting()\n  }\n}\n","/**\n * Represent a column of cells in an inflection table.\n */\nexport default class Column {\n  /**\n   * Initializes column with a provided set of cells.\n   * @param {Cell} cells - Cells that are within this column.\n   */\n  constructor (cells) {\n    this.cells = cells\n    if (!cells) {\n      this.cells = []\n    }\n    this._headerCell = undefined\n    this.hidden = false\n    this.empty = this.cells.every(cell => cell.empty)\n    // TODO we should rename this to be cellMatches\n    this.suffixMatches = !!this.cells.find(cell => cell.suffixMatches || cell.morphologyMatch)\n\n    for (let cell of this.cells) {\n      cell.column = this\n    }\n  }\n\n  /**\n   * Assigns a header cell to the column.\n   * @param {HeaderCell} headerCell - A header cell of this column.\n   */\n  set headerCell (headerCell) {\n    this._headerCell = headerCell\n    headerCell.addColumn(this)\n  }\n\n  /**\n   * Returns a number of cells within this column.\n   * @returns {Number} A number of cells this column contains.\n   */\n  get length () {\n    return this.cells.length\n  }\n\n  /**\n   * Hides the column. Notifies a header about a state change.\n   */\n  hide () {\n    if (!this.hidden) {\n      this.hidden = true\n\n      for (let cell of this.cells) {\n        cell.hide()\n      }\n      if (this._headerCell) {\n        this._headerCell.columnStateChange()\n      }\n    }\n  }\n\n  /**\n   * Shows the column. Notifies a header about a state change.\n   */\n  show () {\n    if (this.hidden) {\n      this.hidden = false\n\n      for (let cell of this.cells) {\n        cell.show()\n      }\n      if (this._headerCell) {\n        this._headerCell.columnStateChange()\n      }\n    }\n  }\n\n  /**\n   * Highlights a column and its header.\n   */\n  highlight () {\n    for (let cell of this.cells) {\n      cell.highlight()\n    }\n    if (this._headerCell) {\n      this._headerCell.highlight()\n    }\n  }\n\n  /**\n   * Removes highlighting from a column and its header.\n   */\n  clearHighlighting () {\n    for (let cell of this.cells) {\n      cell.clearHighlighting()\n    }\n    if (this._headerCell) {\n      this._headerCell.clearHighlighting()\n    }\n  }\n}\n","import { Feature, FeatureList } from 'alpheios-data-models'\nimport GroupFeatureType from './group-feature-type.js'\n\n/**\n * Holds a list of all grouping features of a table.\n */\nexport default class GroupFeatureList extends FeatureList {\n  /**\n   * Initializes object with an array of grouping feature objects.\n   * @param {GroupFeatureType[]} features - An array of features that form a table.\n   * An order of features defines in what order a table tree would be built.\n   */\n  constructor (features) {\n    super(features)\n    this._columnFeatures = [] // Features that group cells into columns\n    this._rowFeatures = [] // Features that group cells into rows\n\n    this.forEach((feature) => { feature.groupFeatureList = this })\n\n    // Data column represents a single column that holds data values in tables that has no features that form columns.\n    this._dataColFeature = null\n  }\n\n  /**\n   * Whether a list has any column features\n   * @return {boolean} True if list has any column features, false otherwise\n   */\n  get hasColumnFeatures () {\n    return this._columnFeatures.length > 0\n  }\n\n  /**\n   * Return a list of all grouping features that form columns.\n   * @returns {GroupFeatureType[]} - An array of grouping features.\n   */\n  get columnFeatures () {\n    return this._columnFeatures\n  }\n\n  /**\n   * Defines what features form columns. An order of items specifies an order in which columns be shown.\n   * @param {Feature[] | GroupingFeature[]} features - What features form columns and what order\n   * these columns would follow.\n   */\n  set columns (features) {\n    for (let feature of features) {\n      let matchingFeature = this.ofType(feature.type)\n      if (!matchingFeature) {\n        throw new Error(`Feature of ${feature.type} is not found.`)\n      }\n      matchingFeature.formsColumn = true\n      this._columnFeatures.push(matchingFeature)\n    }\n  }\n\n  /**\n   * Returns a first column feature item.\n   * @returns {GroupFeatureType} A fist column feature.\n   */\n  get firstColumnFeature () {\n    if (this._columnFeatures && this._columnFeatures.length) {\n      return this._columnFeatures[0]\n    }\n  }\n\n  isFirstColumnFeature (groupFeature) {\n    return groupFeature.isSameType(this.firstColumnFeature)\n  }\n\n  /**\n   * Returns a last column feature item.\n   * @returns {GroupFeatureType} A last column feature.\n   */\n  get lastColumnFeature () {\n    if (this._columnFeatures && this._columnFeatures.length) {\n      return this._columnFeatures[this._columnFeatures.length - 1]\n    }\n  }\n\n  isLastColumnFeature (groupFeature) {\n    return groupFeature.isSameType(this.lastColumnFeature)\n  }\n\n  /**\n   * Return a list of all grouping features that form rows.\n   * @returns {GroupFeatureType[]} - An array of grouping rows.\n   */\n  get rowFeatures () {\n    return this._rowFeatures\n  }\n\n  /**\n   * Defines what features form rows. An order of items specifies an order in which columns be shown.\n   * @param {Feature[] | GroupFeatureType[]} features - What features form rows and what order\n   * these rows would follow.\n   */\n  set rows (features) {\n    for (let feature of features) {\n      let matchingFeature = this.ofType(feature.type)\n      if (!matchingFeature) {\n        throw new Error(`Feature of ${feature.type} is not found.`)\n      }\n      matchingFeature.formsRow = true\n      this._rowFeatures.push(matchingFeature)\n    }\n    return this\n  }\n\n  /**\n   * Some tables has no features that form columns. In order to show them properly\n   * we need to create a single data column that will hold data values.\n   * @return {GroupFeatureType} - A data column feature.\n   */\n  createDataColumn () {\n    // Need to use a known type to pass a type check\n    let feature = new Feature('word', 'empty value', Symbol('data column language'))\n    feature.type = 'data column type' // To bypass a type check\n    this._dataColFeature = new GroupFeatureType('data column type', Symbol('data column language'), '', [feature])\n    this._dataColFeature.dataColumn = true\n    // this._columnFeatures.push(groupFeature)\n    return this._dataColFeature\n  }\n\n  /**\n   * Checks whether this table has a data column\n   * @return {boolean} True if data column exist, false otherwise.\n   */\n  get hasDataColumn () {\n    return Boolean(this._dataColFeature)\n  }\n\n  /**\n   * Get feature from a certain position. Will ignore data columns.\n   * @param {number} position - Position of a feature, starting from zero.\n   * @return {GroupFeatureType | null} A feature element or null if not found.\n   */\n  getFeature (position) {\n    if (position < this._features.length) {\n      return this._features[position]\n    } else {\n      console.warn(`Attempting to get feature that is out of bounds, position ${position}`)\n      return null\n    }\n  }\n\n  /**\n   * Get feature from a certain position, including data column.\n   * @param {number} position - Position of a feature, starting from zero.\n   * @return {GroupFeatureType | null} A feature element or null if not found.\n   */\n  getGroupingFeature (position) {\n    if (this.hasDataColumn) {\n      if (position === 0) {\n        return this._dataColFeature\n      } else if (position <= this._features.length) {\n        return this._features[position - 1]\n      }\n    } else {\n      return this.getFeature(position)\n    }\n  }\n\n  /**\n   * Returns a first row feature item.\n   * @returns {GroupFeatureType} A fist row feature.\n   */\n  get firstRowFeature () {\n    if (this._rowFeatures && this._rowFeatures.length) {\n      return this._rowFeatures[0]\n    }\n  }\n\n  isFirstRowFeature (groupFeature) {\n    return groupFeature.isSameType(this.firstRowFeature)\n  }\n\n  /**\n   * Returns a last row feature item.\n   * @returns {GroupFeatureType} A last row feature.\n   */\n  get lastRowFeature () {\n    if (this._rowFeatures && this._rowFeatures.length) {\n      return this._rowFeatures[this._rowFeatures.length - 1]\n    }\n  }\n\n  isLastRowFeature (groupFeature) {\n    return groupFeature.isSameType(this.lastRowFeature)\n  }\n\n  /**\n   * Defines what are the titles of suffix cell rows within a table body.\n   * The number of such items defines how many left-side title columns this table would have (default is one).\n   * Full width titles (see below) does not need to be specified here.\n   * @param {Feature | GroupFeatureType} features - What suffix row titles this table would have.\n   */\n  set columnRowTitles (features) {\n    for (let feature of features) {\n      let matchingFeature = this.ofType(feature.type)\n      if (!matchingFeature) {\n        throw new Error(`Feature of ${feature.type} is not found.`)\n      }\n      matchingFeature.hasColumnRowTitle = true\n    }\n  }\n\n  /**\n   * In inflection tables, titles of features are usually located in left-side columns. However, some titles that\n   * group several rows together may span the whole table width. This setters defines\n   * what those features are.\n   * @param {Feature | GroupingFeature} features - What feature titles would take a whole row\n   */\n  set fullWidthRowTitles (features) {\n    for (let feature of features) {\n      let matchingFeature = this.ofType(feature.type)\n      if (!matchingFeature) {\n        throw new Error(`Feature of ${feature.type} is not found.`)\n      }\n      matchingFeature.hasFullWidthRowTitle = true\n    }\n  }\n\n  /**\n   * Returns a quantity of grouping features.\n   * @returns {number} - A number of grouping features.\n   */\n  get length () {\n    return this._features.length\n  }\n\n  /**\n   * Calculate a number of title columns.\n   * @returns {number} A number of title columns.\n   */\n  get titleColumnsQuantity () {\n    let quantity = 0\n    for (let feature of this._features) {\n      if (feature.hasColumnRowTitle) {\n        quantity++\n      }\n    }\n    return quantity\n  }\n}\n","import { LanguageModelFactory } from 'alpheios-data-models'\nimport LDF from '@lib/language-dataset-factory.js'\nimport Morpheme from '@lib/morpheme.js'\nimport RowTitleCell from './row-title-cell.js'\nimport HeaderCell from './header-cell.js'\n\n// TODO: Rebase on Feature instead of FeatureType\n/**\n * This is a wrapper around a FeatureType object. When a Table object creates a\n * hierarchical tree of suffixes, it uses grammatical features as tree nodes.\n * GroupFeatureType extends a Feature object so that it'll be able to store additional information\n * that is required for that.\n */\nexport default class GroupFeatureType {\n  /**\n   * GroupFeatureType extends FeatureType to serve as a grouping feature (i.e. a feature that forms\n   * either a column or a row in an inflection table). For that, it adds some additional functionality,\n   * such as custom feature orders that will allow to combine suffixes from several grammatical features\n   * (i.e. masculine and feminine) into a one column of a table.\n   * @param {string} type - A type of a feature.\n   * @param {symbol} languageID - A language ID.\n   * @param {string} titleMessageID - A message ID of a title, used to get a formatted title from a\n   * language-specific message bundle.\n   * @param {Feature[]} features - A list of feature values for this type (i.e. gender, declension, etc.).\n   * @param {Morpheme.comparisonTypes} comparisonType - What matching algorithm to use (exact or partial).\n   * Each feature value is stored in a Feature object.\n   */\n  constructor (type, languageID, titleMessageID, features, comparisonType = Morpheme.comparisonTypes.EXACT) {\n    this.type = type\n    this.languageID = languageID\n    this.featureMap = new Map(features.map(f => [f.value, f]))\n    this.comparisonType = comparisonType\n    this.dataset = LDF.getDataset(this.languageID)\n\n    this.groupTitle = titleMessageID\n    this._groupType = undefined\n\n    // Properties below are required to store information during tree creation\n    this.subgroups = [] // Each value of the feature\n    this.cells = [] // All cells within this group and below\n    this.parent = undefined\n    this.header = undefined\n\n    this._formsColumn = false\n    this._formsRow = false\n    this.hasColumnRowTitle = false // Whether this feature has a title of a suffix row in the left-side column.\n    this.hasFullWidthRowTitle = false // Whether this feature has a title of suffix rows that spans the whole table width.\n  }\n\n  /**\n   * Creates an instance of GroupFeatureType from a type feature of a language\n   * @param {string} type - A type of a feature.\n   * @param {symbol} languageID - A language ID\n   * @param {string} titleMessageID - A message ID of a title, used to get a formatted title from a\n   * language-specific message bundle.\n   * @return {GroupFeatureType} A newly created GroupFeatureType object.\n   */\n  static createFromType (type, languageID, titleMessageID) {\n    return new GroupFeatureType(type, languageID, titleMessageID,\n      LanguageModelFactory.getLanguageModel(languageID).typeFeature(type).ownFeatures\n    )\n  }\n\n  /**\n   * Creates an instance of GroupFeatureType of the same type and with same feature set as the current one.\n   * Used when it is required to obtain a copy and modify certain characteristics of it\n   * so that the original won't be affected by the change.\n   * This function does not create a full copy of a GroupFeatureType object. It creates an object with only\n   * those properties that will be required during a view definition.\n   * @return {GroupFeatureType} - A new object with same type and same features as the current one.\n   */\n  createOfSameType () {\n    return this.constructor.createFromType(this.type, this.languageID, this.groupTitle)\n  }\n\n  addFeature (key, values) {\n    let typeFeature = LanguageModelFactory.getLanguageModel(this.languageID).typeFeature(this.type)\n    let newFeature = typeFeature.createFeatures(values)\n    this.featureMap.set(key, newFeature)\n  }\n\n  /**\n   * This is a wrapper around orderedFeatures() that allows to set a custom feature order for particular columns.\n   * @param {Feature[]|[]} ancestorFeatures - An array of features in an inflection table tree before the current feature.\n   * A feature with the highest index in the array is the closest to the current one. The feature with zero index\n   * is the most far away. Ancestor features array is empty if the current feature is the first one in the list.\n   * @returns {Feature[] | Feature[][]} A sorted array of feature values.\n   */\n  getOrderedFeatures (ancestorFeatures = []) {\n    return Array.from(this.featureMap.values())\n    // return this.getOrderedValues(ancestorFeatures).map((value) => new Feature(this.type, value, this.languageID))\n  }\n\n  /**\n   * This is a wrapper around orderedValues() that allows to set a custom feature order for particular columns.\n   * By default it returns features in the same order that is defined in a base FeatureType class.\n   * Redefine it to provide a custom grouping and sort order.\n   * @returns {string[] | string[][]} A sorted array of feature values.\n   */\n  /* getOrderedValues (ancestorFeatures) {\n    return this._orderIndex\n  } */\n\n  /**\n   * Returns a column or row title for a value of a feature provided.\n   * Redefine it if you want to display custom titles instead of feature values.\n   * @param {string} featureValue - A value of a Feature object\n   * @return {string} - A row or column title for a table\n   */\n  getTitle (featureValue) {\n    if (this.featureMap.has(featureValue)) {\n      return this.featureMap.get(featureValue).value\n    } else {\n      // Pass through for texts that are not feature values\n      return featureValue\n    }\n  }\n\n  /**\n   * Whether this feature forms a columns group.\n   * @returns {boolean} True if this feature forms a column.\n   */\n  get formsColumn () {\n    return this._formsColumn\n  }\n\n  /**\n   * Sets that this feature would form a column.\n   * @param {boolean} value\n   */\n  set formsColumn (value) {\n    this._formsColumn = value\n    this._formsRow = !value // Can't do both\n  }\n\n  /**\n   * Whether this feature forms a row group.\n   * @returns {boolean} True if this feature forms a row.\n   */\n  get formsRow () {\n    return this._formsRow\n  }\n\n  /**\n   * Sets that this feature would form a row.\n   * @param {boolean} value\n   */\n  set formsRow (value) {\n    this._formsRow = value\n    this._formsColumn = !value // Can't do both\n  }\n\n  /**\n   * How many groups this feature would form.\n   * @returns {Number} A number of groupes formed by this feature.\n   */\n  get size () {\n    return this.featureMap.size\n  }\n\n  /**\n   * Checks if two grouping features are of the same type.\n   * @param {GroupFeatureType} groupingFeature - A grouping feature to compare with the current one.\n   * @returns {boolean} True if grouping features are of the same type.\n   */\n  isSameType (groupingFeature) {\n    return this.type === groupingFeature.type\n  }\n\n  /**\n   * Creates a row title cell for a feature from the current group.\n   * @param {string} value - A text that will be shown within a cell.\n   * @param {number} nvGroupQty - A number of narrow view groups.\n   * @returns {RowTitleCell} A created RowTitleCell object.\n   */\n  createRowTitleCell (value, nvGroupQty) {\n    return new RowTitleCell(value, this, nvGroupQty)\n  }\n\n  createHeaderCell (value, columnSpan) {\n    return new HeaderCell(value, this, columnSpan)\n  }\n}\n","/**\n * A cell in a header row, a column title cell.\n */\nexport default class HeaderCell {\n  /**\n   * Initializes a header cell.\n   * @param {string} featureValue - A title text that will be shown in the header cell.\n   * @param {GroupFeatureType} groupingFeature - A feature that defines one or several columns this header forms.\n   * @param {number} [span=1] - How many columns in a table this header cell forms.\n   */\n  constructor (featureValue, groupingFeature, span = 1) {\n    this.feature = groupingFeature\n    this.title = groupingFeature.getTitle(featureValue)\n    this.span = span\n\n    this.parent = undefined\n    this.children = []\n    this.columns = []\n\n    this.value = this.title\n  }\n\n  /**\n   * Registers a column that's being formed by this header cell. Adds column to itself and to its parent(s).\n   * @param {Column} column - A column that is formed by this header cell.\n   */\n  addColumn (column) {\n    this.columns = this.columns.concat([column])\n\n    if (this.parent) {\n      this.parent.addColumn(column)\n    }\n  }\n\n  /**\n   * Temporary changes a width of a header cell. This happens when one or several columns\n   * that this header forms are hidden or shown.\n   * @param value\n   */\n  changeSpan (value) {\n    this.span += value\n  }\n\n  /**\n   * This function will notify all parents and children of a title column that some columns under this headers cell\n   * changed their state (i.e. were hidden or shown). This way parents and children will be able to update their\n   * states accordingly.\n   */\n  columnStateChange () {\n    let visibleColumns = 0\n    for (let column of this.columns) {\n      if (!column.hidden) {\n        visibleColumns++\n      }\n    }\n    if (this.span !== visibleColumns) {\n      // Number of visible columns has been changed\n      let change = visibleColumns - this.span\n      this.changeSpan(change)\n\n      // Notify parents and children\n      if (this.children.length) {\n        for (let child of this.children) {\n          child.columnStateChange()\n        }\n      }\n      if (this.parent) {\n        this.parent.columnStateChange()\n      }\n    }\n  }\n\n  /**\n   * Highlights a header cell, its parent and children\n   */\n  highlight () {\n    if (!this.highlighted) {\n      this.highlighted = true\n      if (this.parent) {\n        this.parent.highlight()\n      }\n    }\n  }\n\n  /**\n   * Removes highlighting from a header cell, its parent and children\n   */\n  clearHighlighting () {\n    if (this.highlighted) {\n      this.highlighted = false\n      if (this.parent) {\n        this.parent.clearHighlighting()\n      }\n    }\n  }\n}\n","/**\n * Stores group data during feature tree construction.\n */\nexport default class NodeGroup {\n  /**\n   * Creates feature group data structures.\n   */\n  constructor () {\n    this.subgroups = [] // Each value of the feature\n    this.cells = [] // All cells within this group and below\n    this.parent = undefined\n    this.header = undefined\n\n    this.groupFeatureType = undefined // Defines a feature type that forms a tree level this node is in.\n    this.ancestorFeatures = undefined // Defines feature values of this node's parents.\n  }\n}\n","/**\n * A cell that specifies a title for a row in an inflection table.\n */\nexport default class RowTitleCell {\n  /**\n   * Initializes a row title cell.\n   * @param {string} featureValue - A text that will be shown within the cell.\n   * @param {GroupFeatureType} groupingFeature - A grouping feature that specifies a row for which a title cell\n   * is created.\n   * @param {number} nvGroupQty - A number of narrow view groups. Because each group will be shown separately\n   * and will have its own title cells, we need to create a copy of a title cell for each such group.\n   */\n  constructor (featureValue, groupingFeature, nvGroupQty) {\n    this.parent = undefined\n    this.title = groupingFeature.getTitle(featureValue)\n    this.feature = groupingFeature\n    this.nvGroupQty = nvGroupQty\n    this.span = 1\n    this.formsColumn = this.feature.formsColumn\n    this.fullWidth = this.feature.hasFullWidthRowTitle\n    this.titleColumnsQuantity = this.feature.groupFeatureList.titleColumnsQuantity\n\n    this.value = this.title\n\n    if (this.feature.formsColumn && this.feature.groupFeatureList.titleColumnsQuantity > 1) {\n      this.span = this.titleColumnsQuantity\n    }\n  }\n\n  /**\n   * Same as `placeholder`, but generates a cell in Vue.js style\n   * @param {number} width - How many columns this cell should span\n   * @return {Object}\n   */\n  /**\n  * Generates an empty cell placeholder of a certain width. Useful for situation when empty title cells need to be\n  * inserted into a table structure (i.e. when title cells occupy multiple columns).\n  * @param {number} span - A number of columns a placeholder cell would occupy.\n  * @returns {Object}\n   */\n  static placeholder (span = 1) {\n    return {\n      value: '', // This cell is empty\n      span: span\n    }\n  }\n\n  /**\n   * Some table layouts require multiple title cells to be shown for a row. These could be, for example, a title\n   * cell for a parent category that will follow a title cell for a category that defines a row. In such situation a\n   * title cell will have a parent, which will represent a parent cell object.\n   * This function returns an array of title cells for a row, starting from the topmost parent and moving down\n   * tot the current title cell.\n   * @returns {RowTitleCell[]} An array of title row cells representing a title cell hierarchy list.\n   */\n  get hierarchyList () {\n    let parentCells = []\n    if (this.parent) {\n      parentCells = this.parent.hierarchyList\n    }\n    return parentCells.concat(this)\n  }\n\n  /**\n   * Highlights this row title cell\n   */\n  highlight () {\n    this.highlighted = true\n  }\n\n  /**\n   * Removes highlighting from this row title cell\n   */\n  clearHighlighting () {\n    this.highlighted = false\n  }\n}\n","/**\n * Represents a row of cells\n */\nexport default class Row {\n  /**\n   * Populates row with cells\n   * @param {Cell[]} cells - Cells that belong to this row\n   */\n  constructor (cells = []) {\n    this.cells = cells\n    if (!cells) {\n      this.cells = []\n    }\n    this.titleCell = undefined\n\n    for (let cell of this.cells) {\n      cell.row = this\n    }\n  }\n\n  /**\n   * Adds a cell to the row.\n   * This is a chainable function.\n   * @param {Cell} cell - A cell to be added to the row\n   */\n  add (cell) {\n    cell.row = this\n    this.cells.push(cell)\n    return this\n  }\n\n  /**\n   * Returns a number of cells in a row\n   * @returns {Number} A number of cells in a row\n   */\n  get length () {\n    return this.cells.length\n  }\n\n  get empty () {\n    return this.cells.filter(c => !c.empty).length === 0\n  }\n\n  /**\n   * Cells are usually grouped into rows not by a single feature, but by combination of features.\n   * In such situations, a row might have not one, but several title cells.\n   * Those additional title cells will be stored in a `parent` property of each other.\n   * However, all parent feature values will be shown only for the first row in a group\n   * in the current table format. For other rows in a group parent values (the ones that are\n   * the same within a group) will be omitted and only. They will display only those feature values\n   * that are different between the rows in a group (i.e. the last grouping feature value).\n   * Thus, the first row in a group will have a title cell value and its parent values set.\n   * Other rows in a group will have only a title cell value set, but the parent value of it will be empty\n   * (this will indicate that those parent values will not be shown for rows that are not first in a group).\n   * This function checks if a current row is the first one in a group or not.\n   * @return {boolean}\n   */\n  get firstInGroup () {\n    return Boolean(this.titleCell && this.titleCell.parent)\n  }\n\n  /**\n   * Returns a portion of a cells array starting from `from` item and up to, but not including, `upto` element.\n   * It does not create new copies of cells to populate a newly created array; this array contains references to\n   * the same cells that original Row refers to. It also does not update row reference within Cell objects.\n   *\n   * This function presents a way to create another structure of existing table's cells.\n   * It can be useful for views that have a different structure (i.e. narrow view).\n   * @param {number} from\n   * @param {number} upto\n   */\n  slice (from, upto) {\n    let slice = new Row()\n    if (from < 0 && from > this.cells.length) {\n      throw new Error('\"from\" parameter is out of range.')\n    }\n    if (upto < 0 && upto > this.cells.length) {\n      throw new Error('\"upto\" parameter is out of range.')\n    }\n    for (let index = from; index < upto; index++) {\n      slice.cells.push(this.cells[index])\n    }\n    slice.titleCell = this.titleCell\n    return slice\n  }\n\n  /**\n   * Highlights all cells in a row, and a title cells\n   */\n  highlight () {\n    for (let cell of this.cells) {\n      cell.highlight()\n    }\n    if (this.titleCell) {\n      this.titleCell.highlight()\n    }\n  }\n\n  /**\n   * Removes highlighting from all cells in a row, and from a title cell\n   */\n  clearHighlighting () {\n    for (let cell of this.cells) {\n      cell.clearHighlighting()\n    }\n    if (this.titleCell) {\n      this.titleCell.clearHighlighting()\n    }\n  }\n}\n","import Suffix from '../../lib/suffix.js'\nimport Cell from './cell.js'\nimport Column from './column.js'\nimport Row from './row.js'\nimport GroupFeatureList from './group-feature-list.js'\nimport NodeGroup from './node-group.js'\n\n/**\n * Represents an inflection table.\n */\nexport default class Table {\n  /**\n   * Initializes an inflection table.\n   * @param {GroupFeatureType[]} features - An array of grouping features. An order of elements in this array\n   */\n  constructor (features) {\n    this.features = new GroupFeatureList(features)\n    this.cells = [] // Will be populated by groupByFeature()\n\n    /*\n    This is a special filter function that, if defined will do additional filtering of morhpemes within a cell.\n     */\n    this.morphemeCellFilter = undefined\n  }\n\n  /**\n   * Creates a table tree and other data structures (columns, rows, headers).\n   * This function is chainabe.\n   * @param {Morpheme[]} morphemes - An array of morphemes to build table from.\n   * @param {Object} options - Table's options\n   * @returns {Table} Reference to self for chaining.\n   */\n  construct (morphemes, options = {\n    emptyColumnsHidden: true,\n    noSuffixMatchesHidden: true\n  }) {\n    this.morphemes = morphemes\n\n    this.hasHeaders = this.features.hasColumnFeatures\n    this.tree = this.groupByFeature(morphemes)\n    this.headers = this.hasHeaders ? this.constructHeaders() : []\n    this.columns = this.constructColumns()\n    this.rows = this.constructRows()\n    this.options = options\n    // A table can collapse if there are some columns with suffix matches and some without\n    this.canCollapse = this._canCollapse()\n    if (!this.canCollapse) {\n      // If table cannot be collapsed or expanded it should always be shown in full form\n      this.options.noSuffixMatchesHidden = false\n    }\n\n    if (this.options.emptyColumnsHidden) {\n      this.hideEmptyColumns()\n    } else {\n      this.showEmptyColumns()\n    }\n    if (this.options.noSuffixMatchesHidden) {\n      this.hideNoSuffixMatchesGroups()\n    } else {\n      this.showNoSuffixMatchesGroups()\n    }\n    return this\n  }\n\n  /**\n   * Returns a number of columns with data (suffix or morpheme) cells in a table.\n   * @returns {number} A number of columns with data cells in a table.\n   */\n  get dataColumnQty () {\n    if (!this.columns) {\n      throw new Error('Columns are not populated yet.')\n    }\n    return this.columns.length\n  }\n\n  /**\n   * Returns a number of columns with row titles in a table.\n   * @returns {number} A number of columns with row titles.\n   */\n  get titleColumnQty () {\n    if (!this.features) {\n      throw new Error('Features are not defined.')\n    }\n    return this.features.titleColumnsQuantity\n  }\n\n  /**\n   * Returns a number of rows with data (suffix or morpheme) cells in a table.\n   * @returns {number} A number of rows with suffix cells.\n   */\n  get dataRowQty () {\n    if (!this.columns) {\n      throw new Error('Columns are not populated yet.')\n    }\n    return this.columns[0].length\n  }\n\n  /**\n   * Groups all morphemes into a tree according to their grammatical features. There are several levels in this tree.\n   * Each level corresponds to a one grouping feature. The order of items in GroupingFeatures List object\n   * defines an order of those levels.\n   * Nodes on each level are values of a grammatical feature that forms this level. An order of those values\n   * is determined by the order of values within a GroupFeatureType object of each feature.\n   * This is a recursive function.\n   * @param {Morpheme[]} morphemes - Suffixes to be grouped.\n   * @param {Feature[]} ancestorFeatures - A list of feature values on levels above the current.\n   * @param {number} currentLevel - At what level in a tree we are now. Used to stop recursion.\n   * @returns {NodeGroup} A top level group of morphemes that contain subgroups all way down to the last group.\n   */\n  groupByFeature (morphemes, ancestorFeatures = [], currentLevel = 0) {\n    let group = new NodeGroup()\n    if (!this.features.hasColumnFeatures && !this.features.hasDataColumn) {\n      /*\n      Table has no column features and will have only one column with data values.\n      In that case we need to create a single placeholder column group.\n      Set placeholder's group feature to fake a last column.\n       */\n      group.groupFeatureType = this.features.createDataColumn()\n      let subGroup = this.groupByFeature(morphemes, ancestorFeatures, currentLevel)\n      group.subgroups.push(subGroup)\n      group.cells = group.cells.concat(subGroup.cells)\n    } else {\n      group.groupFeatureType = this.features.getFeature(currentLevel)\n      group.ancestorFeatures = ancestorFeatures.slice()\n\n      // Iterate over each value of the feature\n      for (const featureValue of group.groupFeatureType.getOrderedFeatures(ancestorFeatures)) {\n        if (ancestorFeatures.length > 0 && ancestorFeatures[ancestorFeatures.length - 1].type === group.groupFeatureType.type) {\n          // Remove previously inserted feature of the same type\n          ancestorFeatures.pop()\n        }\n        ancestorFeatures.push(featureValue)\n\n        // Suffixes that are selected for current combination of feature values\n        let selectedMorphemes = morphemes.filter(s => s.featureMatch(featureValue, group.groupFeatureType.comparisonType))\n\n        if (currentLevel < this.features.length - 1) {\n          // Divide to further groups\n          let subGroup = this.groupByFeature(selectedMorphemes, ancestorFeatures, currentLevel + 1)\n          group.subgroups.push(subGroup)\n          group.cells = group.cells.concat(subGroup.cells)\n        } else {\n          // This is the last level. This represent a cell with morphemes\n          // Split result has a list of morphemes in a table cell. We need to combine items with same endings.\n          if (selectedMorphemes.length > 0) {\n            if (this.morphemeCellFilter) {\n              selectedMorphemes = selectedMorphemes.filter(this.morphemeCellFilter)\n            }\n\n            selectedMorphemes = Suffix.combine(selectedMorphemes)\n          }\n\n          let cell = new Cell(selectedMorphemes, ancestorFeatures.slice())\n          group.subgroups.push(cell)\n          group.cells.push(cell)\n          this.cells.push(cell)\n          cell.index = this.cells.length - 1\n        }\n      }\n      ancestorFeatures.pop()\n      return group\n    }\n    return group\n  }\n\n  /**\n   * Create columns out of a morphemes organized into a tree.\n   * This is a recursive function.\n   * @param {NodeGroup} tree - A tree of morphemes.\n   * @param {Column[]} columns - An array of columns to be constructed.\n   * @param {number} currentLevel - Current recursion level.\n   * @returns {Array} An array of columns of suffix cells.\n   */\n  constructColumns (tree = this.tree, columns = [], currentLevel = 0) {\n    let currentFeature = this.features.getGroupingFeature(currentLevel)\n    let groups = []\n    for (let [index, feature] of currentFeature.getOrderedFeatures(tree.ancestorFeatures).entries()) {\n      let cellGroup = tree.subgroups[index]\n      // Iterate until it is the last row feature\n\n      if (!this.features.isLastRowFeature(currentFeature)) {\n        let currentResult = this.constructColumns(cellGroup, columns, currentLevel + 1)\n        if (currentFeature.formsRow) {\n          // TODO: Avoid creating extra cells\n\n          /**\n           * An array of cells that represent a group of rows. First cell in each group will show\n           * its title value of a row as well as all titles of parent values. As other cells in a group\n           * will have the same parent values, they will be omitted and only the current row title be shown.\n           * @type {{groups: Cell[], titleCell: RowTitleCell}}\n           */\n          let group = {\n            groups: currentResult,\n            titleCell: currentFeature.createRowTitleCell(feature.value, this.features.firstColumnFeature.size)\n          }\n          group.groups[0].titleCell.parent = group.titleCell\n          groups.push(group)\n        } else if (currentFeature.dataColumn || this.features.isLastColumnFeature(currentFeature)) {\n          let column = new Column(cellGroup.cells)\n          column.groups = currentResult\n          column.header = feature.value\n          column.index = columns.length\n          columns.push(column)\n          if (this.hasHeaders) {\n            // Don't need header cells for tables with no column features\n            column.headerCell = this.headers[this.headers.length - 1].cells[columns.length - 1]\n          }\n        }\n      } else {\n        // Last level, last row feature, will have a group consisting of a cell and a title cell\n        cellGroup.titleCell = currentFeature.createRowTitleCell(\n          feature.value,\n          this.features.firstColumnFeature && this.features.firstColumnFeature.size ? this.features.firstColumnFeature.size : 1\n        )\n        let group = {\n          cell: cellGroup,\n          titleCell: cellGroup.titleCell\n        }\n        groups.push(group)\n      }\n    }\n    if (currentFeature.formsRow) {\n      return groups\n    }\n    return columns\n  }\n\n  /**\n   * Creates an array of header cell rows.\n   * This is a recursive function.\n   * @param {NodeGroup} tree - A tree of morphemes.\n   * @param {Row[]} headers - An array of rows with header cells.\n   * @param {number} currentLevel - Current recursion level.\n   * @returns {Array} A two-dimensional array of header cell rows.\n   */\n  constructHeaders (tree = this.tree, headers = [], currentLevel = 0) {\n    let currentFeature = this.features.columnFeatures[currentLevel]\n\n    let cells = []\n    for (let [index, feature] of currentFeature.getOrderedFeatures(tree.ancestorFeatures).entries()) {\n      let cellGroup = tree.subgroups[index]\n\n      // Iterate over all column features (features that form columns)\n      if (currentLevel < this.features.columnFeatures.length - 1) {\n        let subCells = this.constructHeaders(cellGroup, headers, currentLevel + 1)\n\n        let columnSpan = 0\n        for (let cell of subCells) {\n          columnSpan += cell.span\n        }\n\n        // let headerCell = new HeaderCell(feature.value, currentFeature, columnSpan)\n        let headerCell = currentFeature.createHeaderCell(feature.value, columnSpan)\n        headerCell.children = subCells\n        for (let cell of subCells) {\n          cell.parent = headerCell\n        }\n\n        if (!headers[currentLevel]) {\n          headers[currentLevel] = new Row()\n        }\n        headers[currentLevel].titleCell = currentFeature.createRowTitleCell(\n          this.messages.get(currentFeature.groupTitle), this.features.firstColumnFeature.size)\n\n        headers[currentLevel].add(headerCell)\n        cells.push(headerCell)\n      } else {\n        // Last level\n        let headerCell = currentFeature.createHeaderCell(feature.value)\n\n        if (!headers[currentLevel]) {\n          headers[currentLevel] = new Row()\n        }\n\n        headers[currentLevel].add(headerCell)\n        headers[currentLevel].titleCell = currentFeature.createRowTitleCell(\n          this.messages.get(currentFeature.groupTitle), this.features.firstColumnFeature.size)\n        cells.push(headerCell)\n      }\n    }\n    if (currentLevel === 0) {\n      return headers\n    } else {\n      return cells\n    }\n  }\n\n  /**\n   * Creates an array of rows by parsing an array of columns.\n   * @returns {Row[]} An array of rows.\n   */\n  constructRows () {\n    let rows = []\n    for (let rowIndex = 0; rowIndex < this.dataRowQty; rowIndex++) {\n      rows[rowIndex] = new Row()\n      rows[rowIndex].titleCell = this.columns[0].cells[rowIndex].titleCell\n      for (let columnIndex = 0; columnIndex < this.dataColumnQty; columnIndex++) {\n        rows[rowIndex].add(this.columns[columnIndex].cells[rowIndex])\n      }\n    }\n    let filtered = []\n    for (let [index, row] of rows.entries()) {\n      if (!row.empty) {\n        filtered.push(row)\n      } else {\n        /*\n        This row is empty and will be removed. If it is a first row in a group,\n        parents of its titleCell shall be moved to the next row, if that row belongs to the same group\n        */\n        if (row.firstInGroup && index + 1 < rows.length && !rows[index + 1].firstInGroup) {\n          rows[index + 1].titleCell.parent = row.titleCell.parent\n        }\n      }\n    }\n    return filtered\n  }\n\n  /**\n   * Hides empty columns in a table.\n   */\n  hideEmptyColumns () {\n    for (let column of this.columns) {\n      if (column.empty) {\n        column.hide()\n      }\n    }\n    this.options.emptyColumnsHidden = true\n  }\n\n  /**\n   * Show all empty columns that were previously hidden.\n   */\n  showEmptyColumns () {\n    for (let column of this.columns) {\n      if (column.hidden) {\n        column.show()\n      }\n    }\n    this.options.emptyColumnsHidden = false\n  }\n\n  /**\n   * Checks wither a table can be collapsed\n   * @return {boolean} True if a table can collapse, false otherwise\n   * @private\n   */\n  _canCollapse () {\n    let colsWithMatches = 0\n    if (this.headers.length > 0) {\n      for (let headerCell of this.headers[0].cells) {\n        if (headerCell.columns.some(column => column.suffixMatches)) {\n          colsWithMatches++\n        }\n      }\n    }\n    // A table can collapse if it has all columns with matches, but not every column has matches in it.\n    return colsWithMatches > 0 && colsWithMatches < this.headers[0].cells.length\n  }\n\n  /**\n   * Hide groups that have no morpheme matches.\n   */\n  hideNoSuffixMatchesGroups () {\n    for (let headerCell of this.headers[0].cells) {\n      let matches = !!headerCell.columns.find(column => column.suffixMatches)\n      if (!matches) {\n        for (let column of headerCell.columns) {\n          column.hide()\n        }\n      }\n    }\n    this.options.noSuffixMatchesHidden = true\n  }\n\n  /**\n   * Show groups that have no suffix matches.\n   */\n  showNoSuffixMatchesGroups () {\n    for (let column of this.columns) {\n      column.show()\n    }\n    if (this.options.emptyColumnsHidden) {\n      this.hideEmptyColumns()\n    }\n    this.options.noSuffixMatchesHidden = false\n  }\n}\n","import { Constants, LanguageModelFactory as LMF } from 'alpheios-data-models'\nimport ViewSet from './view-set.js'\nimport LatinViewSet from '../lang/latin/latin-view-set.js'\nimport GreekViewSet from '../lang/greek/greek-view-set.js'\n\nexport default class ViewSetFactory {\n  static create (homonym, locale) {\n    let viewSet\n    try {\n      let Constructor = this.getConstructor(homonym.languageID)\n      viewSet = new Constructor(homonym, locale)\n    } catch (e) {\n      console.error(`Cannot build inflection tables: ${e}`)\n      // Create an empty ViewSet with no inflection data\n      viewSet = new ViewSet()\n    }\n    return viewSet\n  }\n\n  static hasInflectionsEnabled (languageID) {\n    return LMF.getLanguageModel(languageID).canInflect()\n  }\n\n  static getConstructor (languageID) {\n    switch (languageID) {\n      case Constants.LANG_LATIN:\n        return LatinViewSet\n      case Constants.LANG_GREEK:\n        return GreekViewSet\n      default:\n        return ViewSet\n    }\n  }\n\n  static getStandardForm (languageID, options, locale) {\n    return this.getConstructor(languageID).getStandardForm(options, locale)\n  }\n}\n","import { LanguageModelFactory } from 'alpheios-data-models'\nimport LanguageDatasetFactory from '../../lib/language-dataset-factory.js'\n\n/**\n * A set of inflection table views that represent all possible forms of inflection data. A new ViewSet instance\n * mast be created for each new inflection data piece.\n */\nexport default class ViewSet {\n  /**\n   * @param {Homonym} homonym - Data about inflections we need to build views for\n   * @param {string} locale - A locale's IETF language tag (ex. `en-US`)\n   */\n  constructor (homonym = undefined, locale = 'en-US') {\n    this.homonym = homonym\n    this.locale = locale\n    this.matchingViews = []\n    this.matchingViewsMap = new Map()\n    this.inflectionData = null\n    this.enabled = false\n\n    if (this.homonym) {\n      this.languageID = homonym.languageID\n      this.dataset = LanguageDatasetFactory.getDataset(homonym.languageID)\n\n      /**\n       * Whether inflections are enabled for the homonym's language\n       */\n      this.enabled = LanguageModelFactory.getLanguageModel(homonym.languageID).canInflect()\n\n      if (this.enabled) {\n        for (let lexeme of homonym.lexemes) {\n          for (let inflection of lexeme.inflections) {\n            // Inflections are grouped by part of speech\n            inflection = this.dataset.setInflectionData(inflection, lexeme.lemma)\n          }\n        }\n\n        this.matchingViews.push(...this.constructor.views.reduce(\n          (acc, view) => acc.concat(...view.getMatchingInstances(this.homonym, this.locale)), []))\n        this.updateMatchingViewsMap(this.matchingViews)\n      }\n    }\n  }\n  /**\n   * Returns a list of views available within a view set. Should be redefined in descendant classes.\n   * @return {View[]} A list of views available within the view set.\n   */\n  static get views () {\n    return []\n  }\n\n  get partsOfSpeech () {\n    return Array.from(this.matchingViewsMap.keys())\n  }\n\n  get hasMatchingViews () {\n    return this.matchingViewsMap.size > 0\n  }\n\n  updateMatchingViewsMap (views) {\n    for (const view of views) {\n      if (!this.matchingViewsMap.has(view.partOfSpeech)) {\n        this.matchingViewsMap.set(view.partOfSpeech, [])\n      }\n      let storedInstances = this.matchingViewsMap.get(view.partOfSpeech)\n      // Filter out instances that are already stored in a view set\n      const isNew = !storedInstances.find(v => v.sameAs(view))\n      if (isNew) {\n        storedInstances.push(view)\n      }\n    }\n  }\n\n  /**\n   * Returns all matching views available, or matching views available only for a particular part of speech.\n   * Views are sorted according to sorting rules defined for each part of speech.\n   * Each view might have linked views specified within a view class. Those view will be added after\n   * an original view\n   * @param {string | undefined} partOfSpeech - A part of speech for which views should be returned.\n   * If not specify, will result in views returned for all parts of speech available for ViewSet's inflection data.\n   * @return {View[]}\n   */\n  getViews (partOfSpeech = undefined) {\n    if (partOfSpeech) {\n      // Return views for a particular part of speech\n      return this.matchingViewsMap.has(partOfSpeech) ? this.matchingViewsMap.get(partOfSpeech) : []\n    } else {\n      // Return all matching views\n      return Array.from(this.matchingViewsMap.values()).reduce((acc, views) => acc.concat(...views), [])\n    }\n  }\n\n  updateMessages (messages) {\n    this.messages = messages\n    for (let view of this.matchingViews) {\n      view.updateMessages(messages)\n    }\n  }\n\n  setLocale (locale) {\n    for (let view of this.matchingViews) {\n      view.setLocale(locale)\n    }\n  }\n\n  static getViewByID (viewID) {\n    return this.views.find(v => v.viewID === viewID)\n  }\n\n  static getStandardForm (options, locale) {\n    if (!options || !options.viewID) {\n      throw new Error(`Obligatory options property, \"viewID\", is missing`)\n    }\n    let view = this.getViewByID(options.viewID)\n    return view ? view.getStandardFormInstance(options, locale) : null\n  }\n}\n","import { Feature, Inflection, Homonym, LanguageModelFactory } from 'alpheios-data-models'\nimport LDF from '../../lib/language-dataset-factory.js'\nimport L10n from '../../l10n/l10n.js'\nimport WideView from './wide-view'\nimport Form from '@lib/form.js'\n\n/**\n * Represents a single view.\n */\nexport default class View {\n  /**\n   * Initializes a View object with options. There is at least one view per part of speech,\n   * but there could be several views for the same part of speech that show different table representation of a view.\n   * @param {Homonym} homonym - A homonym\n   * @param {InflectionSet} inflectionSet - An inflection data object.\n   * @param {string} locale - A locale for serving localized messages. If none provided, a default language will be used.\n   */\n  constructor (homonym, inflectionSet, locale = L10n.defaultLocale) {\n    this.homonym = homonym\n    this.inflectionData = inflectionSet\n    this.messages = L10n.getMessages(locale)\n    this.pageHeader = {}\n    // A view can be rendered for different parts of speech. This is a part of speech this view currently uses\n    this.partOfSpeech = this.constructor.mainPartOfSpeech\n\n    // An HTML element where this view is rendered\n    this.container = undefined\n\n    // Must be implemented in a descendant\n\n    // A unique ID of a view instance. Can be used as a value in view selectors. Should consist of lowercase letters,\n    // numbers, and underscores only.\n    this.id = 'base_view'\n    this.name = 'base view'\n    this.title = 'Base View'\n\n    // Indicates whether this view has a pre-rendered table, such as in case with Greek paradigms\n    this.hasPrerenderedTables = this.constructor.hasPrerenderedTables\n\n    if (!this.constructor.hasPrerenderedTables) {\n      this.isImplemented = this.inflectionData.isImplemented\n    } else {\n      this.isImplemented = true\n    }\n\n    this.forms = new Set()\n    this.table = {\n      options: {}\n    }\n    this.wideView = new WideView()\n\n    /**\n     * Whether this view has any credits\n     * @type {boolean}\n     */\n    this.hasCredits = false\n    /**\n     * A text of a credits string\n     * @type {string}\n     */\n    this.creditsText = ''\n\n    /**\n     * An array of views that should be shown below the current view by the UI component.\n     * It is view's responsibility to create and initialize them.\n     * @type {View[]}\n     */\n    this.linkedViews = []\n\n    this.isRendered = false\n  }\n\n  static get viewID () {\n    return 'base_view'\n  }\n\n  /**\n   * Defines a language ID of a view. Should be redefined in child classes.\n   * @return {symbol}\n   */\n  static get languageID () {\n    return Symbol('Undefined language')\n  }\n\n  /**\n   * Defines one or several parts of speech of a view.\n   * These are parts of speech for which a view will be rendered.\n   * Should be redefined in child classes.\n   * @return {string[] | []} A list of part of speech names.\n   * An empty array if not defined.\n   */\n  static get partsOfSpeech () {\n    return []\n  }\n\n  /**\n   * Returns a main part of speech of a view: a part of speech for which this view is defined.\n   * It is always the first view in parts of speech array. If no parts of speech defined,\n   * returns an empty string.\n   * @return {string} A main part of speech name. An empty string in not defined.\n   */\n  static get mainPartOfSpeech () {\n    return this.partsOfSpeech.length > 0 ? this.partsOfSpeech[0] : ''\n  }\n\n  /**\n   * Returns a language dataset for a view data.\n   * @return {LanguageDataset}\n   */\n  static get dataset () {\n    return LDF.getDataset(this.languageID)\n  }\n\n  static get model () {\n    return LanguageModelFactory.getLanguageModel(this.languageID)\n  }\n\n  static get datasetConsts () {\n    return this.dataset.constructor.constants\n  }\n  /**\n   * Defines an inflection type (Suffix/Form) of a view. Should be redefined in child classes.\n   * @return {Suffix|Form|Paradigm|undefined}\n   */\n  static get inflectionType () {\n  }\n\n  static get hasPrerenderedTables () {\n    // Usually views do not have pre-rendered tables\n    return false\n  }\n\n  /**\n   * Checks wither an inflection table has any data.\n   * If view has no pre-rendered tables, a presence of table object with correct row items is checked.\n   * @return {boolean} True if table has no inflection data, false otherwise.\n   */\n  get isEmpty () {\n    return !this.hasPrerenderedTables && (!this.table || !this.table.rows || this.table.rows.length === 0)\n  }\n\n  /**\n   * Sets a title of a view.\n   * This method is chainable.\n   * @param {string} title - A title to set.\n   * @return {View} A view instance (for chaining).\n   */\n  setTitle (title) {\n    this.title = title\n    return this\n  }\n\n  sameAs (view) {\n    return this.id === view.id\n  }\n\n  /**\n   * Determines wither this view can be used to display an inflection table of any data\n   * within an `inflectionData` object.\n   * By default a view can be used if a view has the same language as homonym\n   * and homonym's inflections has at least one with a part of speech that matches view\n   * @param {symbol} languageID - A language ID of an inflection data\n   * @param {Inflection[]} inflections - An array of inflections\n   * @return {boolean}\n   */\n  static matchFilter (languageID, inflections) {\n    // return (this.languageID === inflection.languageID && this.partsOfSpeech.includes(inflection[Feature.types.part].value))\n    // Disable multiple parts of speech for now\n    return (this.languageID === languageID && inflections.some(i => i[Feature.types.part].value === this.mainPartOfSpeech))\n  }\n\n  /**\n   * test to see if a view is enabled for a specific inflection\n   * @param {Inflection[]} inflection\n   * @return {boolean} true if the view should be shown false if not\n   */\n  static enabledForInflection (inflection) {\n    // default returns true\n    return true\n  }\n\n  get locale () {\n    return this.messages.locale\n  }\n\n  setLocale (locale) {\n    if (this.locale !== locale) {\n      this.messages = L10n.getMessages(locale)\n    }\n    return this\n  }\n\n  /**\n   * Checks whether this view can be and needs to be rendered (i.e. construct inflection table structures).\n   * Views that don't need to be rendered are the ones that are not implemented and the ones tha have\n   * tables already pre-rendered (i.e. Greek paradigm tables that are stored in JSON files).\n   * @return {boolean}\n   */\n  get isRenderable () {\n    return this.isImplemented && !this.hasPrerenderedTables\n  }\n\n  /**\n   * Whether this inflection table can be expanded or collapsed.\n   * It usually can't if it has no suffix no matches.\n   * In this cause, a full table will always be shown.\n   * @return {boolean}\n   */\n  get canCollapse () {\n    return !this.hasPrerenderedTables && this.table.canCollapse\n  }\n\n  /**\n   * Renders an inflection table view. Done once per view.\n   * @param {Object} options - Render options\n   */\n  render (options = {\n    emptyColumnsHidden: true,\n    noSuffixMatchesHidden: true\n  }) {\n    if (!this.isRendered && this.isRenderable) {\n      this.footnotes = this.getFootnotes()\n      this.table.messages = this.messages\n      this.morphemes = this.getMorphemes()\n\n      this.table.construct(this.morphemes, options)\n      this.wideView.render(this.table)\n\n      // Render linked views (if any)\n      for (const view of this.linkedViews) {\n        view.render()\n      }\n      this.isRendered = true\n    }\n    return this\n  }\n\n  /**\n   * A compatibility function to get morphemes, either suffixes or forms, depending on the view type.\n   * By default, it returns suffixes\n   */\n  getMorphemes () {\n    return this.inflectionData.types.has(this.constructor.inflectionType)\n      ? this.inflectionData.types.get(this.constructor.inflectionType).items\n      : []\n  }\n\n  /**\n   * A compatibility function to get footnotes for either suffixes or forms, depending on the view type\n   */\n  getFootnotes () {\n    return this.inflectionData.types.has(this.constructor.inflectionType)\n      ? this.inflectionData.types.get(this.constructor.inflectionType).footnotesMap\n      : new Map()\n  }\n\n  get isEmptyColumnsHidden () {\n    return this.table.options.emptyColumnsHidden\n  }\n\n  /**\n   * Hide or show column groups with no morphemes depending on the `value`.\n   * @param {boolean} value - Whether to hide or show column groups with no morphemes.\n   *                  true - hide groups with no morphemes in them;\n   *                  false - show groups with no morphemes in them.\n   */\n  emptyColumnsHidden (value) {\n    // Pre-rendered tables cannot collapse and expand\n    if (!this.hasPrerenderedTables && this.table.options.emptyColumnsHidden !== value) {\n      // If settings were actually changed\n      if (value) {\n        this.table.hideEmptyColumns()\n      } else {\n        this.table.showEmptyColumns()\n      }\n    }\n    return this\n  }\n\n  get isNoSuffixMatchesGroupsHidden () {\n    return this.table.options.noSuffixMatchesHidden\n  }\n\n  /**\n   * Hide or show column groups with no morpheme matches depending on the `value`.\n   * @param {boolean} value - Whether to hide or show groups with not suffix matches.\n   *                  true - hide groups with no suffix matches;\n   *                  false - show groups with no suffix matches.\n   */\n  noSuffixMatchesGroupsHidden (value) {\n    // Pre-rendered tables cannot collapse and expand\n    if (!this.hasPrerenderedTables && this.table.options.noSuffixMatchesHidden !== value) {\n      // If settings were actually changed\n      if (value) {\n        if (this.table.canCollapse) {\n          this.table.hideNoSuffixMatchesGroups()\n        }\n      } else {\n        this.table.showNoSuffixMatchesGroups()\n      }\n    }\n    return this\n  }\n\n  highlightRowAndColumn (cell) {\n    cell.highlightRowAndColumn()\n  }\n\n  /**\n   * A utility function to convert a string to a Sentence case.\n   * @param {string} string - A source string.\n   * @return {string} A string capitalized to a Sentence case.\n   */\n  static toSentenceCase (string) {\n    string = string.toLowerCase()\n    return string[0].toUpperCase() + string.substr(1)\n  }\n\n  /**\n   * A utility function to convert a string to a Title Case.\n   * @param {string} string - A source string.\n   * @return {string} A string capitalized to a Title Case.\n   */\n  static toTitleCase (string) {\n    return string\n      .toLowerCase()\n      .split(' ')\n      .map(word => word.length >= 1 ? `${word[0].toUpperCase()}${word.substr(1)}` : '')\n      .join(' ')\n  }\n\n  /**\n   * Return inflection that this view will use to retrieve inflection data.\n   * @param {Inflection[]} inflections\n   * @return {Inflection[]}\n   */\n  static getRelatedInflections (inflections) {\n    return inflections.filter(i => i[Feature.types.part].value === this.mainPartOfSpeech)\n  }\n\n  static getInflectionsData (homonym, options) {\n    // Select inflections this view needs\n    return this.dataset.createInflectionSet(this.mainPartOfSpeech, this.getRelatedInflections(homonym.inflections), options)\n  }\n  /**\n   * Finds out what views match inflection data and return initialized instances of those views.\n   * By default only one instance of the view is returned, by views can override this method\n   * to return multiple views if necessary (e.g. paradigm view can return multiple instances of the view\n   * with different data).\n   * @param {Inflection} homonym - An inflection for which matching instances to be found.\n   * @param {string} locale\n   * @return {View[] | []} Array of view instances or an empty array if view instance does not match inflection data.\n   */\n  static getMatchingInstances (homonym, locale) {\n    if (this.matchFilter(homonym.languageID, homonym.inflections)) {\n      let inflectionData = this.getInflectionsData(homonym)\n\n      if (inflectionData.types.has(this.inflectionType)) {\n        // There is some inflection data found for the view's morpheme type\n        let view = new this(homonym, inflectionData, locale)\n        return [view]\n      }\n    }\n    return []\n  }\n\n  static createStandardFormHomonym (options) {\n    if (this.inflectionType === Form && !options.form) {\n      throw new Error(`Obligatory options property, \"form\", is missing`)\n    }\n    const stem = options.form ? options.form : 'stem'\n    const suffix = options.suffix ? options.suffix : 'suffix'\n    let inflection = new Inflection(stem, this.languageID, suffix)\n    inflection.addFeature(new Feature(Feature.types.part, this.mainPartOfSpeech, this.languageID))\n    let homonym = Homonym.createSimpleForm(stem, this.languageID, [inflection])\n    inflection = this.dataset.setInflectionData(inflection, homonym.lexemes[0].lemma)\n    return homonym\n  }\n\n  static getStandardFormInstance (options, locale = 'en-US') {\n    let homonym = this.createStandardFormHomonym(options)\n    let inflectionData = this.getInflectionsData(homonym, { findMatches: false })\n    // Standard form tables should have no suffix matches columns visible\n    let view = new this(homonym, inflectionData, locale)\n    if (options.title) {\n      view.setTitle(options.title)\n    }\n    return view\n  }\n}\n","import RowTitleCell from './row-title-cell'\n\n/**\n * A representation of a table that is shown on wide screens (desktops).\n */\nexport default class WideView {\n  /**\n   * Initializes a wide view.\n   */\n  constructor () {\n    this.rows = [] // To store rows of view's inflection table\n\n    // Wither this view is collapsed in a UI component\n    this.collapsed = false\n  }\n\n  /**\n   * Calculates a number of visible columns in this view.\n   * @returns {number} A number of visible columns.\n   */\n  get visibleColumnQty () {\n    let qty = 0\n    for (let column of this.table.columns) {\n      if (!column.hidden) {\n        qty++\n      }\n    }\n    return qty\n  }\n\n  get titleColumnQty () {\n    return this.table.titleColumnQty\n  }\n\n  /**\n   * Renders a table in a size suitable for Vue.js display\n   * @param {Table} table - An inflection table object.\n   * @return {{rows: Array}}\n   */\n  render (table) {\n    this.rows = []\n    this.table = table\n    for (let row of table.headers) {\n      let cells = []\n      cells.push(row.titleCell)\n      for (let cell of row.cells) {\n        cells.push(cell)\n      }\n      this.rows.push({ cells: cells })\n    }\n\n    for (let row of table.rows) {\n      let cells = []\n      let titleCells = row.titleCell.hierarchyList\n      if (titleCells.length < this.table.titleColumnQty) {\n        cells.push(RowTitleCell.placeholder(this.titleColumnQty - titleCells.length))\n      }\n      for (let titleCell of titleCells) {\n        cells.push(titleCell)\n      }\n\n      for (let cell of row.cells) {\n        cells.push(cell)\n      }\n      this.rows.push({ cells: cells })\n    }\n  }\n}\n","/* (ignored) */","/* (ignored) */","module.exports = __WEBPACK_EXTERNAL_MODULE_alpheios_data_models__;","module.exports = __WEBPACK_EXTERNAL_MODULE_intl_messageformat__;"],"sourceRoot":""}