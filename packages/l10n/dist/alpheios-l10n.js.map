{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///../node_modules/intl-format-cache/src/index.ts","webpack:///../node_modules/intl-messageformat-parser/src/index.ts","webpack:///../node_modules/intl-messageformat-parser/src/normalize.ts","webpack:///../node_modules/intl-messageformat-parser/src/parser.ts","webpack:///../node_modules/intl-messageformat-parser/src/skeleton.ts","webpack:///../node_modules/intl-messageformat-parser/src/types.ts","webpack:///../node_modules/intl-messageformat/src/core.ts","webpack:///../node_modules/intl-messageformat/src/error.ts","webpack:///../node_modules/intl-messageformat/src/formatters.ts","webpack:///../node_modules/intl-messageformat/src/index.ts","webpack:///../index.js","webpack:///./l10n.js","webpack:///./message-bundle.js","webpack:///./message.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/startup"],"names":[],"mappings":"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M,CAAC,IAAI,OAAX,MAAM,EACD,aAAa,CACd,GAAG,CAAC,KAAK,EACT,OAAO,EACP,UAAU,EACV,OAAO,EACP,MAAM,EACL,KAAgB,GAAG,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CACrC,EACD;YACF,SAAS;SACV;KACF;IACD,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC;AAC9B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClSD;;;;EAIE;AAEqC;AACV;AACN;AACC;AACxB,iEAAe,0CAAiB,EAAC;;;;;;;;;;;;;;;;;;;;;;;ACVD;AACmB;;;;;;;;;;;;;;;;;;;;ACDH;;AAEhD;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,0BAA0B,yDAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpGsC;AACtC;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA,+GAA+G,MAAM,IAAI,OAAO;AAChI;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,0BAA0B,qDAAO;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM;AACN,aAAa,OAAO;AACpB,UAAU,QAAQ;AAClB;AACA;AACA,eAAe,OAAO;AACtB;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mDAAmD,UAAU,mCAAmC,aAAa;AAC7G;AACA;;AAEA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA,eAAe;AACf;AACA,iDAAiD;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9KkD;;AAElD;AACA;AACA;AACe;AACf;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0BAA0B,uDAAiB;AAC3C,wBAAwB,uDAAiB;AACzC;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM;AACN,eAAe,OAAO;AACtB;AACA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,MAAM;AACN,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;;;;;;UC3EA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"alpheios-l10n.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn ","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction getCacheId(inputs: any[]) {\n  return JSON.stringify(\n    inputs.map(input =>\n      input && typeof input === 'object' ? orderedProps(input) : input\n    )\n  );\n}\n\nfunction orderedProps(obj: Record<string, any>) {\n  return Object.keys(obj)\n    .sort()\n    .map(k => ({[k]: obj[k]}));\n}\n\nexport type CacheValue =\n  | Intl.NumberFormat\n  | Intl.DateTimeFormat\n  | Intl.PluralRules\n  | any;\n\nexport interface MemoizeFormatConstructorFn {\n  <T extends {new (...args: any[]): any}>(\n    constructor: T,\n    cache?: Record<string, CacheValue>\n  ): (...args: ConstructorParameters<T>) => any;\n}\n\nconst memoizeFormatConstructor: MemoizeFormatConstructorFn = (\n  FormatConstructor: any,\n  cache: Record<string, any> = {}\n) => (...args: any[]) => {\n  const cacheId = getCacheId(args);\n  let format = cacheId && cache[cacheId];\n  if (!format) {\n    format = new (FormatConstructor as any)(...args);\n    if (cacheId) {\n      cache[cacheId] = format;\n    }\n  }\n\n  return format;\n};\n\nexport default memoizeFormatConstructor;\n","import {pegParse, IParseOptions} from './parser';\nimport {Options, MessageFormatElement} from './types';\nimport {normalizeHashtagInPlural} from './normalize';\nexport * from './types';\nexport * from './parser';\nexport * from './skeleton';\n\nexport type ParseOptions = Options & IParseOptions;\n\nexport function parse(\n  input: string,\n  opts?: ParseOptions\n): MessageFormatElement[] {\n  const els = pegParse(input, opts);\n  if (!opts || opts.normalizeHashtagInPlural !== false) {\n    normalizeHashtagInPlural(els);\n  }\n  return els;\n}\n","import {\n  MessageFormatElement,\n  isPluralElement,\n  isLiteralElement,\n  LiteralElement,\n  isSelectElement,\n} from './types';\nimport {pegParse} from './parser';\n\nconst PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els: MessageFormatElement[]) {\n  els.forEach(el => {\n    // If we're encountering a plural el\n    if (!isPluralElement(el) && !isSelectElement(el)) {\n      return;\n    }\n    // Go down the options and search for # in any literal element\n    Object.keys(el.options).forEach(id => {\n      const opt = el.options[id];\n      // If we got a match, we have to split this\n      // and inject a NumberElement in the middle\n      let matchingLiteralElIndex = -1;\n      let literalEl: LiteralElement | undefined = undefined;\n      for (let i = 0; i < opt.value.length; i++) {\n        const el = opt.value[i] as LiteralElement;\n        if (isLiteralElement(el) && PLURAL_HASHTAG_REGEX.test(el.value)) {\n          matchingLiteralElIndex = i;\n          literalEl = el;\n          break;\n        }\n      }\n\n      if (literalEl) {\n        const newValue = literalEl.value.replace(\n          PLURAL_HASHTAG_REGEX,\n          `$1{${el.value}, number}`\n        );\n        const newEls = pegParse(newValue);\n        opt.value.splice(matchingLiteralElIndex, 1, ...newEls);\n      }\n      normalizeHashtagInPlural(opt.value);\n    });\n  });\n}\n","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\n\n\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.6 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\n\n\nimport {\n    ArgumentElement,\n    DateElement,\n    DateTimeSkeleton,\n    LiteralElement,\n    MessageFormatElement,\n    NumberElement,\n    NumberSkeleton,\n    PluralElement,\n    PluralOrSelectOption,\n    PoundElement,\n    SelectElement,\n    SKELETON_TYPE,\n    TagElement,\n    TimeElement,\n    TYPE,\n} from './types'\nexport interface IFilePosition {\n  offset: number;\n  line: number;\n  column: number;\n}\n\nexport interface IFileRange {\n  start: IFilePosition;\n  end: IFilePosition;\n}\n\nexport interface ILiteralExpectation {\n  type: \"literal\";\n  text: string;\n  ignoreCase: boolean;\n}\n\nexport interface IClassParts extends Array<string | IClassParts> {}\n\nexport interface IClassExpectation {\n  type: \"class\";\n  parts: IClassParts;\n  inverted: boolean;\n  ignoreCase: boolean;\n}\n\nexport interface IAnyExpectation {\n  type: \"any\";\n}\n\nexport interface IEndExpectation {\n  type: \"end\";\n}\n\nexport interface IOtherExpectation {\n  type: \"other\";\n  description: string;\n}\n\nexport type Expectation = ILiteralExpectation | IClassExpectation | IAnyExpectation | IEndExpectation | IOtherExpectation;\n\nexport class SyntaxError extends Error {\n  public static buildMessage(expected: Expectation[], found: string | null) {\n    function hex(ch: string): string {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s: string): string {\n      return s\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\"/g,  \"\\\\\\\"\")\n        .replace(/\\0/g, \"\\\\0\")\n        .replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\")\n        .replace(/[\\x00-\\x0F]/g,            (ch) => \"\\\\x0\" + hex(ch) )\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, (ch) => \"\\\\x\"  + hex(ch) );\n    }\n\n    function classEscape(s: string): string {\n      return s\n        .replace(/\\\\/g, \"\\\\\\\\\")\n        .replace(/\\]/g, \"\\\\]\")\n        .replace(/\\^/g, \"\\\\^\")\n        .replace(/-/g,  \"\\\\-\")\n        .replace(/\\0/g, \"\\\\0\")\n        .replace(/\\t/g, \"\\\\t\")\n        .replace(/\\n/g, \"\\\\n\")\n        .replace(/\\r/g, \"\\\\r\")\n        .replace(/[\\x00-\\x0F]/g,            (ch) => \"\\\\x0\" + hex(ch) )\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, (ch) => \"\\\\x\"  + hex(ch) );\n    }\n\n    function describeExpectation(expectation: Expectation) {\n      switch (expectation.type) {\n        case \"literal\":\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        case \"class\":\n          const escapedParts = expectation.parts.map((part) => {\n            return Array.isArray(part)\n              ? classEscape(part[0] as string) + \"-\" + classEscape(part[1] as string)\n              : classEscape(part);\n          });\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        case \"any\":\n          return \"any character\";\n        case \"end\":\n          return \"end of input\";\n        case \"other\":\n          return expectation.description;\n      }\n    }\n\n    function describeExpected(expected1: Expectation[]) {\n      const descriptions = expected1.map(describeExpectation);\n      let i: number;\n      let j: number;\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found1: string | null) {\n      return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  }\n\n  public message: string;\n  public expected: Expectation[];\n  public found: string | null;\n  public location: IFileRange;\n  public name: string;\n\n  constructor(message: string, expected: Expectation[], found: string | null, location: IFileRange) {\n    super();\n    this.message = message;\n    this.expected = expected;\n    this.found = found;\n    this.location = location;\n    this.name = \"SyntaxError\";\n\n    if (typeof (Error as any).captureStackTrace === \"function\") {\n      (Error as any).captureStackTrace(this, SyntaxError);\n    }\n  }\n}\n\nfunction peg$parse(input: string, options?: IParseOptions) {\n  options = options !== undefined ? options : {};\n\n  const peg$FAILED: Readonly<{}> = {};\n\n  const peg$startRuleFunctions: {[id: string]: any} = { start: peg$parsestart };\n  let peg$startRuleFunction: () => any = peg$parsestart;\n\n  const peg$c0 = function(parts: any): any {\n          return parts.join('');\n      };\n  const peg$c1 = function(messageText: any): any {\n          return {\n              type : TYPE.literal,\n              value: messageText,\n              ...insertLocation()\n          };\n      };\n  const peg$c2 = \"#\";\n  const peg$c3 = peg$literalExpectation(\"#\", false);\n  const peg$c4 = function(): any {\n      return {\n          type: TYPE.pound,\n          ...insertLocation()\n      };\n  };\n  const peg$c5 = peg$otherExpectation(\"tagElement\");\n  const peg$c6 = \"<\";\n  const peg$c7 = peg$literalExpectation(\"<\", false);\n  const peg$c8 = \"/>\";\n  const peg$c9 = peg$literalExpectation(\"/>\", false);\n  const peg$c10 = function(value: any): any { \n          return {\n              type: TYPE.literal,\n              value: value.join(''),\n              ...insertLocation()\n          }\n      };\n  const peg$c11 = function(open: any, children: any, close: any): any {\n          if (open !== close) {\n             error(`Mismatch tag \"${open}\" !== \"${close}\"`, location()) \n          }\n          return {\n              type: TYPE.tag,\n              value: open,\n              children,\n              ...insertLocation()\n          }\n      };\n  const peg$c12 = function(): any { messageCtx.push('openingTag'); return true; };\n  const peg$c13 = \">\";\n  const peg$c14 = peg$literalExpectation(\">\", false);\n  const peg$c15 = function(tag: any): any { messageCtx.pop(); return true; };\n  const peg$c16 = function(tag: any): any {\n      return tag\n  };\n  const peg$c17 = \"</\";\n  const peg$c18 = peg$literalExpectation(\"</\", false);\n  const peg$c19 = function(): any { messageCtx.push('closingTag'); return true; };\n  const peg$c20 = peg$otherExpectation(\"argumentElement\");\n  const peg$c21 = \"{\";\n  const peg$c22 = peg$literalExpectation(\"{\", false);\n  const peg$c23 = \"}\";\n  const peg$c24 = peg$literalExpectation(\"}\", false);\n  const peg$c25 = function(value: any): any {\n          return {\n              type: TYPE.argument,\n              value,\n              ...insertLocation()\n          }\n      };\n  const peg$c26 = peg$otherExpectation(\"numberSkeletonId\");\n  const peg$c27 = /^['\\/{}]/;\n  const peg$c28 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n  const peg$c29 = peg$anyExpectation();\n  const peg$c30 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n  const peg$c31 = \"/\";\n  const peg$c32 = peg$literalExpectation(\"/\", false);\n  const peg$c33 = function(option: any): any { return option; };\n  const peg$c34 = peg$otherExpectation(\"numberSkeletonToken\");\n  const peg$c35 = function(stem: any, options: any): any {\n          return {stem: stem, options};\n      };\n  const peg$c36 = function(tokens: any): any {\n          return {\n              type: SKELETON_TYPE.number,\n              tokens,\n              ...insertLocation()\n          }\n      };\n  const peg$c37 = \"::\";\n  const peg$c38 = peg$literalExpectation(\"::\", false);\n  const peg$c39 = function(skeleton: any): any { return skeleton; };\n  const peg$c40 = function(): any { messageCtx.push('numberArgStyle'); return true; };\n  const peg$c41 = function(style: any): any {\n            messageCtx.pop();\n            return style.replace(/\\s*$/, '');\n        };\n  const peg$c42 = \",\";\n  const peg$c43 = peg$literalExpectation(\",\", false);\n  const peg$c44 = \"number\";\n  const peg$c45 = peg$literalExpectation(\"number\", false);\n  const peg$c46 = function(value: any, type: any, style: any): any {\n          return {\n              type    : type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time,\n              style   : style && style[2],\n              value,\n              ...insertLocation()\n          };\n      };\n  const peg$c47 = \"'\";\n  const peg$c48 = peg$literalExpectation(\"'\", false);\n  const peg$c49 = /^[^']/;\n  const peg$c50 = peg$classExpectation([\"'\"], true, false);\n  const peg$c51 = /^[^a-zA-Z'{}]/;\n  const peg$c52 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n  const peg$c53 = /^[a-zA-Z]/;\n  const peg$c54 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n  const peg$c55 = function(pattern: any): any {\n          return {\n              type: SKELETON_TYPE.dateTime,\n              pattern,\n              ...insertLocation(),\n          }\n      };\n  const peg$c56 = function(): any { messageCtx.push('dateOrTimeArgStyle'); return true; };\n  const peg$c57 = \"date\";\n  const peg$c58 = peg$literalExpectation(\"date\", false);\n  const peg$c59 = \"time\";\n  const peg$c60 = peg$literalExpectation(\"time\", false);\n  const peg$c61 = \"plural\";\n  const peg$c62 = peg$literalExpectation(\"plural\", false);\n  const peg$c63 = \"selectordinal\";\n  const peg$c64 = peg$literalExpectation(\"selectordinal\", false);\n  const peg$c65 = \"offset:\";\n  const peg$c66 = peg$literalExpectation(\"offset:\", false);\n  const peg$c67 = function(value: any, pluralType: any, offset: any, options: any): any {\n          return {\n              type   : TYPE.plural,\n              pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal',\n              value,\n              offset : offset ? offset[2] : 0,\n              options: options.reduce((all, {id, value, location: optionLocation}) => {\n                  if (id in all) {\n                      error(`Duplicate option \"${id}\" in plural element: \"${text()}\"`, location())\n                  }\n                  all[id] = {\n                      value,\n                      location: optionLocation\n                  }\n                  return all\n              }, {}),\n              ...insertLocation()\n          };\n      };\n  const peg$c68 = \"select\";\n  const peg$c69 = peg$literalExpectation(\"select\", false);\n  const peg$c70 = function(value: any, options: any): any {\n          return {\n              type   : TYPE.select,\n              value,\n              options: options.reduce((all, {id, value, location: optionLocation}) => {\n                  if (id in all) {\n                      error(`Duplicate option \"${id}\" in select element: \"${text()}\"`, location())\n                  }\n                  all[id] = {\n                      value,\n                      location: optionLocation\n                  }\n                  return all\n              }, {}),\n              ...insertLocation()\n          };\n      };\n  const peg$c71 = \"=\";\n  const peg$c72 = peg$literalExpectation(\"=\", false);\n  const peg$c73 = function(id: any): any { messageCtx.push('select'); return true; };\n  const peg$c74 = function(id: any, value: any): any {\n          messageCtx.pop();\n          return {\n              id,\n              value,\n              ...insertLocation()\n          }\n      };\n  const peg$c75 = function(id: any): any { messageCtx.push('plural'); return true; };\n  const peg$c76 = function(id: any, value: any): any {\n          messageCtx.pop();\n          return {\n              id,\n              value,\n              ...insertLocation()\n          };\n      };\n  const peg$c77 = peg$otherExpectation(\"whitespace\");\n  const peg$c78 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n  const peg$c79 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n  const peg$c80 = peg$otherExpectation(\"syntax pattern\");\n  const peg$c81 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n  const peg$c82 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n  const peg$c83 = peg$otherExpectation(\"optional whitespace\");\n  const peg$c84 = peg$otherExpectation(\"number\");\n  const peg$c85 = \"-\";\n  const peg$c86 = peg$literalExpectation(\"-\", false);\n  const peg$c87 = function(negative: any, num: any): any {\n      return num\n          ? negative\n              ? -num\n              : num\n          : 0\n  };\n  const peg$c88 = peg$otherExpectation(\"apostrophe\");\n  const peg$c89 = peg$otherExpectation(\"double apostrophes\");\n  const peg$c90 = \"''\";\n  const peg$c91 = peg$literalExpectation(\"''\", false);\n  const peg$c92 = function(): any { return `'`; };\n  const peg$c93 = function(escapedChar: any, quotedChars: any): any {\n      return escapedChar + quotedChars.replace(`''`, `'`);\n  };\n  const peg$c94 = function(x: any): any {\n      return (\n          (ignoreTag() || x !== '<') &&\n          x !== '{' &&\n          !(isInPluralOption() && x === '#') &&\n          !(isNestedMessageText() && x === '}') &&\n          !(!ignoreTag() && isNestedMessageText() && x === '>')\n      );\n  };\n  const peg$c95 = \"\\n\";\n  const peg$c96 = peg$literalExpectation(\"\\n\", false);\n  const peg$c97 = function(x: any): any {\n      return x === '<' || x === '>' || x === '{' || x === '}' || (isInPluralOption() && x === '#');\n  };\n  const peg$c98 = peg$otherExpectation(\"argNameOrNumber\");\n  const peg$c99 = peg$otherExpectation(\"validTag\");\n  const peg$c100 = peg$otherExpectation(\"argNumber\");\n  const peg$c101 = \"0\";\n  const peg$c102 = peg$literalExpectation(\"0\", false);\n  const peg$c103 = function(): any { return 0 };\n  const peg$c104 = /^[1-9]/;\n  const peg$c105 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n  const peg$c106 = /^[0-9]/;\n  const peg$c107 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  const peg$c108 = function(digits: any): any {\n          return parseInt(digits.join(''), 10);\n      };\n  const peg$c109 = peg$otherExpectation(\"argName\");\n  const peg$c110 = peg$otherExpectation(\"tagName\");\n\n  let peg$currPos = 0;\n  let peg$savedPos = 0;\n  const peg$posDetailsCache = [{ line: 1, column: 1 }];\n  let peg$maxFailPos = 0;\n  let peg$maxFailExpected: Expectation[] = [];\n  let peg$silentFails = 0;\n\n  let peg$result;\n\n  if (options.startRule !== undefined) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text(): string {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location(): IFileRange {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description: string, location1?: IFileRange) {\n    location1 = location1 !== undefined\n      ? location1\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location1\n    );\n  }\n\n  function error(message: string, location1?: IFileRange) {\n    location1 = location1 !== undefined\n      ? location1\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location1);\n  }\n\n  function peg$literalExpectation(text1: string, ignoreCase: boolean): ILiteralExpectation {\n    return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts: IClassParts, inverted: boolean, ignoreCase: boolean): IClassExpectation {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation(): IAnyExpectation {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation(): IEndExpectation {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description: string): IOtherExpectation {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos: number) {\n    let details = peg$posDetailsCache[pos];\n    let p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos: number, endPos: number): IFileRange {\n    const startPosDetails = peg$computePosDetails(startPos);\n    const endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected1: Expectation) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected1);\n  }\n\n  function peg$buildSimpleError(message: string, location1: IFileRange) {\n    return new SyntaxError(message, [], \"\", location1);\n  }\n\n  function peg$buildStructuredError(expected1: Expectation[], found: string | null, location1: IFileRange) {\n    return new SyntaxError(\n      SyntaxError.buildMessage(expected1, found),\n      expected1,\n      found,\n      location1\n    );\n  }\n\n  function peg$parsestart(): MessageFormatElement[] {\n    let s0;\n\n    s0 = peg$parsemessage();\n\n    return s0;\n  }\n\n  function peg$parsemessage(): MessageFormatElement[] {\n    let s0, s1;\n\n    s0 = [];\n    s1 = peg$parsemessageElement();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsemessageElement();\n    }\n\n    return s0;\n  }\n\n  function peg$parsemessageElement(): any {\n    let s0;\n\n    s0 = peg$parseliteralElement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseargumentElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsesimpleFormatElement();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsepluralElement();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseselectElement();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsetagElement();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsepoundElement();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsemessageText(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsedoubleApostrophes();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parsequotedString();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseunquotedString();\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsequotedString();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseunquotedString();\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c0(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseliteralElement(): LiteralElement {\n    let s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsemessageText();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c1(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepoundElement(): PoundElement {\n    let s0, s1;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c2;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c3); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c4();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsetagElement(): TagElement {\n    let s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 60) {\n      s2 = peg$c6;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsevalidTag();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c8) {\n            s5 = peg$c8;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c9); }\n          }\n          if (s5 !== peg$FAILED) {\n            s2 = [s2, s3, s4, s5];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c10(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseopeningTag();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemessage();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseclosingTag();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c11(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseopeningTag(): any {\n    let s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 60) {\n      s1 = peg$c6;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c12();\n      if (s2) {\n        s2 = undefined;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsevalidTag();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s4 = peg$c13;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s5 = peg$c15(s3);\n            if (s5) {\n              s5 = undefined;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c16(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseclosingTag(): any {\n    let s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c17) {\n      s1 = peg$c17;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c19();\n      if (s2) {\n        s2 = undefined;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsevalidTag();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s4 = peg$c13;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s5 = peg$c15(s3);\n            if (s5) {\n              s5 = undefined;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c16(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseargumentElement(): ArgumentElement {\n    let s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseargNameOrNumber();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 125) {\n              s5 = peg$c23;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c24); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c25(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c20); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumberSkeletonId(): any {\n    let s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parsewhiteSpace();\n    if (s4 === peg$FAILED) {\n      if (peg$c27.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n    }\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = undefined;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n          if (peg$c27.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c28); }\n          }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = undefined;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c26); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumberSkeletonTokenOption(): any {\n    let s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s1 = peg$c31;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c32); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumberSkeletonId();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c33(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c30); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumberSkeletonToken(): any {\n    let s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumberSkeletonId();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parsenumberSkeletonTokenOption();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsenumberSkeletonTokenOption();\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c35(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumberSkeleton(): NumberSkeleton {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsenumberSkeletonToken();\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsenumberSkeletonToken();\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c36(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenumberArgStyle(): string | NumberSkeleton {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumberSkeleton();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s1 = peg$c40();\n      if (s1) {\n        s1 = undefined;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemessageText();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c41(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumberFormatElement(): any {\n    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseargNameOrNumber();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 6) === peg$c44) {\n                  s7 = peg$c44;\n                  peg$currPos += 6;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s10 = peg$c42;\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parse_();\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parsenumberArgStyle();\n                        if (s12 !== peg$FAILED) {\n                          s10 = [s10, s11, s12];\n                          s9 = s10;\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                          s11 = peg$c23;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c46(s3, s7, s9);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedateTimeSkeletonLiteral(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s1 = peg$c47;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsedoubleApostrophes();\n      if (s3 === peg$FAILED) {\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parsedoubleApostrophes();\n          if (s3 === peg$FAILED) {\n            if (peg$c49.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n            }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s3 = peg$c47;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c48); }\n        }\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = [];\n      s1 = peg$parsedoubleApostrophes();\n      if (s1 === peg$FAILED) {\n        if (peg$c51.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c52); }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          s1 = peg$parsedoubleApostrophes();\n          if (s1 === peg$FAILED) {\n            if (peg$c51.test(input.charAt(peg$currPos))) {\n              s1 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedateTimeSkeletonPattern(): any {\n    let s0, s1;\n\n    s0 = [];\n    if (peg$c53.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c54); }\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (peg$c53.test(input.charAt(peg$currPos))) {\n          s1 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedateTimeSkeleton(): DateTimeSkeleton {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    s3 = peg$parsedateTimeSkeletonLiteral();\n    if (s3 === peg$FAILED) {\n      s3 = peg$parsedateTimeSkeletonPattern();\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parsedateTimeSkeletonPattern();\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c55(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsedateOrTimeArgStyle(): any {\n    let s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c37) {\n      s1 = peg$c37;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c38); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsedateTimeSkeleton();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c39(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      peg$savedPos = peg$currPos;\n      s1 = peg$c56();\n      if (s1) {\n        s1 = undefined;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsemessageText();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c41(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedateOrTimeFormatElement(): any {\n    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseargNameOrNumber();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 4) === peg$c57) {\n                  s7 = peg$c57;\n                  peg$currPos += 4;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s7 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 4) === peg$c59) {\n                    s7 = peg$c59;\n                    peg$currPos += 4;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c60); }\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$currPos;\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s10 = peg$c42;\n                      peg$currPos++;\n                    } else {\n                      s10 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                    }\n                    if (s10 !== peg$FAILED) {\n                      s11 = peg$parse_();\n                      if (s11 !== peg$FAILED) {\n                        s12 = peg$parsedateOrTimeArgStyle();\n                        if (s12 !== peg$FAILED) {\n                          s10 = [s10, s11, s12];\n                          s9 = s10;\n                        } else {\n                          peg$currPos = s9;\n                          s9 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s9;\n                        s9 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s9;\n                      s9 = peg$FAILED;\n                    }\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                          s11 = peg$c23;\n                          peg$currPos++;\n                        } else {\n                          s11 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                        }\n                        if (s11 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c46(s3, s7, s9);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsesimpleFormatElement(): \n  | NumberElement\n  | DateElement\n  | TimeElement\n   {\n    let s0;\n\n    s0 = peg$parsenumberFormatElement();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsedateOrTimeFormatElement();\n    }\n\n    return s0;\n  }\n\n  function peg$parsepluralElement(): PluralElement {\n    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseargNameOrNumber();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 6) === peg$c61) {\n                  s7 = peg$c61;\n                  peg$currPos += 6;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c62); }\n                }\n                if (s7 === peg$FAILED) {\n                  if (input.substr(peg$currPos, 13) === peg$c63) {\n                    s7 = peg$c63;\n                    peg$currPos += 13;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                  }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c42;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        s11 = peg$currPos;\n                        if (input.substr(peg$currPos, 7) === peg$c65) {\n                          s12 = peg$c65;\n                          peg$currPos += 7;\n                        } else {\n                          s12 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                        }\n                        if (s12 !== peg$FAILED) {\n                          s13 = peg$parse_();\n                          if (s13 !== peg$FAILED) {\n                            s14 = peg$parsenumber();\n                            if (s14 !== peg$FAILED) {\n                              s12 = [s12, s13, s14];\n                              s11 = s12;\n                            } else {\n                              peg$currPos = s11;\n                              s11 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s11;\n                            s11 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s11;\n                          s11 = peg$FAILED;\n                        }\n                        if (s11 === peg$FAILED) {\n                          s11 = null;\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parse_();\n                          if (s12 !== peg$FAILED) {\n                            s13 = [];\n                            s14 = peg$parsepluralOption();\n                            if (s14 !== peg$FAILED) {\n                              while (s14 !== peg$FAILED) {\n                                s13.push(s14);\n                                s14 = peg$parsepluralOption();\n                              }\n                            } else {\n                              s13 = peg$FAILED;\n                            }\n                            if (s13 !== peg$FAILED) {\n                              s14 = peg$parse_();\n                              if (s14 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                  s15 = peg$c23;\n                                  peg$currPos++;\n                                } else {\n                                  s15 = peg$FAILED;\n                                  if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                                }\n                                if (s15 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s1 = peg$c67(s3, s7, s11, s13);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseselectElement(): SelectElement {\n    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 123) {\n      s1 = peg$c21;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c22); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseargNameOrNumber();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                if (input.substr(peg$currPos, 6) === peg$c68) {\n                  s7 = peg$c68;\n                  peg$currPos += 6;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c69); }\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parse_();\n                  if (s8 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 44) {\n                      s9 = peg$c42;\n                      peg$currPos++;\n                    } else {\n                      s9 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c43); }\n                    }\n                    if (s9 !== peg$FAILED) {\n                      s10 = peg$parse_();\n                      if (s10 !== peg$FAILED) {\n                        s11 = [];\n                        s12 = peg$parseselectOption();\n                        if (s12 !== peg$FAILED) {\n                          while (s12 !== peg$FAILED) {\n                            s11.push(s12);\n                            s12 = peg$parseselectOption();\n                          }\n                        } else {\n                          s11 = peg$FAILED;\n                        }\n                        if (s11 !== peg$FAILED) {\n                          s12 = peg$parse_();\n                          if (s12 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                              s13 = peg$c23;\n                              peg$currPos++;\n                            } else {\n                              s13 = peg$FAILED;\n                              if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                            }\n                            if (s13 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s1 = peg$c70(s3, s11);\n                              s0 = s1;\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepluralRuleSelectValue(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s2 = peg$c71;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c72); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parsenumber();\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseargName();\n    }\n\n    return s0;\n  }\n\n  function peg$parseselectOption(): PluralOrSelectOption {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseargName();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 123) {\n            s4 = peg$c21;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c22); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s5 = peg$c73(s2);\n            if (s5) {\n              s5 = undefined;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsemessage();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s7 = peg$c23;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c74(s2, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsepluralOption(): PluralOrSelectOption {\n    let s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsepluralRuleSelectValue();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 123) {\n            s4 = peg$c21;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c22); }\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s5 = peg$c75(s2);\n            if (s5) {\n              s5 = undefined;\n            } else {\n              s5 = peg$FAILED;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsemessage();\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s7 = peg$c23;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c24); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c76(s2, s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsewhiteSpace(): any {\n    let s0, s1;\n\n    peg$silentFails++;\n    if (peg$c78.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c79); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c77); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsepatternSyntax(): any {\n    let s0, s1;\n\n    peg$silentFails++;\n    if (peg$c81.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c82); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c80); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_(): any {\n    let s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parsewhiteSpace();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parsewhiteSpace();\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c83); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber(): number {\n    let s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s1 = peg$c85;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c86); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseargNumber();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c87(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c84); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseapostrophe(): string {\n    let s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s0 = peg$c47;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c88); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedoubleApostrophes(): any {\n    let s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c90) {\n      s1 = peg$c90;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c91); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c92();\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c89); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsequotedString(): any {\n    let s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s1 = peg$c47;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c48); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseescapedChar();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        s4 = [];\n        if (input.substr(peg$currPos, 2) === peg$c90) {\n          s5 = peg$c90;\n          peg$currPos += 2;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c91); }\n        }\n        if (s5 === peg$FAILED) {\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          if (input.substr(peg$currPos, 2) === peg$c90) {\n            s5 = peg$c90;\n            peg$currPos += 2;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c91); }\n          }\n          if (s5 === peg$FAILED) {\n            if (peg$c49.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c50); }\n            }\n          }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = input.substring(s3, peg$currPos);\n        } else {\n          s3 = s4;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s4 = peg$c47;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseunquotedString(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.length > peg$currPos) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s3 = peg$c94(s2);\n      if (s3) {\n        s3 = undefined;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 10) {\n        s1 = peg$c95;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c96); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseescapedChar(): any {\n    let s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    if (input.length > peg$currPos) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s3 = peg$c97(s2);\n      if (s3) {\n        s3 = undefined;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parseargNameOrNumber(): any {\n    let s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseargNumber();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseargName();\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c98); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsevalidTag(): any {\n    let s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseargNumber();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parsetagName();\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c99); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseargNumber(): any {\n    let s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s1 = peg$c101;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c102); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c103();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (peg$c104.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c105); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        if (peg$c106.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c107); }\n        }\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          if (peg$c106.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c107); }\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c108(s1);\n      }\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c100); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseargName(): any {\n    let s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parsewhiteSpace();\n    if (s4 === peg$FAILED) {\n      s4 = peg$parsepatternSyntax();\n    }\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = undefined;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n          s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = undefined;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c109); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetagName(): any {\n    let s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s2 = peg$c85;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c86); }\n    }\n    if (s2 === peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$currPos;\n      peg$silentFails++;\n      s4 = peg$parsewhiteSpace();\n      if (s4 === peg$FAILED) {\n        s4 = peg$parsepatternSyntax();\n      }\n      peg$silentFails--;\n      if (s4 === peg$FAILED) {\n        s3 = undefined;\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c29); }\n        }\n        if (s4 !== peg$FAILED) {\n          s3 = [s3, s4];\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s2 = peg$c85;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c86); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$currPos;\n          s3 = peg$currPos;\n          peg$silentFails++;\n          s4 = peg$parsewhiteSpace();\n          if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n          }\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = undefined;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\n            }\n            if (s4 !== peg$FAILED) {\n              s3 = [s3, s4];\n              s2 = s3;\n            } else {\n              peg$currPos = s2;\n              s2 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c110); }\n    }\n\n    return s0;\n  }\n\n\n      const messageCtx = ['root'];\n\n      function isNestedMessageText() {\n          return messageCtx.length > 1;\n      }\n\n      function isInPluralOption() {\n          return messageCtx[messageCtx.length - 1] === 'plural';\n      }\n\n      function insertLocation() {\n          return options && options.captureLocation ? {\n              location: location()\n          }: {}\n      }\n\n      function ignoreTag() {\n          return options && options.ignoreTag;\n      }\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nexport interface IParseOptions {\n  filename?: string;\n  startRule?: string;\n  tracer?: any;\n  [key: string]: any;\n}\nexport type ParseFunction = (input: string, options?: IParseOptions) => MessageFormatElement[];\nexport const pegParse: ParseFunction = peg$parse;\n","import {NumberSkeletonToken} from './types';\nimport {NumberFormatOptions} from '@formatjs/intl-numberformat';\n\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nconst DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n\nexport interface ExtendedDateTimeFormatOptions\n  extends Intl.DateTimeFormatOptions {\n  hourCycle?: 'h11' | 'h12' | 'h23' | 'h24';\n}\n\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(\n  skeleton: string\n): ExtendedDateTimeFormatOptions {\n  const result: ExtendedDateTimeFormatOptions = {};\n  skeleton.replace(DATE_TIME_REGEX, match => {\n    const len = match.length;\n    switch (match[0]) {\n      // Era\n      case 'G':\n        result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n        break;\n      // Year\n      case 'y':\n        result.year = len === 2 ? '2-digit' : 'numeric';\n        break;\n      case 'Y':\n      case 'u':\n      case 'U':\n      case 'r':\n        throw new RangeError(\n          '`Y/u/U/r` (year) patterns are not supported, use `y` instead'\n        );\n      // Quarter\n      case 'q':\n      case 'Q':\n        throw new RangeError('`q/Q` (quarter) patterns are not supported');\n      // Month\n      case 'M':\n      case 'L':\n        result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][\n          len - 1\n        ];\n        break;\n      // Week\n      case 'w':\n      case 'W':\n        throw new RangeError('`w/W` (week) patterns are not supported');\n      case 'd':\n        result.day = ['numeric', '2-digit'][len - 1];\n        break;\n      case 'D':\n      case 'F':\n      case 'g':\n        throw new RangeError(\n          '`D/F/g` (day) patterns are not supported, use `d` instead'\n        );\n      // Weekday\n      case 'E':\n        result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n        break;\n      case 'e':\n        if (len < 4) {\n          throw new RangeError('`e..eee` (weekday) patterns are not supported');\n        }\n        result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n        break;\n      case 'c':\n        if (len < 4) {\n          throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n        }\n        result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n        break;\n\n      // Period\n      case 'a': // AM, PM\n        result.hour12 = true;\n        break;\n      case 'b': // am, pm, noon, midnight\n      case 'B': // flexible day periods\n        throw new RangeError(\n          '`b/B` (period) patterns are not supported, use `a` instead'\n        );\n      // Hour\n      case 'h':\n        result.hourCycle = 'h12';\n        result.hour = ['numeric', '2-digit'][len - 1];\n        break;\n      case 'H':\n        result.hourCycle = 'h23';\n        result.hour = ['numeric', '2-digit'][len - 1];\n        break;\n      case 'K':\n        result.hourCycle = 'h11';\n        result.hour = ['numeric', '2-digit'][len - 1];\n        break;\n      case 'k':\n        result.hourCycle = 'h24';\n        result.hour = ['numeric', '2-digit'][len - 1];\n        break;\n      case 'j':\n      case 'J':\n      case 'C':\n        throw new RangeError(\n          '`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead'\n        );\n      // Minute\n      case 'm':\n        result.minute = ['numeric', '2-digit'][len - 1];\n        break;\n      // Second\n      case 's':\n        result.second = ['numeric', '2-digit'][len - 1];\n        break;\n      case 'S':\n      case 'A':\n        throw new RangeError(\n          '`S/A` (second) pattenrs are not supported, use `s` instead'\n        );\n      // Zone\n      case 'z': // 1..3, 4: specific non-location format\n        result.timeZoneName = len < 4 ? 'short' : 'long';\n        break;\n      case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n      case 'O': // 1, 4: miliseconds in day short, long\n      case 'v': // 1, 4: generic non-location format\n      case 'V': // 1, 2, 3, 4: time zone ID or city\n      case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n      case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n        throw new RangeError(\n          '`Z/O/v/V/X/x` (timeZone) pattenrs are not supported, use `z` instead'\n        );\n    }\n    return '';\n  });\n  return result;\n}\n\nfunction icuUnitToEcma(unit: string): NumberFormatOptions['unit'] {\n  return unit.replace(/^(.*?)-/, '') as NumberFormatOptions['unit'];\n}\n\nconst FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nconst SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\n\nfunction parseSignificantPrecision(str: string): NumberFormatOptions {\n  const result: NumberFormatOptions = {};\n  str.replace(SIGNIFICANT_PRECISION_REGEX, function (\n    _: string,\n    g1: string,\n    g2: string | number\n  ) {\n    // @@@ case\n    if (typeof g2 !== 'string') {\n      result.minimumSignificantDigits = g1.length;\n      result.maximumSignificantDigits = g1.length;\n    }\n    // @@@+ case\n    else if (g2 === '+') {\n      result.minimumSignificantDigits = g1.length;\n    }\n    // .### case\n    else if (g1[0] === '#') {\n      result.maximumSignificantDigits = g1.length;\n    }\n    // .@@## or .@@@ case\n    else {\n      result.minimumSignificantDigits = g1.length;\n      result.maximumSignificantDigits =\n        g1.length + (typeof g2 === 'string' ? g2.length : 0);\n    }\n    return '';\n  });\n  return result;\n}\n\nfunction parseSign(str: string): NumberFormatOptions | undefined {\n  switch (str) {\n    case 'sign-auto':\n      return {\n        signDisplay: 'auto',\n      };\n    case 'sign-accounting':\n      return {\n        currencySign: 'accounting',\n      };\n    case 'sign-always':\n      return {\n        signDisplay: 'always',\n      };\n    case 'sign-accounting-always':\n      return {\n        signDisplay: 'always',\n        currencySign: 'accounting',\n      };\n    case 'sign-except-zero':\n      return {\n        signDisplay: 'exceptZero',\n      };\n    case 'sign-accounting-except-zero':\n      return {\n        signDisplay: 'exceptZero',\n        currencySign: 'accounting',\n      };\n    case 'sign-never':\n      return {\n        signDisplay: 'never',\n      };\n  }\n}\n\nfunction parseNotationOptions(opt: string): NumberFormatOptions {\n  const result: NumberFormatOptions = {};\n  const signOpts = parseSign(opt);\n  if (signOpts) {\n    return signOpts;\n  }\n  return result;\n}\n\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function convertNumberSkeletonToNumberFormatOptions(\n  tokens: NumberSkeletonToken[]\n): NumberFormatOptions {\n  let result: NumberFormatOptions = {};\n  for (const token of tokens) {\n    switch (token.stem) {\n      case 'percent':\n        result.style = 'percent';\n        continue;\n      case 'currency':\n        result.style = 'currency';\n        result.currency = token.options[0];\n        continue;\n      case 'group-off':\n        result.useGrouping = false;\n        continue;\n      case 'precision-integer':\n      case '.':\n        result.maximumFractionDigits = 0;\n        continue;\n      case 'measure-unit':\n        result.style = 'unit';\n        result.unit = icuUnitToEcma(token.options[0]);\n        continue;\n      case 'compact-short':\n        result.notation = 'compact';\n        result.compactDisplay = 'short';\n        continue;\n      case 'compact-long':\n        result.notation = 'compact';\n        result.compactDisplay = 'long';\n        continue;\n      case 'scientific':\n        result = {\n          ...result,\n          notation: 'scientific',\n          ...token.options.reduce(\n            (all, opt) => ({...all, ...parseNotationOptions(opt)}),\n            {}\n          ),\n        };\n        continue;\n      case 'engineering':\n        result = {\n          ...result,\n          notation: 'engineering',\n          ...token.options.reduce(\n            (all, opt) => ({...all, ...parseNotationOptions(opt)}),\n            {}\n          ),\n        };\n        continue;\n      case 'notation-simple':\n        result.notation = 'standard';\n        continue;\n      // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n      case 'unit-width-narrow':\n        result.currencyDisplay = 'narrowSymbol';\n        result.unitDisplay = 'narrow';\n        continue;\n      case 'unit-width-short':\n        result.currencyDisplay = 'code';\n        result.unitDisplay = 'short';\n        continue;\n      case 'unit-width-full-name':\n        result.currencyDisplay = 'name';\n        result.unitDisplay = 'long';\n        continue;\n      case 'unit-width-iso-code':\n        result.currencyDisplay = 'symbol';\n        continue;\n    }\n    // Precision\n    // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n    // precision-integer case\n    if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n      if (token.options.length > 1) {\n        throw new RangeError(\n          'Fraction-precision stems only accept a single optional option'\n        );\n      }\n      token.stem.replace(FRACTION_PRECISION_REGEX, function (\n        match: string,\n        g1: string,\n        g2: string | number,\n        g3: string,\n        g4: string,\n        g5: string\n      ) {\n        // .000* case (before ICU67 it was .000+)\n        if (g2 === '*') {\n          result.minimumFractionDigits = g1.length;\n        }\n        // .### case\n        else if (g3 && g3[0] === '#') {\n          result.maximumFractionDigits = g3.length;\n        }\n        // .00## case\n        else if (g4 && g5) {\n          result.minimumFractionDigits = g4.length;\n          result.maximumFractionDigits = g4.length + g5.length;\n        } else {\n          result.minimumFractionDigits = g1.length;\n          result.maximumFractionDigits = g1.length;\n        }\n        return '';\n      });\n\n      if (token.options.length) {\n        result = {...result, ...parseSignificantPrecision(token.options[0])};\n      }\n      continue;\n    }\n    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n      result = {...result, ...parseSignificantPrecision(token.stem)};\n      continue;\n    }\n    const signOpts = parseSign(token.stem);\n    if (signOpts) {\n      result = {...result, ...signOpts};\n    }\n  }\n  return result;\n}\n","export enum TYPE {\n  /**\n   * Raw text\n   */\n  literal,\n  /**\n   * Variable w/o any format, e.g `var` in `this is a {var}`\n   */\n  argument,\n  /**\n   * Variable w/ number format\n   */\n  number,\n  /**\n   * Variable w/ date format\n   */\n  date,\n  /**\n   * Variable w/ time format\n   */\n  time,\n  /**\n   * Variable w/ select format\n   */\n  select,\n  /**\n   * Variable w/ plural format\n   */\n  plural,\n  /**\n   * Only possible within plural argument.\n   * This is the `#` symbol that will be substituted with the count.\n   */\n  pound,\n  /**\n   * XML-like tag\n   */\n  tag,\n}\n\nexport const enum SKELETON_TYPE {\n  number,\n  dateTime,\n}\n\nexport interface LocationDetails {\n  offset: number;\n  line: number;\n  column: number;\n}\nexport interface Location {\n  start: LocationDetails;\n  end: LocationDetails;\n}\n\nexport interface BaseElement<T extends TYPE> {\n  type: T;\n  value: string;\n  location?: Location;\n}\n\nexport type LiteralElement = BaseElement<TYPE.literal>;\nexport type ArgumentElement = BaseElement<TYPE.argument>;\nexport interface TagElement {\n  type: TYPE.tag;\n  value: string;\n  children: MessageFormatElement[];\n  location?: Location;\n}\n\nexport interface SimpleFormatElement<T extends TYPE, S extends Skeleton>\n  extends BaseElement<T> {\n  style?: string | S | null;\n}\n\nexport type NumberElement = SimpleFormatElement<TYPE.number, NumberSkeleton>;\nexport type DateElement = SimpleFormatElement<TYPE.date, DateTimeSkeleton>;\nexport type TimeElement = SimpleFormatElement<TYPE.time, DateTimeSkeleton>;\n\nexport interface SelectOption {\n  id: string;\n  value: MessageFormatElement[];\n  location?: Location;\n}\n\nexport type ValidPluralRule =\n  | 'zero'\n  | 'one'\n  | 'two'\n  | 'few'\n  | 'many'\n  | 'other'\n  | string;\n\nexport interface PluralOrSelectOption {\n  value: MessageFormatElement[];\n  location?: Location;\n}\n\nexport interface SelectElement extends BaseElement<TYPE.select> {\n  options: Record<string, PluralOrSelectOption>;\n}\n\nexport interface PluralElement extends BaseElement<TYPE.plural> {\n  options: Record<ValidPluralRule, PluralOrSelectOption>;\n  offset: number;\n  pluralType: Intl.PluralRulesOptions['type'];\n}\n\nexport interface PoundElement {\n  type: TYPE.pound;\n  location?: Location;\n}\n\nexport type MessageFormatElement =\n  | LiteralElement\n  | ArgumentElement\n  | NumberElement\n  | DateElement\n  | TimeElement\n  | SelectElement\n  | PluralElement\n  | TagElement\n  | PoundElement;\n\nexport interface NumberSkeletonToken {\n  stem: string;\n  options: string[];\n}\n\nexport interface NumberSkeleton {\n  type: SKELETON_TYPE.number;\n  tokens: NumberSkeletonToken[];\n  location?: Location;\n}\n\nexport interface DateTimeSkeleton {\n  type: SKELETON_TYPE.dateTime;\n  pattern: string;\n  location?: Location;\n}\n\nexport type Skeleton = NumberSkeleton | DateTimeSkeleton;\n\n/**\n * Type Guards\n */\nexport function isLiteralElement(\n  el: MessageFormatElement\n): el is LiteralElement {\n  return el.type === TYPE.literal;\n}\nexport function isArgumentElement(\n  el: MessageFormatElement\n): el is ArgumentElement {\n  return el.type === TYPE.argument;\n}\nexport function isNumberElement(el: MessageFormatElement): el is NumberElement {\n  return el.type === TYPE.number;\n}\nexport function isDateElement(el: MessageFormatElement): el is DateElement {\n  return el.type === TYPE.date;\n}\nexport function isTimeElement(el: MessageFormatElement): el is TimeElement {\n  return el.type === TYPE.time;\n}\nexport function isSelectElement(el: MessageFormatElement): el is SelectElement {\n  return el.type === TYPE.select;\n}\nexport function isPluralElement(el: MessageFormatElement): el is PluralElement {\n  return el.type === TYPE.plural;\n}\nexport function isPoundElement(el: MessageFormatElement): el is PoundElement {\n  return el.type === TYPE.pound;\n}\nexport function isTagElement(el: MessageFormatElement): el is TagElement {\n  return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(\n  el: NumberElement['style'] | Skeleton\n): el is NumberSkeleton {\n  return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.number);\n}\nexport function isDateTimeSkeleton(\n  el?: DateElement['style'] | TimeElement['style'] | Skeleton\n): el is DateTimeSkeleton {\n  return !!(el && typeof el === 'object' && el.type === SKELETON_TYPE.dateTime);\n}\n\nexport function createLiteralElement(value: string): LiteralElement {\n  return {\n    type: TYPE.literal,\n    value,\n  };\n}\n\nexport function createNumberElement(\n  value: string,\n  style?: string | null\n): NumberElement {\n  return {\n    type: TYPE.number,\n    value,\n    style,\n  };\n}\n\nexport interface Options {\n  /**\n   * Whether to convert `#` in plural rule options\n   * to `{var, number}`\n   * Default is true\n   */\n  normalizeHashtagInPlural?: boolean;\n  /**\n   * Capture location info in AST\n   * Default is false\n   */\n  captureLocation?: boolean;\n  /**\n   * Whether to treat HTML/XML tags as string literal\n   * instead of parsing them as tag token.\n   * When this is false we only allow simple tags without\n   * any attributes\n   */\n  ignoreTag?: boolean;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\nimport {parse, MessageFormatElement} from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport {\n  FormatterCache,\n  Formatters,\n  Formats,\n  formatToParts,\n  FormatXMLElementFn,\n  PrimitiveType,\n  MessageFormatPart,\n  PART_TYPE,\n} from './formatters';\n\n// -- MessageFormat --------------------------------------------------------\n\nfunction mergeConfig(c1: Record<string, object>, c2?: Record<string, object>) {\n  if (!c2) {\n    return c1;\n  }\n  return {\n    ...(c1 || {}),\n    ...(c2 || {}),\n    ...Object.keys(c1).reduce((all: Record<string, object>, k) => {\n      all[k] = {\n        ...c1[k],\n        ...(c2[k] || {}),\n      };\n      return all;\n    }, {}),\n  };\n}\n\nfunction mergeConfigs(\n  defaultConfig: Formats,\n  configs?: Partial<Formats>\n): Formats {\n  if (!configs) {\n    return defaultConfig;\n  }\n\n  return (Object.keys(defaultConfig) as Array<keyof Formats>).reduce(\n    (all: Formats, k: keyof Formats) => {\n      all[k] = mergeConfig(defaultConfig[k], configs[k]);\n      return all;\n    },\n    {...defaultConfig}\n  );\n}\n\nexport interface Options {\n  formatters?: Formatters;\n  /**\n   * Whether to treat HTML/XML tags as string literal\n   * instead of parsing them as tag token.\n   * When this is false we only allow simple tags without\n   * any attributes\n   */\n  ignoreTag?: boolean;\n}\n\nexport function createDefaultFormatters(\n  cache: FormatterCache = {\n    number: {},\n    dateTime: {},\n    pluralRules: {},\n  }\n): Formatters {\n  return {\n    getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n    getDateTimeFormat: memoizeIntlConstructor(\n      Intl.DateTimeFormat,\n      cache.dateTime\n    ),\n    getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n  };\n}\n\nexport class IntlMessageFormat {\n  private readonly ast: MessageFormatElement[];\n  private readonly locales: string | string[];\n  private readonly formatters: Formatters;\n  private readonly formats: Formats;\n  private readonly message: string | undefined;\n  private readonly formatterCache: FormatterCache = {\n    number: {},\n    dateTime: {},\n    pluralRules: {},\n  };\n  constructor(\n    message: string | MessageFormatElement[],\n    locales: string | string[] = IntlMessageFormat.defaultLocale,\n    overrideFormats?: Partial<Formats>,\n    opts?: Options\n  ) {\n    if (typeof message === 'string') {\n      this.message = message;\n      if (!IntlMessageFormat.__parse) {\n        throw new TypeError(\n          'IntlMessageFormat.__parse must be set to process `message` of type `string`'\n        );\n      }\n      // Parse string messages into an AST.\n      this.ast = IntlMessageFormat.__parse(message, {\n        normalizeHashtagInPlural: false,\n        ignoreTag: opts?.ignoreTag,\n      });\n    } else {\n      this.ast = message;\n    }\n\n    if (!Array.isArray(this.ast)) {\n      throw new TypeError('A message must be provided as a String or AST.');\n    }\n\n    // Creates a new object with the specified `formats` merged with the default\n    // formats.\n    this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n\n    // Defined first because it's used to build the format pattern.\n    this.locales = locales;\n\n    this.formatters =\n      (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n  }\n\n  format = <T = void>(\n    values?: Record<string, PrimitiveType | T | FormatXMLElementFn<T>>\n  ) => {\n    const parts = this.formatToParts(values);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n      return parts[0].value;\n    }\n    const result = parts.reduce((all, part) => {\n      if (\n        !all.length ||\n        part.type !== PART_TYPE.literal ||\n        typeof all[all.length - 1] !== 'string'\n      ) {\n        all.push(part.value);\n      } else {\n        all[all.length - 1] += part.value;\n      }\n      return all;\n    }, [] as Array<string | T>);\n\n    if (result.length <= 1) {\n      return result[0] || '';\n    }\n    return result;\n  };\n  formatToParts = <T>(\n    values?: Record<string, PrimitiveType | T | FormatXMLElementFn<T>>\n  ): MessageFormatPart<T>[] =>\n    formatToParts(\n      this.ast,\n      this.locales,\n      this.formatters,\n      this.formats,\n      values,\n      undefined,\n      this.message\n    );\n  resolvedOptions = () => ({\n    locale: Intl.NumberFormat.supportedLocalesOf(this.locales)[0],\n  });\n  getAst = () => this.ast;\n  private static memoizedDefaultLocale: string | null = null;\n\n  static get defaultLocale() {\n    if (!IntlMessageFormat.memoizedDefaultLocale) {\n      IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n    }\n\n    return IntlMessageFormat.memoizedDefaultLocale;\n  }\n  static __parse: typeof parse | undefined = parse;\n  // Default format options used as the prototype of the `formats` provided to the\n  // constructor. These are used when constructing the internal Intl.NumberFormat\n  // and Intl.DateTimeFormat instances.\n  static formats = {\n    number: {\n      currency: {\n        style: 'currency',\n      },\n\n      percent: {\n        style: 'percent',\n      },\n    },\n\n    date: {\n      short: {\n        month: 'numeric',\n        day: 'numeric',\n        year: '2-digit',\n      },\n\n      medium: {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric',\n      },\n\n      long: {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n      },\n\n      full: {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric',\n      },\n    },\n\n    time: {\n      short: {\n        hour: 'numeric',\n        minute: 'numeric',\n      },\n\n      medium: {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n      },\n\n      long: {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        timeZoneName: 'short',\n      },\n\n      full: {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n        timeZoneName: 'short',\n      },\n    },\n  };\n}\n\nexport default IntlMessageFormat;\n","export const enum ErrorCode {\n  // When we have a placeholder but no value to format\n  MISSING_VALUE = 'MISSING_VALUE',\n  // When value supplied is invalid\n  INVALID_VALUE = 'INVALID_VALUE',\n  // When we need specific Intl API but it's not available\n  MISSING_INTL_API = 'MISSING_INTL_API',\n}\n\nexport class FormatError extends Error {\n  public readonly code: ErrorCode;\n  /**\n   * Original message we're trying to format\n   * `undefined` if we're only dealing w/ AST\n   *\n   * @type {(string | undefined)}\n   * @memberof FormatError\n   */\n  public readonly originalMessage: string | undefined;\n  constructor(msg: string, code: ErrorCode, originalMessage?: string) {\n    super(msg);\n    this.code = code;\n    this.originalMessage = originalMessage;\n  }\n  public toString() {\n    return `[formatjs Error: ${this.code}] ${this.message}`;\n  }\n}\n\nexport class InvalidValueError extends FormatError {\n  constructor(\n    variableId: string,\n    value: any,\n    options: string[],\n    originalMessage?: string\n  ) {\n    super(\n      `Invalid values for \"${variableId}\": \"${value}\". Options are \"${Object.keys(\n        options\n      ).join('\", \"')}\"`,\n      ErrorCode.INVALID_VALUE,\n      originalMessage\n    );\n  }\n}\n\nexport class InvalidValueTypeError extends FormatError {\n  constructor(value: any, type: string, originalMessage?: string) {\n    super(\n      `Value for \"${value}\" must be of type ${type}`,\n      ErrorCode.INVALID_VALUE,\n      originalMessage\n    );\n  }\n}\n\nexport class MissingValueError extends FormatError {\n  constructor(variableId: string, originalMessage?: string) {\n    super(\n      `The intl string context variable \"${variableId}\" was not provided to the string \"${originalMessage}\"`,\n      ErrorCode.MISSING_VALUE,\n      originalMessage\n    );\n  }\n}\n","import {\n  convertNumberSkeletonToNumberFormatOptions,\n  isArgumentElement,\n  isDateElement,\n  isDateTimeSkeleton,\n  isLiteralElement,\n  isNumberElement,\n  isNumberSkeleton,\n  isPluralElement,\n  isPoundElement,\n  isSelectElement,\n  isTimeElement,\n  MessageFormatElement,\n  parseDateTimeSkeleton,\n  isTagElement,\n} from 'intl-messageformat-parser';\nimport {\n  MissingValueError,\n  InvalidValueError,\n  ErrorCode,\n  FormatError,\n  InvalidValueTypeError,\n} from './error';\n\nexport interface Formats {\n  number: Record<string, Intl.NumberFormatOptions>;\n  date: Record<string, Intl.DateTimeFormatOptions>;\n  time: Record<string, Intl.DateTimeFormatOptions>;\n}\n\nexport interface FormatterCache {\n  number: Record<string, Intl.NumberFormat>;\n  dateTime: Record<string, Intl.DateTimeFormat>;\n  pluralRules: Record<string, Intl.PluralRules>;\n}\n\nexport interface Formatters {\n  getNumberFormat(\n    ...args: ConstructorParameters<typeof Intl.NumberFormat>\n  ): Intl.NumberFormat;\n  getDateTimeFormat(\n    ...args: ConstructorParameters<typeof Intl.DateTimeFormat>\n  ): Intl.DateTimeFormat;\n  getPluralRules(\n    ...args: ConstructorParameters<typeof Intl.PluralRules>\n  ): Intl.PluralRules;\n}\n\nexport const enum PART_TYPE {\n  literal,\n  object,\n}\n\nexport interface LiteralPart {\n  type: PART_TYPE.literal;\n  value: string;\n}\n\nexport interface ObjectPart<T = any> {\n  type: PART_TYPE.object;\n  value: T;\n}\n\nexport type MessageFormatPart<T> = LiteralPart | ObjectPart<T>;\n\nexport type PrimitiveType = string | number | boolean | null | undefined | Date;\n\nfunction mergeLiteral<T>(\n  parts: MessageFormatPart<T>[]\n): MessageFormatPart<T>[] {\n  if (parts.length < 2) {\n    return parts;\n  }\n  return parts.reduce((all, part) => {\n    const lastPart = all[all.length - 1];\n    if (\n      !lastPart ||\n      lastPart.type !== PART_TYPE.literal ||\n      part.type !== PART_TYPE.literal\n    ) {\n      all.push(part);\n    } else {\n      lastPart.value += part.value;\n    }\n    return all;\n  }, [] as MessageFormatPart<T>[]);\n}\n\nexport function isFormatXMLElementFn<T>(\n  el: PrimitiveType | T | FormatXMLElementFn<T>\n): el is FormatXMLElementFn<T> {\n  return typeof el === 'function';\n}\n\n// TODO(skeleton): add skeleton support\nexport function formatToParts<T>(\n  els: MessageFormatElement[],\n  locales: string | string[],\n  formatters: Formatters,\n  formats: Formats,\n  values?: Record<string, PrimitiveType | T | FormatXMLElementFn<T>>,\n  currentPluralValue?: number,\n  // For debugging\n  originalMessage?: string\n): MessageFormatPart<T>[] {\n  // Hot path for straight simple msg translations\n  if (els.length === 1 && isLiteralElement(els[0])) {\n    return [\n      {\n        type: PART_TYPE.literal,\n        value: els[0].value,\n      },\n    ];\n  }\n  const result: MessageFormatPart<T>[] = [];\n  for (const el of els) {\n    // Exit early for string parts.\n    if (isLiteralElement(el)) {\n      result.push({\n        type: PART_TYPE.literal,\n        value: el.value,\n      });\n      continue;\n    }\n    // TODO: should this part be literal type?\n    // Replace `#` in plural rules with the actual numeric value.\n    if (isPoundElement(el)) {\n      if (typeof currentPluralValue === 'number') {\n        result.push({\n          type: PART_TYPE.literal,\n          value: formatters.getNumberFormat(locales).format(currentPluralValue),\n        });\n      }\n      continue;\n    }\n\n    const {value: varName} = el;\n\n    // Enforce that all required values are provided by the caller.\n    if (!(values && varName in values)) {\n      throw new MissingValueError(varName, originalMessage);\n    }\n\n    let value = values[varName];\n    if (isArgumentElement(el)) {\n      if (!value || typeof value === 'string' || typeof value === 'number') {\n        value =\n          typeof value === 'string' || typeof value === 'number'\n            ? String(value)\n            : '';\n      }\n      result.push({\n        type: typeof value === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n        value,\n      } as ObjectPart<T>);\n      continue;\n    }\n\n    // Recursively format plural and select parts' option — which can be a\n    // nested pattern structure. The choosing of the option to use is\n    // abstracted-by and delegated-to the part helper object.\n    if (isDateElement(el)) {\n      const style =\n        typeof el.style === 'string'\n          ? formats.date[el.style]\n          : isDateTimeSkeleton(el.style)\n          ? parseDateTimeSkeleton(el.style.pattern)\n          : undefined;\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters\n          .getDateTimeFormat(locales, style)\n          .format(value as number),\n      });\n      continue;\n    }\n    if (isTimeElement(el)) {\n      const style =\n        typeof el.style === 'string'\n          ? formats.time[el.style]\n          : isDateTimeSkeleton(el.style)\n          ? parseDateTimeSkeleton(el.style.pattern)\n          : undefined;\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters\n          .getDateTimeFormat(locales, style)\n          .format(value as number),\n      });\n      continue;\n    }\n    if (isNumberElement(el)) {\n      const style =\n        typeof el.style === 'string'\n          ? formats.number[el.style]\n          : isNumberSkeleton(el.style)\n          ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n          : undefined;\n      result.push({\n        type: PART_TYPE.literal,\n        value: formatters\n          .getNumberFormat(locales, style)\n          .format(value as number),\n      });\n      continue;\n    }\n    if (isTagElement(el)) {\n      const {children, value} = el;\n      const formatFn = values[value];\n      if (!isFormatXMLElementFn<T>(formatFn)) {\n        throw new InvalidValueTypeError(value, 'function', originalMessage);\n      }\n      const parts = formatToParts<T>(\n        children,\n        locales,\n        formatters,\n        formats,\n        values,\n        currentPluralValue\n      );\n      let chunks = formatFn(parts.map(p => p.value));\n      if (!Array.isArray(chunks)) {\n        chunks = [chunks];\n      }\n      result.push(\n        ...chunks.map(\n          (c): MessageFormatPart<T> => {\n            return {\n              type:\n                typeof c === 'string' ? PART_TYPE.literal : PART_TYPE.object,\n              value: c,\n            } as MessageFormatPart<T>;\n          }\n        )\n      );\n    }\n    if (isSelectElement(el)) {\n      const opt = el.options[value as string] || el.options.other;\n      if (!opt) {\n        throw new InvalidValueError(\n          el.value,\n          value,\n          Object.keys(el.options),\n          originalMessage\n        );\n      }\n      result.push(\n        ...formatToParts(opt.value, locales, formatters, formats, values)\n      );\n      continue;\n    }\n    if (isPluralElement(el)) {\n      let opt = el.options[`=${value}`];\n      if (!opt) {\n        if (!Intl.PluralRules) {\n          throw new FormatError(\n            `Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n`,\n            ErrorCode.MISSING_INTL_API,\n            originalMessage\n          );\n        }\n        const rule = formatters\n          .getPluralRules(locales, {type: el.pluralType})\n          .select((value as number) - (el.offset || 0));\n        opt = el.options[rule] || el.options.other;\n      }\n      if (!opt) {\n        throw new InvalidValueError(\n          el.value,\n          value,\n          Object.keys(el.options),\n          originalMessage\n        );\n      }\n      result.push(\n        ...formatToParts(\n          opt.value,\n          locales,\n          formatters,\n          formats,\n          values,\n          (value as number) - (el.offset || 0)\n        )\n      );\n      continue;\n    }\n  }\n  return mergeLiteral(result);\n}\n\nexport type FormatXMLElementFn<T, R = string | Array<string | T>> = (\n  parts: Array<string | T>\n) => R;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\nimport IntlMessageFormat from './core';\nexport * from './formatters';\nexport * from './core';\nexport * from './error';\nexport default IntlMessageFormat;\n","import L10n from '@l10n/l10n.js'\r\nimport MessageBundle from '@l10n/message-bundle.js'\r\n\r\nexport { L10n, MessageBundle }","import MessageBundle from '@l10n/message-bundle'\r\n\r\n/**\r\n * Combines several message bundles of different locales.\r\n */\r\nexport default class L10n {\r\n  constructor () {\r\n    this.selectedLocale = undefined // A locale that currently selected\r\n    this.bundles = new Map() // Maps message bundles to their locales\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Adds, or appends, one or several messages for a locale specified.\r\n   * This method is chainable.\r\n   *\r\n   * @param {string} messageJSON - Messages in a JSON string\r\n   * @param {string} locale - A locale of the messages\r\n   * @param {Function} missingTranslationMsgFn - A placeholder message that will be shown if translation is not found.\r\n   * @returns {L10n} - Self reference (for chaining)\r\n   */\r\n  addMessages (messageJSON, locale, missingTranslationMsgFn) {\r\n    let messageBundle\r\n    if (this.bundles.has(locale)) {\r\n      messageBundle = this.bundles.get(locale)\r\n      messageBundle.appendFromJSON(messageJSON)\r\n    } else {\r\n      messageBundle = new MessageBundle(messageJSON, locale, missingTranslationMsgFn)\r\n      this.addMessageBundle(messageBundle)\r\n      if (!this.selectedLocale) {\r\n        // If locale is not defined, set it to the value of the current (and the only one) message bundle\r\n        this.setLocale(locale)\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Adds a message bundle to a L10n object. If selected locale is not set, sets it to the locale of the message bundle.\r\n   * This function is chainable.\r\n   *\r\n   * @param {MessageBundle} messageBundle - A message bundle that will be stored within an L10n object.\r\n   * @returns {L10n} - Returns self for chaining.\r\n   */\r\n  addMessageBundle (messageBundle) {\r\n    const locale = messageBundle.locale\r\n    if (this.bundles.has(locale)) {\r\n      this.bundles.get(locale).appendFromBundle(messageBundle)\r\n    } else {\r\n      this.bundles.set(messageBundle.locale, messageBundle)\r\n      if (!this.selectedLocale) {\r\n        // If locale is not defined, set it to the value of the current (and the only one) message bundle\r\n        this.setLocale(messageBundle.locale)\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Returns an array of locales supported by the L10n object.\r\n   *\r\n   * @returns {string[]}\r\n   */\r\n  get locales () {\r\n    return Array.from(this.bundles.keys())\r\n  }\r\n\r\n  /**\r\n   * Returns a message bundle for a currently selected locale\r\n   *\r\n   * @returns {MessageBundle | undefined} A message bundle object or undefined if selectedLocale is not set\r\n   */\r\n  get bundle () {\r\n    return this.bundles.get(this.selectedLocale)\r\n  }\r\n\r\n  /**\r\n   * Returns a message from a bundle for a current locale.\r\n   * A wrapper for {@link MessageBundle#getMsg}\r\n   *\r\n   * @param {...any} params\r\n   */\r\n  getMsg (...params) {\r\n    return this.bundles.has(this.selectedLocale) ? this.bundles.get(this.selectedLocale).getMsg(...params) : {}\r\n  }\r\n\r\n  /**\r\n   * Sets, or switches a locale that is currently selected. If message bundle for such locale\r\n   * does not exist, does nothing.\r\n   * This method is chainable.\r\n   *\r\n   * @param {string} locale - A locale to be set as currently selected.\r\n   * @returns {L10n} Reference to self for chaining\r\n   */\r\n  setLocale (locale) {\r\n    if (this.bundles.has(locale)) {\r\n      this.selectedLocale = locale\r\n    }\r\n    return this\r\n  }\r\n}\r\n","import Message from '@l10n/message.js'\r\n// TODO: Deal with situations when message is not available, but is requested\r\n\r\n/**\r\n * Combines messages with the same locale code into a single message bundle.\r\n */\r\nexport default class MessageBundle {\r\n  /**\r\n   * Creates a message bundle (a list of messages) for a locale.\r\n   *\r\n   * @param {string | object} messagesJSONorObj - Messages for a locale as a JSON string or as an object.\r\n   * @param {string} locale - A locale code for a message group. IETF language tag format is recommended.\r\n   * @param {Function} missingTranslationMsgFn - A placeholder message that will be shown if translation is not found.\r\n   */\r\n  constructor (messagesJSONorObj, locale, missingTranslationMsgFn = (msgID, locale) => `Missing translation: ${msgID} [${locale}]`) {\r\n    if (!locale) {\r\n      throw new Error('Locale data is missing')\r\n    }\r\n    if (!messagesJSONorObj) {\r\n      throw new Error('Message data is missing')\r\n    }\r\n\r\n    this._locale = locale\r\n\r\n    /**\r\n     * A map of message object. The key is a messageID\r\n     *\r\n     * @type {Map<string, Message>}\r\n     * @private\r\n     */\r\n    this._messages = new Map()\r\n\r\n    this._missingTranslationMsgFn = missingTranslationMsgFn\r\n\r\n    const messages = (typeof messagesJSONorObj === 'string') ? JSON.parse(messagesJSONorObj) : messagesJSONorObj\r\n    this.append(messages)\r\n  }\r\n\r\n  /**\r\n   * Appends messages from another bundle to the current message bundle.\r\n   * If message has the same messageID that already exists in the\r\n   * current bundle, it will be overwritten.\r\n   *\r\n   * @param {MessageBundle} messageBundle - A bundle of messages.\r\n   */\r\n  appendFromBundle (messageBundle) {\r\n    for (const key of messageBundle.messageIds) {\r\n      this._messages.set(key, messageBundle.getMessageObject(key))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends a series of messages to the bundle\r\n   *\r\n   * @param {string} messagesJSON - Messages as a JSON string or as a parsed JSON object\r\n   */\r\n  appendFromJSON (messagesJSON) {\r\n    const messages = (typeof messagesJSON === 'string') ? JSON.parse(messagesJSON) : messagesJSON\r\n    this.append(messages)\r\n  }\r\n\r\n  /**\r\n   * Appends a series of messages from an object. Object properties are message names, and\r\n   * values are message objects. If appended message has the same key as en existing one,\r\n   * an existing message will be overwritten.\r\n   *\r\n   * @param {object} messages - An object containing messages.\r\n   */\r\n  append (messages) {\r\n    for (const [key, messageObj] of Object.entries(messages)) {\r\n      const message = new Message(messageObj, this._locale)\r\n      this._messages.set(key, message)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a list of message IDs that exist in a bundle.\r\n   *\r\n   * @returns {string[]}\r\n   */\r\n  get messageIds () {\r\n    return Array.from(this._messages.keys())\r\n  }\r\n\r\n  /**\r\n   * Checks if message with a given message ID exists among the translated messages.\r\n   *\r\n   * @param {string} messageID - A message ID of a message to be checked\r\n   * @returns {boolean} True if message is present, false otherwise\r\n   */\r\n  hasMsg (messageID) {\r\n    return this._messages.has(messageID)\r\n  }\r\n\r\n  /**\r\n   * Returns a (formatted) message for a message ID provided.\r\n   *\r\n   * @see {@link Message#getMsg}\r\n   * @param {string} messageID - An ID of a message.\r\n   * @param {object} formatOptions - Options that can be used for message formatting in the following format:\r\n   * {\r\n   *     paramOneName: paramOneValue,\r\n   *     paramTwoName: paramTwoValue\r\n   * }.\r\n   * @param {object} options - An object with the following possible options:\r\n   *     {boolean} passthrough - If true and a translation for a given message ID is not found, will return\r\n   *                             an original `messageID` string. Otherwise will return an error message if\r\n   *                             a translation is missing.\r\n   * @returns {string} A formatted message. If message not found, returns a message that contains an error text.\r\n   */\r\n  getMsg (messageID, formatOptions = undefined, options = {}) {\r\n    const defaultOptions = {\r\n      passthrough: false\r\n    }\r\n    options = Object.assign(defaultOptions, options)\r\n    if (this.hasMsg(messageID)) {\r\n      return this._messages.get(messageID).getMsg(formatOptions)\r\n    } else {\r\n      // If message with the ID provided is not in translation data, generate a warning.\r\n      return options.passthrough ? messageID : `\"${messageID}\" is not in translation data for ${this._locale}`\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A wrapper around `get()` with a `passthrough` parameter set to `true`.\r\n   *\r\n   * @see {@link MessageBundle#getMsg} for more information.\r\n   * @param messageID\r\n   * @param formatOptions\r\n   * @param options\r\n   * @returns {string}\r\n   */\r\n  getText (messageID, formatOptions, options = {}) {\r\n    options.passthrough = true\r\n    return this.getMsg(messageID, formatOptions, options)\r\n  }\r\n\r\n  /**\r\n   * Returns an abbreviated version of a message for a message ID provided.\r\n   *\r\n   * @see {@link Message#getAbbr}\r\n   * @param messageID - An ID of a message.\r\n   * @param formatOptions - Options that can be used for message formatting in the same order\r\n   * as they are defined in a translation source file.\r\n   * @returns {string} An abbreviated, and possibly formatted, message. If abbreviated message not found,\r\n   *          returns an original message text.\r\n   */\r\n  getAbbr (messageID, formatOptions = undefined) {\r\n    if (this.hasMsg(messageID)) {\r\n      return this._messages.get(messageID).getAbbr(formatOptions)\r\n    } else {\r\n      // If message with the ID provided is not in translation data, generate a warning.\r\n      return this._missingTranslationMsgFn(messageID, this._locale)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a Message object for a given message ID.\r\n   *\r\n   * @param {string} messageID - A message ID of a message object to be retrieved..\r\n   * @returns {Message} A message object.\r\n   */\r\n  getMessageObject (messageID) {\r\n    return this.hasMsg(messageID) ? this._messages.get(messageID) : null\r\n  }\r\n\r\n  /**\r\n   * Returns a locale of a current message bundle.\r\n   *\r\n   * @returns {string} A locale of this message bundle.\r\n   */\r\n  get locale () {\r\n    return this._locale\r\n  }\r\n}\r\n","import IntlMessageFormat from 'intl-messageformat'\r\n\r\n/**\r\n * Represents a single message object\r\n */\r\nexport default class Message {\r\n  /**\r\n   * Creates a new Message object.\r\n   *\r\n   * @param {object} message - A message object as read from JSON file.\r\n   * @param {string} message.name - A message string.\r\n   * @param {string[]} [message.params] - A list of message parameters (optional).\r\n   * @param {string} [message.abbr] - Message abbreviation (optional).\r\n   * @param {string} locale - A message's locale.\r\n   */\r\n  constructor (message, locale) {\r\n    if (!locale) {\r\n      throw new Error('Locale data is missing')\r\n    }\r\n    if (!message) {\r\n      throw new Error('Message data is missing')\r\n    }\r\n\r\n    this.message = 'Message text is not defined in translation data' // Message format string or text\r\n    this.params = [] // Message parameters\r\n\r\n    this.locale = locale\r\n    for (const key of Object.keys(message)) {\r\n      this[key] = message[key]\r\n    }\r\n\r\n    this.formatFunc = new IntlMessageFormat(this.message, this.locale)\r\n    this.abbrFunc = new IntlMessageFormat(this.abbr || this.message, this.locale)\r\n  }\r\n\r\n  /**\r\n   * Whether this message has any parameters or not.\r\n   *\r\n   * @returns {boolean} True if message has any parameters, false otherwise.\r\n   */\r\n  get hasParameters () {\r\n    return Boolean(this.params.length > 0)\r\n  }\r\n\r\n  /**\r\n   * Returns a formatted version of a message (if message has parameters) or\r\n   * a message text (if parameters do not exist for a message).\r\n   *\r\n   * @param {object} formatOptions - Options that can be used for message formatting in the following format:\r\n   * {\r\n   *     paramOneName: paramOneValue,\r\n   *     paramTwoName: paramTwoValue\r\n   * }.\r\n   * @returns {string} A formatted message text\r\n   */\r\n  getMsg (formatOptions) {\r\n    if (this.hasParameters && !this.formatFunc) {\r\n      throw new Error(`A message with parameters ${this.message} requires a format function`)\r\n    }\r\n    return !this.hasParameters ? this.message : this.formatFunc.format(formatOptions)\r\n  }\r\n\r\n  /**\r\n   * Returns an abbreviated version of a message (if defined) or a message itself otherwise.\r\n   *\r\n   * @param {object} formatOptions - Options that can be used for message formatting in the following format:\r\n   * {\r\n   *     paramOneName: paramOneValue,\r\n   *     paramTwoName: paramTwoValue\r\n   * }.\r\n   * @returns {string} Abbreviated or full message text.\r\n   */\r\n  getAbbr (formatOptions) {\r\n    return !this.hasParameters ? this.abbrFunc.format() : this.abbrFunc.format(formatOptions)\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"../index.js\");\n"],"sourceRoot":""}