!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("alpheios-data-models"),require("intl-messageformat"));else if("function"==typeof define&&define.amd)define(["alpheios-data-models","intl-messageformat"],t);else{var o="object"==typeof exports?t(require("alpheios-data-models"),require("intl-messageformat")):t(e["alpheios-data-models"],e["intl-messageformat"]);for(var s in o)("object"==typeof exports?exports:e)[s]=o[s]}}(window,function(e,t){return function(e){var t={};function o(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,s){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(s,n,function(t){return e[t]}.bind(null,n));return s},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=16)}([function(t,o){t.exports=e},function(e,t,o){},function(e,t,o){},function(e,t,o){},function(e){e.exports={TOOLTIP_ALL_IMPORTANT:{message:"Make all important ",description:"Make all words inside language block important",component:"WordListPanel"},TOOLTIP_NO_IMPORTANT:{message:"Remove all important ",description:"Remove all words inside language block important",component:"WordListPanel"}}},function(e){e.exports={COOKIE_TEST_MESSAGE:{message:"This is a test message about a biscuit.",description:"A test message that is shown in a panel",component:"Panel"},NUM_LINES_TEST_MESSAGE:{message:"There {numLines, plural, =0 {are no queues} =1 {is one queue} other {are # queues}}.",description:"A test message that is shown in a panel",component:"Panel",params:["numLines"]}}},function(e,t){e.exports={render:function(){var e=this.$createElement,t=this._self._c||e;return t("svg",{attrs:{viewBox:"0 0 447.6 757.4"}},[t("path",{attrs:{d:"M-128.4 305.8c74.8 53.3 146.8 110.5 215.7 171.3 0 0 348.4-399.4 557.1-477.1l27 53S277.2 418 150.5 757.4l-374.3-378.7 95.4-72.9z"}})])},toString:function(){return"C:\\_Irina\\_clients\\_Alpheios Project\\git\\wordlist\\src\\icons\\check.svg"}}},function(e,t,o){},function(e,t,o){var s=o(11),n=o(12);e.exports=function(e,t,o){var i=t&&o||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var r=(e=e||{}).random||(e.rng||s)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t)for(var a=0;a<16;++a)t[i+a]=r[a];return t||n(r)}},function(e,o){e.exports=t},,function(e,t){var o="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(o){var s=new Uint8Array(16);e.exports=function(){return o(s),s}}else{var n=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),n[t]=e>>>((3&t)<<3)&255;return n}}},function(e,t){for(var o=[],s=0;s<256;++s)o[s]=(s+256).toString(16).substr(1);e.exports=function(e,t){var s=t||0,n=o;return[n[e[s++]],n[e[s++]],n[e[s++]],n[e[s++]],"-",n[e[s++]],n[e[s++]],"-",n[e[s++]],n[e[s++]],"-",n[e[s++]],n[e[s++]],"-",n[e[s++]],n[e[s++]],n[e[s++]],n[e[s++]],n[e[s++]],n[e[s++]]].join("")}},function(e,t,o){"use strict";var s=o(1);o.n(s).a},function(e,t,o){"use strict";var s=o(2);o.n(s).a},function(e,t,o){"use strict";var s=o(3);o.n(s).a},function(e,t,o){"use strict";o.r(t);var s=o(7),n=o.n(s),i=o(0),r=o(8),a=o.n(r);class word_item_WordItem{constructor(e){this.targetWord=e.targetWord,this.languageID=e.languageID,this.homonym=e,this.important=!1,this.ID=a()()}makeImportant(){this.important=!0}removeImportant(){this.important=!1}get lemmasList(){return this.homonym.lexemes.map(e=>e.lemma.word).join(", ")}static uploadFromJSON(e){let t=i.Homonym.readObject(e.homonym);return new word_item_WordItem(t)}}class word_list_WordList{constructor(e,t,o){this.userID=e,this.languageID=t,this.storageAdapter=o,this.items={},this.createStorageID()}createStorageID(){let e=i.LanguageModelFactory.getLanguageCodeFromId(this.languageID);this.storageID=this.userID+"-"+e}get values(){return Object.values(this.items)}push(e,t=!1){return this.languageID===e.languageID&&!this.contains(e)&&(this.items[e.ID]=e,t&&this.saveToStorage(),!0)}saveToStorage(){console.info("***********************saveToStorage",this.storageAdapter.available),this.storageAdapter.available&&this.storageAdapter.openDatabase(null,this.putToStorageTransaction.bind(this))}putToStorageTransaction(e){const t=e.target.result;console.info("**************DB opened",t.name,t.version,t.objectStoreNames),this.storageAdapter.set(t,"UserLists",this.convertToStorage())}convertToStorage(){let e=i.LanguageModelFactory.getLanguageCodeFromId(this.languageID),t={ID:this.storageID,userID:this.userID,languageCode:e};console.info("**********************convert to Storage",this),t.wordItems=[];for(let e of Object.values(this.items)){let o={lexemes:[]};for(let t of e.homonym.lexemes){let e=[];t.inflections.forEach(t=>{e.push(t.convertToJSONObject())});let s=t.meaning.convertToJSONObject();console.info("********************resMeaning 1 new",s.fullDefs[0]?s.fullDefs[0].text:""),console.info("********************resMeaning 2 new",t.meaning.fullDefs[0]?t.meaning.fullDefs[0].text:"");let n={lemma:t.lemma.convertToJSONObject(),inflections:e,meaning:s};o.lexemes.push(n)}t.wordItems.push(o)}return console.info("******************result",t),[t]}contains(e){return this.values.map(e=>e.targetWord).includes(e.targetWord)}makeAllImportant(){this.values.forEach(e=>{e.makeImportant()})}removeAllImportant(){this.values.forEach(e=>{e.removeImportant()})}getWordItemByID(e,t){return this.items[t]}}class StorageAdapter{constructor(e="alpheios-storage-domain"){this.domain=e}set(e){console.info("*****************set value to storage")}get(e){console.info("*****************get value from storage")}remove(e){return new Promise((e,t)=>t(new Error("Remove method should be implemented in a subclass")))}}class indexed_db_adapter_IndexedDBAdapter extends StorageAdapter{constructor(e="alpheios-storage-domain"){super(e),this.available=this.initIndexedDBNamespaces(),this.currentVersion=1,this.dbName="AlpheiosUserWordLists"}initIndexedDBNamespaces(){return this.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,this.IDBTransaction=window.IDBTransaction||window.webkitIDBTransaction||window.msIDBTransaction||{READ_WRITE:"readwrite"},this.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange||window.msIDBKeyRange,!!this.indexedDB||(console.info("Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available."),!1)}openDatabase(e,t){console.info("***********************openDatabase");let o=this.indexedDB.open(this.dbName,this.currentVersion);return o.onerror=(e=>{console.info("*************Some problems with opening LabirintOrders",e.target)}),o.onsuccess=t,o.onupgradeneeded=e,o}set(e,t,o){const s=e.transaction([t],"readwrite");s.oncomplete=(e=>{console.info("**************testData added")}),s.onerror=(e=>{console.info("**************testData onerror")});const n=s.objectStore(t);o.forEach(e=>{const t=n.put(e);t.onsuccess=(e=>{console.info("****************wordlist added successful",e.target.result)}),t.onerror=(e=>{console.info("****************wordlist error with adding data",e.target)})})}get(e,t,o,s){const n=e.transaction([t]).objectStore(t);this.hasProperCondition(o)?this.getWithCondition(n,o,s):(console.info("There is not enough information for creating index condition"),this.getWithoutConditions(n,s))}hasProperCondition(e){return e.indexName&&e.value&&e.type&&["only"].includes(e.type)}getWithoutConditions(e,t){const o=e.openCursor(null);o.onsuccess=(e=>{const t=e.target.result;t&&(console.info("***************cursor no condition",t.key,t.value),t.continue())}),o.onerror=(e=>{console.info("****************cursor without condition - some error",e.target)})}getWithCondition(e,t,o){const s=e.index(t.indexName),n=this.IDBKeyRange[t.type](t.value),i=s.getAll(n,0);i.onsuccess=(e=>{o(e.target.result)}),i.onerror=(e=>{console.info("****************cursor with condition - some error",e.target)})}}class wordlist_controller_WordlistController{constructor(e){this.userID=e,this.wordLists={},this.storageAdapter=new indexed_db_adapter_IndexedDBAdapter,this.createAvailableListsID()}static get langAliases(){return new Map([[i.Constants.LANG_LATIN,"Latin"],[i.Constants.LANG_GREEK,"Greek"],[i.Constants.LANG_ARABIC,"Arabic"],[i.Constants.LANG_PERSIAN,"Persian"],[i.Constants.LANG_GEEZ,"Ancient Ethiopic (Ge'ez)"]])}createAvailableListsID(){let e=[];Array.from(wordlist_controller_WordlistController.langAliases.keys()).forEach(t=>{let o=i.LanguageModelFactory.getLanguageCodeFromId(t);e.push(this.userID+"-"+o)}),this.availableLists=e}initLists(){this.storageAdapter.available&&this.storageAdapter.openDatabase(this.initDBStructure.bind(this),this.uploadListsFromDB.bind(this))}initDBStructure(e){const t=e.target.result.createObjectStore("UserLists",{keyPath:"ID"});t.createIndex("ID","ID",{unique:!0}),t.createIndex("userID","userID",{unique:!1}),t.createIndex("languageCode","languageCode",{unique:!1}),console.info("*******************UserLists Object store created")}uploadListsFromDB(e){const t=e.target.result;console.info("**************DB opened",t.name,t.version,t.objectStoreNames),this.availableLists.forEach(e=>{this.storageAdapter.get(t,"UserLists",{indexName:"ID",value:e,type:"only"},this.uploadResultToList.bind(this))})}uploadResultToList(e){e&&e.length>0&&(console.info("*****************uploadResultToList",e),e[0].wordItems.forEach(e=>{let t=e.lexemes[0].lemma,o=i.Lemma.readObject(t),s=[];e.lexemes[0].inflections.forEach(e=>{s.push(i.Inflection.readObject(e,o))}),console.info("******************lemmaTest",o),console.info("******************inflectionsTest",s)}))}createWordList(e,t=!1){let o=i.LanguageModelFactory.getLanguageCodeFromId(e),s=new word_list_WordList(this.userID,e,this.storageAdapter);this.wordLists[o]=s}updateWordList(e){let t=e.languageID,o=i.LanguageModelFactory.getLanguageCodeFromId(t);Object.keys(this.wordLists).includes(o)||this.createWordList(t),console.info("*****************updateWordList",e),this.wordLists[o].push(new word_item_WordItem(e),!0)}onHomonymReady(e){console.info("******************onHomonymReady start"),this.updateWordList(e.homonym),console.info("******************onHomonymReady finish")}onDefinitionsReady(e){let t=e.homonym.lexemes[0].meaning.fullDefs,o=t&&t.length>0?t[0].text.substr(0,10)+"...":"<no text>";console.info("******************onDefinitionsReady start",o),this.updateWordList(e.homonym),console.info("******************onDefinitionsReady finish")}}wordlist_controller_WordlistController.evt={WORDLIST_UPDATED:new i.PsEvent("Wordlist updated",wordlist_controller_WordlistController)};var l=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"alpheios-wordlist"},e._l(e.languagesList,function(t,s){return o("div",{key:s,staticClass:"alpheios-wordlist-language"},[o("word-language-panel",{attrs:{wordlist:e.wordLists[t],messages:e.l10n.messages,updated:e.updated}})],1)}),0)};l._withStripped=!0;var d=o(9),c=o.n(d);class message_Message{constructor(e,t){if(!t)throw new Error("Locale data is missing");if(!e)throw new Error("Message data is missing");this.locale=t;for(const t of Object.keys(e))this[t]=e[t];this.formatFunc=new c.a(e.message,this.locale)}get hasParameters(){return!!(this.params&&Array.isArray(this.params)&&this.params.length>0)}defineProperties(e,t){let o=this;this.hasParameters?e[t]={format:e=>o.formatFunc.format(e),get(...e){let t={};for(let[s,n]of o.params.entries())t[n]=e[s];return o.formatFunc.format(t)}}:Object.defineProperty(e,t,{get:()=>o.formatFunc.format(),enumerable:!0,configurable:!0})}}class message_bundle_MessageBundle{constructor(e,t){if(!t)throw new Error("Locale data is missing");if(!e)throw new Error("Message data is missing");this._locale=t,this.messages={};let o="string"==typeof e?JSON.parse(e):e;this.append(o)}appendFromJSON(e){let t=JSON.parse(e);this.append(t)}append(e){for(const[t,o]of Object.entries(e))if(this.hasOwnProperty(t))console.warn(`A key name "${t}" is reserved or already used. A message will be ignored"`);else{let e=new message_Message(o,this._locale);this[t]=e,e.defineProperties(this.messages,t)}}get(e,t){return this[e]?"function"==typeof this[e].format?this[e].format(t):this[e]:`Not in translation data: "${e}"`}get locale(){return this._locale}}var u=o(4),p=o(5),m="en-US",h="en-GB",g=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("div",{staticClass:"alpheios-wordlist-commands"},[o("div",{staticClass:"alpheios-wordlist-language__title"},[e._v(e._s(e.languageName))]),e._v(" "),o("alph-tooltip",{attrs:{tooltipDirection:"top-left",tooltipText:e.messages.TOOLTIP_ALL_IMPORTANT}},[o("div",{staticClass:"alpheios-wordlist-commands__item alpheios-wordlist-commands__item-all-important",on:{click:function(t){e.makeAllImportant()}}},[o("check-icon")],1)]),e._v(" "),o("alph-tooltip",{attrs:{tooltipDirection:"top-left",tooltipText:e.messages.TOOLTIP_NO_IMPORTANT}},[o("div",{staticClass:"alpheios-wordlist-commands__item alpheios-wordlist-commands__item-no-important",on:{click:function(t){e.removeAllImportant()}}},[o("check-icon")],1)])],1),e._v(" "),e._l(e.wordItems,function(e){return o("div",{key:e.ID,staticClass:"alpheios-wordlist-language__worditem"},[o("word-item-panel",{attrs:{worditem:e}})],1)})],2)};g._withStripped=!0;var f=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"alpheios-tooltip",style:e.additionalStyles},[e._t("default"),e._v(" "),e.tooltipText?o("span",{staticClass:"alpheios-tooltip__text",class:e.finalTooltipDirection},[e._v("\n    "+e._s(e.tooltipText)+"\n  ")]):e._e()],2)};f._withStripped=!0;var _={name:"TooltipWrap",data:()=>({allowedTooltipClasses:["alpheios-tooltip__top","alpheios-tooltip__top-right","alpheios-tooltip__top-left","alpheios-tooltip__bottom","alpheios-tooltip__bottom-right","alpheios-tooltip__bottom-wide","alpheios-tooltip__bottom-narrow","alpheios-tooltip__bottom-narrow2","alpheios-tooltip__left","alpheios-tooltip__right"],defaultTooltipClass:"alpheios-tooltip__bottom"}),props:{tooltipText:{type:String,required:!0},tooltipDirection:{type:String,required:!1},additionalStyles:{type:Object,required:!1}},computed:{tooltipDirectionLC:function(){return this.tooltipDirection?this.tooltipDirection.toLowerCase():""},tooltipDirectionClass:function(){return"alpheios-tooltip__"+this.tooltipDirectionLC},finalTooltipDirection:function(){return this.allowedTooltipClasses.indexOf(this.tooltipDirectionClass)>-1?this.tooltipDirectionClass:this.defaultTooltipClass}}};o(13);function w(e,t,o,s,n,i,r,a){var l,d="function"==typeof e?e.options:e;if(t&&(d.render=t,d.staticRenderFns=o,d._compiled=!0),s&&(d.functional=!0),i&&(d._scopeId="data-v-"+i),r?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),n&&n.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},d._ssrRegister=l):n&&(l=a?function(){n.call(this,this.$root.$options.shadowRoot)}:n),l)if(d.functional){d._injectStyles=l;var c=d.render;d.render=function(e,t){return l.call(t),c(e,t)}}else{var u=d.beforeCreate;d.beforeCreate=u?[].concat(u,l):[l]}return{exports:e,options:d}}var v=w(_,f,[],!1,null,null,null);v.options.__file="vue-components/common-components/tooltip-wrap.vue";var b=v.exports,I=o(6),y=o.n(I),L=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{class:e.itemClasses},[o("div",{staticClass:"alpheios-worditem__data alpheios-worditem__important",on:{click:function(t){e.changeImportant()}}},[o("check-icon")],1),e._v(" "),o("div",{staticClass:"alpheios-worditem__data alpheios-worditem__targetWord"},[e._v(e._s(e.worditem.targetWord))]),e._v(" "),o("div",{staticClass:"alpheios-worditem__data alpheios-worditem__lemmasList"},[e._v(e._s(e.worditem.lemmasList))])])};L._withStripped=!0;var D={name:"WordItemPanel",components:{checkIcon:y.a},props:{worditem:{type:Object,required:!0}},data:()=>({important:!1}),mounted(){this.important=this.worditem.important,this.$parent.$on("eventChangeImportant",this.eventChangeImportant)},computed:{itemClasses(){return{active:this.important}}},methods:{changeImportant(){this.worditem.important=!this.worditem.important,this.important=this.worditem.important},eventChangeImportant(){this.important=this.worditem.important}}},C=(o(14),w(D,L,[],!1,null,null,null));C.options.__file="vue-components/word-item-panel.vue";var A=C.exports,x=w({name:"WordListPanel",components:{checkIcon:y.a,wordItemPanel:A,alphTooltip:b},props:{wordlist:{type:Object,required:!0},messages:{type:Object,required:!0},updated:{type:Number,required:!0}},computed:{wordItems(){return this.updated?this.wordlist.values:[]},languageName(){let e=new Map([[i.Constants.LANG_LATIN,"Latin"],[i.Constants.LANG_GREEK,"Greek"],[i.Constants.LANG_ARABIC,"Arabic"],[i.Constants.LANG_PERSIAN,"Persian"],[i.Constants.LANG_GEEZ,"Ancient Ethiopic (Ge'ez)"]]),t=this.wordlist.languageID;return e.has(t)?e.get(t):""}},methods:{makeAllImportant(){this.wordlist.makeAllImportant(),this.$emit("eventChangeImportant")},removeAllImportant(){this.wordlist.removeAllImportant(),this.$emit("eventChangeImportant")}}},g,[],!1,null,null,null);x.options.__file="vue-components/word-language-panel.vue";var T={name:"WordListPanel",components:{wordLanguagePanel:x.exports},props:{wordlistC:{type:Object,required:!0},updated:{type:Number,required:!0}},computed:{languagesList(){return this.updated&&Object.keys(this.wordLists).length>0?Object.keys(this.wordLists):[]},l10n:()=>(new class{constructor(){return this.selectedLocale=void 0,this.bundles=new Map,this}addMessages(e,t){let o;return this.bundles.has(t)?(o=this.bundles.get(t)).appendFromJSON(e):(o=new message_bundle_MessageBundle(e,t),this.addMessageBundle(o)),this}addMessageBundle(e){return this.bundles.set(e.locale,e),this.selectedLocale||this.setLocale(e.locale),this}get locales(){return Array.from(this.bundles.keys())}get bundle(){return this.bundles.get(this.selectedLocale)}get messages(){return this.bundles.has(this.selectedLocale)?this.bundles.get(this.selectedLocale).messages:{}}setLocale(e){return this.bundles.has(e)?this.selectedLocale=e:console.error(`Cannot set locale to "${e}" because there is no message bundle for it`),this}}).addMessages(u,m).addMessages(p,h).setLocale(m),wordLists(){return this.wordlistC.wordLists}},methods:{}},S=(o(15),w(T,l,[],!1,null,null,null));S.options.__file="vue-components/word-list-panel.vue";var O=S.exports;o.d(t,"Style",function(){return n.a}),o.d(t,"WordlistController",function(){return wordlist_controller_WordlistController}),o.d(t,"WordListPanel",function(){return O})}])});